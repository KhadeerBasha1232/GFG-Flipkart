{
  "code": "//Initial template for C++ \r\n \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n//User function template for C++\r\n\r\nclass Solution{\r\n  public:\t\t\r\n\tint lps(string s) {\r\n\t    // Your code goes here\r\n\t    vector<int>lps(s.size(),0);\r\n\t    int pre=0,suf=1;\r\n\t    while(suf<s.size())\r\n\t    {\r\n\t        //matched\r\n\t        if(s[pre]==s[suf])\r\n\t        {\r\n\t            lps[suf]=pre+1;\r\n\t            pre++,suf++;\r\n\t        }\r\n\t        //not matched\r\n\t        else\r\n\t        {\r\n\t            if(pre==0)\r\n\t            {\r\n\t                lps[suf]=0;\r\n\t                suf++;\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            pre = lps[pre-1];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    return lps[s.size()-1];\r\n\t    \r\n\t}\r\n\t\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() \r\n{\r\n   \r\n\r\n   \tios_base::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n   \r\n   \tint t;\r\n   \tcin >> t;\r\n   \twhile(t--)\r\n   \t{\r\n   \t\tstring str;\r\n   \t\tcin >> str;\r\n\r\n   \t\tSolution ob;\r\n\r\n   \t\tcout << ob.lps(str) << \"\\n\";\r\n   \t}\r\n\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n//User function template for C++\r\n\r\nclass Solution{\r\n  public:\t\t\r\n\tint lps(string s) {\r\n\t    // Your code goes here\r\n\t    vector<int>lps(s.size(),0);\r\n\t    int pre=0,suf=1;\r\n\t    while(suf<s.size())\r\n\t    {\r\n\t        //matched\r\n\t        if(s[pre]==s[suf])\r\n\t        {\r\n\t            lps[suf]=pre+1;\r\n\t            pre++,suf++;\r\n\t        }\r\n\t        //not matched\r\n\t        else\r\n\t        {\r\n\t            if(pre==0)\r\n\t            {\r\n\t                lps[suf]=0;\r\n\t                suf++;\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            pre = lps[pre-1];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    return lps[s.size()-1];\r\n\t    \r\n\t}\r\n\t\r\n};\r\n"
}