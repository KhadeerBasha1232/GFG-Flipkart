{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nimport java.lang.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(read.readLine());\r\n            String input_line[] = read.readLine().trim().split(\"\\\\s+\");\r\n            int pages[]= new int[N];\r\n            for(int i = 0; i < N; i++)\r\n                pages[i] = Integer.parseInt(input_line[i]);\r\n            int C = Integer.parseInt(read.readLine());\r\n\r\n            Solution ob = new Solution();\r\n            System.out.println(ob.pageFaults(N, C, pages));\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static int pageFaults(int N, int C, int pages[]){\r\n        // code here\r\n        Queue<Integer> q = new LinkedList<Integer>();\r\n        int count =0;\r\n        for(int i=0;i<N;i++)\r\n        {\r\n            if(!q.contains(pages[i]))\r\n            {\r\n                count++;\r\n                q.add(pages[i]);\r\n                if(q.size()>C)\r\n                    q.remove();\r\n            }\r\n            else\r\n            {\r\n                q.remove(pages[i]);\r\n                q.add(pages[i]);\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static int pageFaults(int N, int C, int pages[]){\r\n        // code here\r\n        Queue<Integer> q = new LinkedList<Integer>();\r\n        int count =0;\r\n        for(int i=0;i<N;i++)\r\n        {\r\n            if(!q.contains(pages[i]))\r\n            {\r\n                count++;\r\n                q.add(pages[i]);\r\n                if(q.size()>C)\r\n                    q.remove();\r\n            }\r\n            else\r\n            {\r\n                q.remove(pages[i]);\r\n                q.add(pages[i]);\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}"
}