{
  "code": "\r\n'''\r\n# Linked List Node \r\nclass Node: \r\n    def __init__(self, d): \r\n        self.data = d \r\n        self.next = None\r\n        '''\r\nclass Solution:    \r\n    def rearrangeEvenOdd(self, head):\r\n        if not head.next:return head\r\n        odd = head\r\n        even = head.next\r\n        connect = even\r\n        while even.next and odd.next:\r\n            odd.next = even.next\r\n            odd = odd.next\r\n            if odd.next:\r\n                even.next = odd.next\r\n                even = even.next\r\n            else:\r\n                even.next = None\r\n        odd.next = connect\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n# Python3 program to rearrange a linked list \r\n# in such a way that all odd positioned \r\n# node are stored before all even positioned nodes \r\n# Linked List Node \r\nclass Node: \r\n    def __init__(self, d): \r\n        self.data = d \r\n        self.next = None\r\n\r\nclass LinkedList: \r\n    def __init__(self): \r\n        self.head = None\r\n        \r\n    # A utility function to create \r\n    # a new node \r\n    def newNode(self, key): \r\n        temp = Node(key) \r\n        self.next = None\r\n        return temp \r\n\r\n    # Rearranges given linked list \r\n    # such that all even positioned \r\n    # nodes are before odd positioned. \r\n    # Returns new head of linked List. \r\n    \r\n\r\n    # A utility function to print a linked list \r\n    def printlist(self, node): \r\n        while (node != None): \r\n            print(node.data, end = \" \") \r\n            node = node.next\r\n        \r\n    # Function to insert a new node \r\n    # at the beginning \r\n    def push(self, new_data): \r\n        new_node = Node(new_data) \r\n        new_node.next = self.head \r\n        self.head = new_node \r\n\r\n# Driver code \r\nif __name__ == '__main__':\r\n    t=int(input())\r\n    for cases in range(t):\r\n        n=int(input())\r\n        a=list(map(int,input().split()))\r\n        ll = LinkedList() \r\n        for i in range(n-1,-1,-1):\r\n            ll.push(a[i])\r\n        Solution(). rearrangeEvenOdd(ll.head) \r\n        ll.printlist(ll.head) \r\n        print()\r\n\r\n# This code is contributed by Prerna Saini \r\n\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\n'''\r\n# Linked List Node \r\nclass Node: \r\n    def __init__(self, d): \r\n        self.data = d \r\n        self.next = None\r\n        '''\r\nclass Solution:    \r\n    def rearrangeEvenOdd(self, head):\r\n        if not head.next:return head\r\n        odd = head\r\n        even = head.next\r\n        connect = even\r\n        while even.next and odd.next:\r\n            odd.next = even.next\r\n            odd = odd.next\r\n            if odd.next:\r\n                even.next = odd.next\r\n                even = even.next\r\n            else:\r\n                even.next = None\r\n        odd.next = connect\r\n\r\n\r\n"
}