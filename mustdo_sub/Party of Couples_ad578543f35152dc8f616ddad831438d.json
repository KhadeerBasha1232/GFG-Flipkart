{
  "code": "//Initial template for C++\r\n\r\n#include<bits/stdc++.h> \r\nusing namespace std; \r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    int findSingle(int N, int arr[]){\r\n        // code here\r\n        int res=arr[0];\r\n        for(int i=01;i<N;i++){\r\n            res^=arr[i];\r\n\r\n        }\r\n        return res;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() \r\n{ \r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int N, X;\r\n        cin >> N;\r\n        int arr[N];\r\n        for(int i = 0; i < N; i++){\r\n            cin >> arr[i];\r\n        }\r\n        \r\n        Solution ob;\r\n        cout << ob.findSingle(N, arr) << endl;\r\n    }\r\n    return 0; \r\n} \r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    int findSingle(int N, int arr[]){\r\n        // code here\r\n        int res=arr[0];\r\n        for(int i=01;i<N;i++){\r\n            res^=arr[i];\r\n\r\n        }\r\n        return res;\r\n    }\r\n};\r\n"
}