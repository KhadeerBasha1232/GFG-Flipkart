{
  "code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t\ttry {\r\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\tint t = Integer.parseInt(br.readLine());\r\n\t\t\twhile (t-- > 0) {\r\n\t\t\t\tString str = br.readLine();\r\n\t\t\t\tSolution ob= new Solution();\r\n\t\t\t\tString str1 = ob. rearrangeCharacters(str);\r\n\t\t\t\t\r\n        \t\tint flag=1;\r\n        \t    int[] c = new int[26];\r\n        \t    Arrays.fill(c,0);\r\n        \t    for(int i=0; i<str.length(); i++)\r\n        \t        c[str.charAt(i)-'a']+=1;\r\n        \t    int f = 0;\r\n        \t    int x = (str.length()+1)/2;\r\n        \t    for(int i=0; i<26; i++)\r\n        \t    {\r\n        \t        if(c[i]>x)\r\n        \t            f = 1;\r\n        \t    }\r\n        \t    if(f == 1)\r\n        \t    {\r\n        \t        if(str1==\"-1\")\r\n        \t            System.out.println(0);\r\n            \t    else\r\n            \t        System.out.println(1);\r\n        \t    }\r\n        \t    else\r\n        \t    {\r\n            \t    int[] a = new int[26];\r\n        \t        Arrays.fill(a,0);\r\n            \t    int[] b = new int[26];\r\n        \t        Arrays.fill(b,0);\r\n            \t    for(int i=0; i<str.length(); i++)\r\n            \t        a[str.charAt(i)-'a']+=1;\r\n            \t    for(int i=0; i<str1.length(); i++)\r\n            \t        b[str1.charAt(i)-'a']+=1;\r\n            \t        \r\n            \t    for(int i=0; i<26; i++)\r\n            \t        if(a[i]!=b[i])\r\n            \t            flag = 0;\r\n            \t    \r\n            \t    for(int i=0;i<str1.length();i++)\r\n            \t    {\r\n            \t\t    if(i>0)\r\n            \t\t        if(str1.charAt(i-1)==str1.charAt(i))\r\n            \t\t\t        flag=0;\r\n            \t    }\r\n            \t    if(flag==1)\r\n            \t\t    System.out.println(1);\r\n            \t    else\r\n            \t        System.out.println(0);\r\n        \t    }\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Node{\r\n    char ch;\r\n    int f;\r\n    Node(char ch,int f){\r\n        this.ch=ch;\r\n        this.f=f;\r\n    }\r\n}\r\nclass Solution\r\n{\r\n\tpublic static String rearrangeCharacters(String str) {\r\n\t\r\n\tHashMap<Character,Integer>hm=new HashMap<>();\r\n\tfor(char ch:str.toCharArray()){\r\n\t    hm.put(ch,hm.getOrDefault(ch,0)+1);\r\n\t}\r\n\tPriorityQueue<Node>pq=new PriorityQueue<>((a,b)->{\r\n\t    return b.f-a.f;\r\n\t});\r\n\tfor(char ch:hm.keySet()){\r\n\t    pq.add(new Node(ch,hm.get(ch)));\r\n\t}\r\n\tString ans=\"\";\r\n\twhile(pq.size()>1){\r\n\t    Node first=pq.poll();\r\n\t    Node second=pq.poll();\r\n\t    ans+=first.ch;\r\n\t    ans+=second.ch;\r\n\t    first.f=first.f-1;\r\n\t    second.f=second.f-1;\r\n\t    if(first.f>0) pq.add(first);\r\n\t    if(second.f>0) pq.add(second);\r\n\t}\r\n\tif(pq.size()>0){\r\n\t    Node first=pq.poll();\r\n\t    if(first.f>1){\r\n\t        return \"-1\";\r\n\t    }\r\n\t    else{\r\n\t        ans+=first.ch;\r\n\t    }\r\n\t}\r\n\treturn ans;\r\n\t    \r\n\t}\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Node{\r\n    char ch;\r\n    int f;\r\n    Node(char ch,int f){\r\n        this.ch=ch;\r\n        this.f=f;\r\n    }\r\n}\r\nclass Solution\r\n{\r\n\tpublic static String rearrangeCharacters(String str) {\r\n\t\r\n\tHashMap<Character,Integer>hm=new HashMap<>();\r\n\tfor(char ch:str.toCharArray()){\r\n\t    hm.put(ch,hm.getOrDefault(ch,0)+1);\r\n\t}\r\n\tPriorityQueue<Node>pq=new PriorityQueue<>((a,b)->{\r\n\t    return b.f-a.f;\r\n\t});\r\n\tfor(char ch:hm.keySet()){\r\n\t    pq.add(new Node(ch,hm.get(ch)));\r\n\t}\r\n\tString ans=\"\";\r\n\twhile(pq.size()>1){\r\n\t    Node first=pq.poll();\r\n\t    Node second=pq.poll();\r\n\t    ans+=first.ch;\r\n\t    ans+=second.ch;\r\n\t    first.f=first.f-1;\r\n\t    second.f=second.f-1;\r\n\t    if(first.f>0) pq.add(first);\r\n\t    if(second.f>0) pq.add(second);\r\n\t}\r\n\tif(pq.size()>0){\r\n\t    Node first=pq.poll();\r\n\t    if(first.f>1){\r\n\t        return \"-1\";\r\n\t    }\r\n\t    else{\r\n\t        ans+=first.ch;\r\n\t    }\r\n\t}\r\n\treturn ans;\r\n\t    \r\n\t}\r\n}"
}