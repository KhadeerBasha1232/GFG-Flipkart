{
  "code": "//Initial template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\nclass Solution {\r\n  public:\r\n    void shortest_distance(vector<vector<int>>&matrix){\r\n        int n=matrix.size();\r\n        for(int via=0;via<n;via++){\r\n            for(int i=0;i<n;i++){\r\n                for(int j=0;j<n;j++){\r\n                    if((matrix[i][via]!=-1&&matrix[via][j]!=-1)&&(matrix[i][j]>matrix[i][via]+matrix[via][j]||matrix[i][j]==-1)){\r\n                        matrix[i][j]=matrix[i][via]+matrix[via][j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tvector<vector<int>>matrix(n, vector<int>(n, -1));\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tfor(int j = 0; j < n; j++){\r\n\t\t\t\tcin >> matrix[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tSolution obj;\r\n\t\tobj.shortest_distance(matrix);\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tfor(int j = 0; j < n; j++){\r\n\t\t\t\tcout << matrix[i][j] << \" \";\r\n\t\t\t}\r\n\t\t\tcout << \"\\n\";\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\nclass Solution {\r\n  public:\r\n    void shortest_distance(vector<vector<int>>&matrix){\r\n        int n=matrix.size();\r\n        for(int via=0;via<n;via++){\r\n            for(int i=0;i<n;i++){\r\n                for(int j=0;j<n;j++){\r\n                    if((matrix[i][via]!=-1&&matrix[via][j]!=-1)&&(matrix[i][j]>matrix[i][via]+matrix[via][j]||matrix[i][j]==-1)){\r\n                        matrix[i][j]=matrix[i][via]+matrix[via][j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"
}