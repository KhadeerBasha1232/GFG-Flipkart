{
  "code": "    def LexicographicallyMinimum(self, str):\r\n            A = str\r\n            s = sorted(set(A))\r\n            swap_a = None\r\n            swap_b = None\r\n            for item in A:\r\n                if ord(item) > ord(s[0]):\r\n                    swap_a = item\r\n                    swap_b = s[0]\r\n                    break\r\n                elif ord(item) == ord(s[0]): s.pop(0)\r\n                if len(s) == 0: return A\r\n            A = list(A)\r\n            for index in range(len(A)):\r\n                if A[index] == swap_a: A[index] = swap_b\r\n                elif A[index] == swap_b: A[index] = swap_a\r\n                \r\n            return \"\".join(A)\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\nif __name__ == '__main__':\r\n    T=int(input())\r\n    for i in range(T):\r\n        str = input()\r\n        ob = Solution()\r\n        ans = ob.LexicographicallyMinimum(str)\r\n        print(ans)\r\n\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "class Solution:\r\n    def LexicographicallyMinimum(self, str):\r\n            A = str\r\n            s = sorted(set(A))\r\n            swap_a = None\r\n            swap_b = None\r\n            for item in A:\r\n                if ord(item) > ord(s[0]):\r\n                    swap_a = item\r\n                    swap_b = s[0]\r\n                    break\r\n                elif ord(item) == ord(s[0]): s.pop(0)\r\n                if len(s) == 0: return A\r\n            A = list(A)\r\n            for index in range(len(A)):\r\n                if A[index] == swap_a: A[index] = swap_b\r\n                elif A[index] == swap_b: A[index] = swap_a\r\n                \r\n            return \"\".join(A)\r\n"
}