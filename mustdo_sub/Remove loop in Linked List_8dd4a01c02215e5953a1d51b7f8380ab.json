{
  "code": "// driver code\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass Node\r\n{\r\n    int data;\r\n    Node next;\r\n}\r\n\r\nclass GFG\r\n{\r\n    public static Node newNode(int data){\r\n        Node temp = new Node();\r\n        temp.data = data;\r\n        temp.next = null;\r\n        return temp;\r\n    }\r\n    \r\n    public static void makeLoop(Node head, int x){\r\n        if (x == 0)\r\n            return;\r\n        Node curr = head;\r\n        Node last = head;\r\n\r\n        int currentPosition = 1;\r\n        while (currentPosition < x)\r\n        {\r\n            curr = curr.next;\r\n            currentPosition++;\r\n        }\r\n        \r\n        while (last.next != null)\r\n            last = last.next;\r\n        last.next = curr;\r\n    }\r\n    \r\n    public static boolean detectLoop(Node head){\r\n        Node hare = head.next;\r\n        Node tortoise = head;\r\n        while( hare != tortoise )\r\n        {\r\n            if(hare==null || hare.next==null) return false;\r\n            hare = hare.next.next;\r\n            tortoise = tortoise.next;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public static int length(Node head){\r\n        int ret=0;\r\n        while(head!=null)\r\n        {\r\n            ret += 1;\r\n            head = head.next;\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    public static void main (String[] args){\r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while(t--> 0)\r\n        {\r\n            int n = sc.nextInt();\r\n            \r\n            int num = sc.nextInt();\r\n            Node head = newNode(num);\r\n            Node tail = head;\r\n            \r\n            for(int i=0; i<n-1; i++)\r\n            {\r\n                num = sc.nextInt();\r\n                tail.next = newNode(num);\r\n                tail = tail.next;\r\n            }\r\n            \r\n            int pos = sc.nextInt();\r\n            makeLoop(head, pos);\r\n            \r\n            Solution x = new Solution();\r\n            x.removeLoop(head);\r\n            \r\n            if( detectLoop(head) || length(head)!=n )\r\n                System.out.println(\"0\");\r\n            else\r\n                System.out.println(\"1\");\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n/*\r\nclass Node\r\n{\r\n    int data;\r\n    Node next;\r\n}\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public static void removeLoop(Node head){\r\n        if(head==null)\r\n        return;\r\n        Node slow=head;\r\n        Node fast=head;\r\n        int f=0;\r\n        while(fast!=null && fast.next!=null){\r\n            slow=slow.next;\r\n            fast=fast.next.next;\r\n             if(fast==slow){\r\n             f=1;\r\n             break;\r\n             }\r\n        }\r\n      if(fast==null || fast.next==null)\r\n      return;\r\n      slow=head;\r\n        while(fast!=slow){\r\n            fast=fast.next;\r\n            slow=slow.next;\r\n        }\r\n      while(slow!=fast.next){\r\n          fast=fast.next;\r\n      }\r\n      fast.next=null;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*\r\nclass Node\r\n{\r\n    int data;\r\n    Node next;\r\n}\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public static void removeLoop(Node head){\r\n        if(head==null)\r\n        return;\r\n        Node slow=head;\r\n        Node fast=head;\r\n        int f=0;\r\n        while(fast!=null && fast.next!=null){\r\n            slow=slow.next;\r\n            fast=fast.next.next;\r\n             if(fast==slow){\r\n             f=1;\r\n             break;\r\n             }\r\n        }\r\n      if(fast==null || fast.next==null)\r\n      return;\r\n      slow=head;\r\n        while(fast!=slow){\r\n            fast=fast.next;\r\n            slow=slow.next;\r\n        }\r\n      while(slow!=fast.next){\r\n          fast=fast.next;\r\n      }\r\n      fast.next=null;\r\n    }\r\n}"
}