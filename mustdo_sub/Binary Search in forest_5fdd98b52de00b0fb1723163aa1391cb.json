{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution{\r\n    public:\r\n    int find_height(int tree[], int n, int k)\r\n    {\r\n        // code here\r\n        sort(tree,tree+n);\r\n        int low=0,high=tree[n-1];\r\n        int ans=0;\r\n        while(low<=high)\r\n        {\r\n            ans=0;\r\n            int mid=(low+high)/2;\r\n            for(int i=0;i<n;i++)\r\n            {\r\n                if(tree[i]>mid)ans+=tree[i]-mid;\r\n            }\r\n            if(ans==k)return mid;\r\n            else if(ans>k)low=mid+1;\r\n            else high=mid-1;\r\n        }\r\n        return -1;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n,k;\r\n        cin>>n;\r\n\r\n        int tree[n];\r\n        for(int i=0; i<n; i++)\r\n            cin>>tree[i];\r\n        cin>>k;\r\n        Solution ob;\r\n        cout<< ob.find_height(tree,n,k) << endl;\r\n    }\r\n    return 1;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution{\r\n    public:\r\n    int find_height(int tree[], int n, int k)\r\n    {\r\n        // code here\r\n        sort(tree,tree+n);\r\n        int low=0,high=tree[n-1];\r\n        int ans=0;\r\n        while(low<=high)\r\n        {\r\n            ans=0;\r\n            int mid=(low+high)/2;\r\n            for(int i=0;i<n;i++)\r\n            {\r\n                if(tree[i]>mid)ans+=tree[i]-mid;\r\n            }\r\n            if(ans==k)return mid;\r\n            else if(ans>k)low=mid+1;\r\n            else high=mid-1;\r\n        }\r\n        return -1;\r\n    }\r\n};\r\n"
}