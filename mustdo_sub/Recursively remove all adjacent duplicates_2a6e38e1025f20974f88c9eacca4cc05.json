{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG {\r\n    public static void main (String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases\r\n        while(t-->0){\r\n            String S = br.readLine();\r\n            Solution ob = new Solution();\r\n            String ans = ob.rremove(S).trim();\r\n            if(ans.length() == 0)\r\n                System.out.println();\r\n            else\r\n                System.out.println(ans);\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution{\r\n    String rremove(String s) {\r\n        if(s.isEmpty()) return s;\r\n        StringBuilder ans = new StringBuilder();\r\n        helper(ans, s);\r\n        return ans.toString();\r\n    }\r\n    \r\n      void helper(StringBuilder sb, String s){\r\n        boolean [] adjacentFlag = new boolean[s.length()];\r\n        //tag adjacent as true;\r\n        for(int i = 1; i<s.length(); i++){\r\n            if(s.charAt(i -1) == s.charAt(i)){\r\n                adjacentFlag[i] = adjacentFlag[i - 1] =true;\r\n            }\r\n        }\r\n      \r\n        StringBuilder rem = new StringBuilder();\r\n        //find remaing elements not tagged as true\r\n        for(int i =0 ;i< adjacentFlag.length; i++){\r\n            if(!adjacentFlag[i]) rem.append(s.charAt(i));\r\n        }\r\n      \r\n        //0 Adjacent element(s) exist, return!\r\n        if(rem.length() == s.length()){\r\n            sb.append(s);\r\n            return;\r\n        }\r\n        helper(sb, rem.toString());\r\n    }\r\n\r\n\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution{\r\n    String rremove(String s) {\r\n        if(s.isEmpty()) return s;\r\n        StringBuilder ans = new StringBuilder();\r\n        helper(ans, s);\r\n        return ans.toString();\r\n    }\r\n    \r\n      void helper(StringBuilder sb, String s){\r\n        boolean [] adjacentFlag = new boolean[s.length()];\r\n        //tag adjacent as true;\r\n        for(int i = 1; i<s.length(); i++){\r\n            if(s.charAt(i -1) == s.charAt(i)){\r\n                adjacentFlag[i] = adjacentFlag[i - 1] =true;\r\n            }\r\n        }\r\n      \r\n        StringBuilder rem = new StringBuilder();\r\n        //find remaing elements not tagged as true\r\n        for(int i =0 ;i< adjacentFlag.length; i++){\r\n            if(!adjacentFlag[i]) rem.append(s.charAt(i));\r\n        }\r\n      \r\n        //0 Adjacent element(s) exist, return!\r\n        if(rem.length() == s.length()){\r\n            sb.append(s);\r\n            return;\r\n        }\r\n        helper(sb, rem.toString());\r\n    }\r\n\r\n\r\n}"
}