{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int maxBalls(int n, int m, vector<int> a, vector<int> b){\r\n        // code here\r\n        \r\n        // sum_a - max balls with current position on road a at index around i\r\n        // sum_b - max balls with current position on road b at index around j\r\n        int i=0, j=0, sum_a=0, sum_b=0; \r\n        \r\n        while(i<n && j<m) {\r\n            if(a[i]<b[j]) {\r\n                sum_a+=a[i++];\r\n            }\r\n            else if(b[j]<a[i]) {\r\n                sum_b+=b[j++];\r\n            }\r\n            else {\r\n                int x=a[i], cnt1=0, cnt2=0;\r\n                for(; i<n && x==a[i]; ++i) cnt1++;\r\n                for(; j<m && x==b[j]; ++j) cnt2++;\r\n                \r\n                // a_to_b max balls that can be collected while switching from road a to b\r\n                // ...similarly for b_to_a, a_to_a, b_to_b\r\n                int a_to_b=0, b_to_a=0, a_to_a=0, b_to_b=0;\r\n                if(cnt1==1 && cnt2==1) {\r\n                    a_to_a=x;\r\n                    a_to_b=x;\r\n                    b_to_a=x;\r\n                    b_to_b=x;\r\n                }\r\n                else if(cnt1==1) {\r\n                    a_to_a=x*(cnt2-1);\r\n                    a_to_b=x*cnt2;\r\n                    b_to_a=x*cnt2;\r\n                    b_to_b=x*cnt2;\r\n                }\r\n                else if(cnt2==1) {\r\n                    a_to_a=x*cnt1;\r\n                    a_to_b=x*cnt1;\r\n                    b_to_a=x*cnt1;\r\n                    b_to_b=x*(cnt1-1);\r\n                }\r\n                else {\r\n                    a_to_a=x*(cnt1+cnt2-2);\r\n                    a_to_b=x*(cnt1+cnt2-1);\r\n                    b_to_a=x*(cnt1+cnt2-1);\r\n                    b_to_b=x*(cnt1+cnt2-2);\r\n                }\r\n                \r\n                int sum1=max(sum_a+a_to_a, sum_b+b_to_a), sum2=max(sum_b+b_to_b, sum_a+a_to_b);\r\n                sum_a=sum1;\r\n                sum_b=sum2;\r\n            }\r\n        }\r\n        \r\n        for(; i<n; ++i) sum_a+=a[i];\r\n        for(; j<m; ++j) sum_b+=b[j];\r\n        \r\n        return max(sum_a, sum_b);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N, M;\r\n        cin>>N>>M;\r\n        vector<int> a(N), b(M);\r\n        for(int i = 0;i < N;i++)\r\n            cin>>a[i];\r\n        for(int i = 0;i < M;i++)\r\n            cin>>b[i];\r\n        \r\n        Solution ob;\r\n        cout<<ob.maxBalls(N, M, a, b)<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int maxBalls(int n, int m, vector<int> a, vector<int> b){\r\n        // code here\r\n        \r\n        // sum_a - max balls with current position on road a at index around i\r\n        // sum_b - max balls with current position on road b at index around j\r\n        int i=0, j=0, sum_a=0, sum_b=0; \r\n        \r\n        while(i<n && j<m) {\r\n            if(a[i]<b[j]) {\r\n                sum_a+=a[i++];\r\n            }\r\n            else if(b[j]<a[i]) {\r\n                sum_b+=b[j++];\r\n            }\r\n            else {\r\n                int x=a[i], cnt1=0, cnt2=0;\r\n                for(; i<n && x==a[i]; ++i) cnt1++;\r\n                for(; j<m && x==b[j]; ++j) cnt2++;\r\n                \r\n                // a_to_b max balls that can be collected while switching from road a to b\r\n                // ...similarly for b_to_a, a_to_a, b_to_b\r\n                int a_to_b=0, b_to_a=0, a_to_a=0, b_to_b=0;\r\n                if(cnt1==1 && cnt2==1) {\r\n                    a_to_a=x;\r\n                    a_to_b=x;\r\n                    b_to_a=x;\r\n                    b_to_b=x;\r\n                }\r\n                else if(cnt1==1) {\r\n                    a_to_a=x*(cnt2-1);\r\n                    a_to_b=x*cnt2;\r\n                    b_to_a=x*cnt2;\r\n                    b_to_b=x*cnt2;\r\n                }\r\n                else if(cnt2==1) {\r\n                    a_to_a=x*cnt1;\r\n                    a_to_b=x*cnt1;\r\n                    b_to_a=x*cnt1;\r\n                    b_to_b=x*(cnt1-1);\r\n                }\r\n                else {\r\n                    a_to_a=x*(cnt1+cnt2-2);\r\n                    a_to_b=x*(cnt1+cnt2-1);\r\n                    b_to_a=x*(cnt1+cnt2-1);\r\n                    b_to_b=x*(cnt1+cnt2-2);\r\n                }\r\n                \r\n                int sum1=max(sum_a+a_to_a, sum_b+b_to_a), sum2=max(sum_b+b_to_b, sum_a+a_to_b);\r\n                sum_a=sum1;\r\n                sum_b=sum2;\r\n            }\r\n        }\r\n        \r\n        for(; i<n; ++i) sum_a+=a[i];\r\n        for(; j<m; ++j) sum_b+=b[j];\r\n        \r\n        return max(sum_a, sum_b);\r\n    }\r\n};\r\n"
}