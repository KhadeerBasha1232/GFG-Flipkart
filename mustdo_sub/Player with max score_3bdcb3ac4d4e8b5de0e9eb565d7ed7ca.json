{
  "code": "//Initial template for C++\r\n\r\n#include<bits/stdc++.h> \r\nusing namespace std; \r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{   \r\npublic:\r\n\r\n    bool is1winner(int n , int arr[]) {\r\n        \r\n        int totalScore = 0;\r\n        \r\n        for(int i=0 ; i<n ; i++)\r\n        totalScore += arr[i];\r\n        \r\n        vector<vector<int>> dp(n+2 , vector<int> (n , 0));\r\n        \r\n        for(int i=n-1 ; i>=0 ; i--){\r\n            for(int j=0 ; j<n ; j++){\r\n                \r\n                if(i>j) continue;\r\n                \r\n                int left = arr[i] + min(dp[i+2][j] , dp[i+1][j-1]);\r\n                int right = arr[j] + min(dp[i][j-2] , dp[i+1][j-1]);\r\n                \r\n                dp[i][j] = max(left , right);\r\n            }\r\n        }\r\n        \r\n        int score = dp[0][n-1];\r\n        \r\n        return score >= (totalScore-score);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() \r\n{ \r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int N, X;\r\n        cin >> N;\r\n        int arr[N];\r\n        for(int i = 0; i < N; i++){\r\n            cin >> arr[i];\r\n        }\r\n        \r\n        Solution ob;\r\n        cout << ob.is1winner(N, arr) << endl;\r\n    }\r\n    return 0; \r\n} \r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{   \r\npublic:\r\n\r\n    bool is1winner(int n , int arr[]) {\r\n        \r\n        int totalScore = 0;\r\n        \r\n        for(int i=0 ; i<n ; i++)\r\n        totalScore += arr[i];\r\n        \r\n        vector<vector<int>> dp(n+2 , vector<int> (n , 0));\r\n        \r\n        for(int i=n-1 ; i>=0 ; i--){\r\n            for(int j=0 ; j<n ; j++){\r\n                \r\n                if(i>j) continue;\r\n                \r\n                int left = arr[i] + min(dp[i+2][j] , dp[i+1][j-1]);\r\n                int right = arr[j] + min(dp[i][j-2] , dp[i+1][j-1]);\r\n                \r\n                dp[i][j] = max(left , right);\r\n            }\r\n        }\r\n        \r\n        int score = dp[0][n-1];\r\n        \r\n        return score >= (totalScore-score);\r\n    }\r\n};\r\n"
}