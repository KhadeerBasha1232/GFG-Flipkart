{
  "code": "/*package whatever //do not write package name here */\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass GFG {\r\n    \r\n\tpublic static void main (String[] args) throws IOException {\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        PrintWriter ot = new PrintWriter(System.out);\r\n\t\tint t = Integer.parseInt(br.readLine().trim());\r\n\t\twhile(t-->0){\r\n\t\t    int n = Integer.parseInt(br.readLine().trim());\r\n\t\t    String inputLine[] = br.readLine().trim().split(\" \");\r\n\t\t    long[] arr = new long[n];\r\n\t\t    for(int i=0; i<n; i++)arr[i]=Long.parseLong(inputLine[i]);\r\n\t\t    Solution ob = new Solution();\r\n\t\t    long[] res = ob.nextLargerElement(arr, n);\r\n\t\t    for (int i = 0; i < n; i++) \r\n\t\t        ot.print(res[i] + \" \");\r\n\t\t    ot.println();\r\n\t\t}\r\n        ot.close();\r\n\t}\r\n}\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n// User Function Template for JAVA\r\n\r\nclass Solution{\r\n    public static long[] nextLargerElement(long[] arr, int n) { \r\n        // Your code here\r\n        \r\n        \r\n     Stack<Integer> s = new Stack<>();\r\n        long ans[] = new long[n];\r\n\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            while (!s.isEmpty() && arr[s.peek()] <= arr[i]) {\r\n                s.pop();\r\n            }\r\n            if (s.isEmpty()) {\r\n                ans[i] = -1;\r\n            } else {\r\n                ans[i] = arr[s.peek()];\r\n            }\r\n            s.push(i);\r\n        }\r\n\r\n        return ans;\r\n    } \r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User Function Template for JAVA\r\n\r\nclass Solution{\r\n    public static long[] nextLargerElement(long[] arr, int n) { \r\n        // Your code here\r\n        \r\n        \r\n     Stack<Integer> s = new Stack<>();\r\n        long ans[] = new long[n];\r\n\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            while (!s.isEmpty() && arr[s.peek()] <= arr[i]) {\r\n                s.pop();\r\n            }\r\n            if (s.isEmpty()) {\r\n                ans[i] = -1;\r\n            } else {\r\n                ans[i] = arr[s.peek()];\r\n            }\r\n            s.push(i);\r\n        }\r\n\r\n        return ans;\r\n    } \r\n}"
}