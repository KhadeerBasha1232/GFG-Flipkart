{
  "code": "#include <stdio.h>\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n/* Function to print an array */\r\nvoid printArray(int arr[], int size)\r\n{\r\n    int i;\r\n    for (i=0; i < size; i++)\r\n        printf(\"%d \", arr[i]);\r\n    printf(\"\\n\");\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    void merge(int arr[], int l, int m, int r)\r\n    {\r\n         // Your code here\r\n         int n1 = m-l+1;\r\n         int n2 = r-m;\r\n         int left[n1];\r\n         int right[n2];\r\n         \r\n         for(int i=0;i<n1;i++){\r\n             left[i] = arr[l+i];\r\n         }\r\n         \r\n         for(int i=0;i<n2;i++){\r\n             right[i] = arr[m+1+i];\r\n         }\r\n         \r\n         int k=l, i=0, j=0;\r\n         while(i < n1 && j<n2){\r\n             if(left[i] < right[j]){\r\n                 arr[k] = left[i];\r\n                 i++;\r\n             }\r\n             else{\r\n                 arr[k] = right[j];\r\n                 j++;\r\n             }\r\n             k++;\r\n         }\r\n         \r\n         for(;i<n1;i++){\r\n             arr[k] = left[i];\r\n             k++;\r\n         }\r\n         \r\n         for(;j<n2;j++){\r\n             arr[k] = right[j];\r\n             k++;\r\n         }\r\n    }\r\n    public:\r\n    void mergeSort(int arr[], int l, int r)\r\n    {\r\n        //code here\r\n        if(l < r){\r\n            int mid = (l + r)/2;\r\n            mergeSort(arr,l,mid);\r\n            mergeSort(arr,mid+1,r);\r\n            merge(arr,l,mid,r);\r\n        }\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\n\r\nint main()\r\n{\r\n    int n,T,i;\r\n\r\n    scanf(\"%d\",&T);\r\n\r\n    while(T--){\r\n    \r\n    scanf(\"%d\",&n);\r\n    int arr[n+1];\r\n    for(i=0;i<n;i++)\r\n      scanf(\"%d\",&arr[i]);\r\n\r\n    Solution ob;\r\n    ob.mergeSort(arr, 0, n-1);\r\n    printArray(arr, n);\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    void merge(int arr[], int l, int m, int r)\r\n    {\r\n         // Your code here\r\n         int n1 = m-l+1;\r\n         int n2 = r-m;\r\n         int left[n1];\r\n         int right[n2];\r\n         \r\n         for(int i=0;i<n1;i++){\r\n             left[i] = arr[l+i];\r\n         }\r\n         \r\n         for(int i=0;i<n2;i++){\r\n             right[i] = arr[m+1+i];\r\n         }\r\n         \r\n         int k=l, i=0, j=0;\r\n         while(i < n1 && j<n2){\r\n             if(left[i] < right[j]){\r\n                 arr[k] = left[i];\r\n                 i++;\r\n             }\r\n             else{\r\n                 arr[k] = right[j];\r\n                 j++;\r\n             }\r\n             k++;\r\n         }\r\n         \r\n         for(;i<n1;i++){\r\n             arr[k] = left[i];\r\n             k++;\r\n         }\r\n         \r\n         for(;j<n2;j++){\r\n             arr[k] = right[j];\r\n             k++;\r\n         }\r\n    }\r\n    public:\r\n    void mergeSort(int arr[], int l, int r)\r\n    {\r\n        //code here\r\n        if(l < r){\r\n            int mid = (l + r)/2;\r\n            mergeSort(arr,l,mid);\r\n            mergeSort(arr,mid+1,r);\r\n            merge(arr,l,mid,r);\r\n        }\r\n    }\r\n};\r\n"
}