{
  "code": "// Initial Template for Java\r\n\r\nimport java.util.*;\r\nclass Rat {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n\r\n        while (t-- > 0) {\r\n            int n = sc.nextInt();\r\n            int[][] a = new int[n][n];\r\n            for (int i = 0; i < n; i++)\r\n                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();\r\n\r\n            Solution obj = new Solution();\r\n            ArrayList<String> res = obj.findPath(a, n);\r\n            Collections.sort(res);\r\n            if (res.size() > 0) {\r\n                for (int i = 0; i < res.size(); i++)\r\n                    System.out.print(res.get(i) + \" \");\r\n                System.out.println();\r\n            } else {\r\n                System.out.println(-1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\n// m is the given matrix and n is the order of matrix\r\nclass Solution {\r\n    public static void find(int[][] m,int n,int[][] vis,int i,int j,ArrayList<String> ars,String ref,int[] di,int[] dj){\r\n        \r\n        if(i==n-1 && j==n-1){\r\n            ars.add(ref);\r\n            return;\r\n        }\r\n        \r\n        String st=\"DLRU\";\r\n        \r\n        for(int l=0; l<4; l++){\r\n            int dc=i+di[l];\r\n            int dd=j+dj[l];\r\n            \r\n            if(dc>=0 && dd>=0 && dc<n && dd<n && vis[dc][dd]==0 && m[dc][dd]==1){\r\n                vis[i][j]=1;\r\n                find(m,n,vis,dc,dd,ars,ref+st.charAt(l),di,dj);\r\n                //back tracking\r\n                vis[i][j]=0;\r\n            }\r\n        }\r\n    }\r\n        \r\n    public static ArrayList<String> findPath(int[][] m, int n) {\r\n        \r\n        ArrayList<String> ars=new ArrayList<String>();\r\n        \r\n        int[][] visited=new int[n][n];\r\n        String ref=\"\";\r\n        //d/r/u/l\r\n        int[] di=new int[]{+1,0,0,-1};\r\n        int[] dj=new int[]{0,-1,+1,0};\r\n        if(m[0][0]==1){\r\n        find(m,n,visited,0,0,ars,ref,di,dj);\r\n        }\r\n        if(ars.isEmpty()){\r\n            ars.add(\"-1\");\r\n            return ars;\r\n        }\r\n        return ars;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\n// m is the given matrix and n is the order of matrix\r\nclass Solution {\r\n    public static void find(int[][] m,int n,int[][] vis,int i,int j,ArrayList<String> ars,String ref,int[] di,int[] dj){\r\n        \r\n        if(i==n-1 && j==n-1){\r\n            ars.add(ref);\r\n            return;\r\n        }\r\n        \r\n        String st=\"DLRU\";\r\n        \r\n        for(int l=0; l<4; l++){\r\n            int dc=i+di[l];\r\n            int dd=j+dj[l];\r\n            \r\n            if(dc>=0 && dd>=0 && dc<n && dd<n && vis[dc][dd]==0 && m[dc][dd]==1){\r\n                vis[i][j]=1;\r\n                find(m,n,vis,dc,dd,ars,ref+st.charAt(l),di,dj);\r\n                //back tracking\r\n                vis[i][j]=0;\r\n            }\r\n        }\r\n    }\r\n        \r\n    public static ArrayList<String> findPath(int[][] m, int n) {\r\n        \r\n        ArrayList<String> ars=new ArrayList<String>();\r\n        \r\n        int[][] visited=new int[n][n];\r\n        String ref=\"\";\r\n        //d/r/u/l\r\n        int[] di=new int[]{+1,0,0,-1};\r\n        int[] dj=new int[]{0,-1,+1,0};\r\n        if(m[0][0]==1){\r\n        find(m,n,visited,0,0,ars,ref,di,dj);\r\n        }\r\n        if(ars.isEmpty()){\r\n            ars.add(\"-1\");\r\n            return ars;\r\n        }\r\n        return ars;\r\n    }\r\n}"
}