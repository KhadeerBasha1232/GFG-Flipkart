{
  "code": "import java.util.*;\r\nimport java.util.Stack;\r\nimport java.util.LinkedList;\r\n\r\n\r\n\r\nclass GfG\r\n{\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t    //Taking input using class Scanner\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\t\r\n\t\t//Taking input the number of testcases\r\n\t\tint t = sc.nextInt();\r\n\t\twhile(t>0)\r\n\t\t{\r\n\t\t    //Creating a new object of class StackQueue\r\n\t\t\tStackQueue g = new StackQueue();\r\n\t\t\t\r\n\t\t\t//Taking input the total number of Queries\r\n\t\t\tint q = sc.nextInt();\r\n\t\t\twhile(q>0)\r\n\t\t\t{\r\n\t\t\t\tint QueryTyoe = sc.nextInt();\r\n\t\t\t\t\r\n\t\t\t\t//If QueryTyoe is 1 then\r\n\t\t\t\t//we call the Push method\r\n\t\t\t\t//of class StackQueue\r\n\t\t\t\t//else we call the Pop method\r\n\t\t\t\tif(QueryTyoe == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tint a = sc.nextInt();\r\n\t\t\t\t\tg.Push(a);\r\n\t\t\t\t}else\r\n\t\t\t\tif(QueryTyoe == 2)\r\n\t\t\t\tSystem.out.print(g.Pop()+\" \");\r\n\t\t\tq--;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\tt--;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n\r\nclass StackQueue\r\n{\r\n    Stack<Integer> s1 = new Stack<Integer>();\r\n    Stack<Integer> s2 = new Stack<Integer>();\r\n\r\n    //Function to push an element in queue by using 2 stacks.\r\n    void Push(int x)\r\n    {\r\n\t   s1.push(x);\r\n    }\r\n\t\r\n    \r\n    //Function to pop an element from queue by using 2 stacks.\r\n    int Pop()\r\n    {\r\n\t    if (s1.isEmpty()) {\r\n            return -1;\r\n        }\r\n\r\n        while (!s1.isEmpty()) {\r\n            s2.push(s1.pop());\r\n        }\r\n\r\n        int val = s2.pop();\r\n\r\n        while (!s2.isEmpty()) {\r\n            s1.push(s2.pop());\r\n        }\r\n\r\n        return val;\r\n    }\r\n}\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass StackQueue\r\n{\r\n    Stack<Integer> s1 = new Stack<Integer>();\r\n    Stack<Integer> s2 = new Stack<Integer>();\r\n\r\n    //Function to push an element in queue by using 2 stacks.\r\n    void Push(int x)\r\n    {\r\n\t   s1.push(x);\r\n    }\r\n\t\r\n    \r\n    //Function to pop an element from queue by using 2 stacks.\r\n    int Pop()\r\n    {\r\n\t    if (s1.isEmpty()) {\r\n            return -1;\r\n        }\r\n\r\n        while (!s1.isEmpty()) {\r\n            s2.push(s1.pop());\r\n        }\r\n\r\n        int val = s2.pop();\r\n\r\n        while (!s2.isEmpty()) {\r\n            s1.push(s2.pop());\r\n        }\r\n\r\n        return val;\r\n    }\r\n}\r\n"
}