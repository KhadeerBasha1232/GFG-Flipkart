{
  "code": "//Initial Template for Java\r\n\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nimport java.lang.*;\r\n\r\n\r\nclass GFG {\r\n\tpublic static void main (String[] args) throws IOException{\r\n\t    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases\r\n\t\twhile(t-->0){\r\n\t\t    int n = Integer.parseInt(br.readLine()); // input size of array\r\n\t\t    int arr[] = new int[n];\r\n\t\t    String inputLine[] = br.readLine().trim().split(\"\\\\s+\");\r\n\t\t    for(int i=0; i<n; i++){\r\n\t\t        arr[i] = Integer.parseInt(inputLine[i]); // input elements of array\r\n\t\t    }\r\n\t\t    Solve T = new Solve();\r\n            long ans = T.maxArea(arr,n);\r\n            System.out.println(ans);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solve{\r\n    \r\n    long maxArea(int A[], int len){\r\n        \r\n        int maxArea=0;\r\n        int lp=0;\r\n        int rp=len-1;\r\n        while(lp<rp){\r\n            int ht=Math.min(A[lp],A[rp]);\r\n            int width=rp-lp;\r\n            int currWater=ht*width;\r\n            maxArea=Math.max(maxArea,currWater);\r\n            \r\n            if(A[lp]<A[rp]){\r\n             lp++;   \r\n            }\r\n            else{\r\n                rp--;\r\n            }\r\n        }\r\n        return maxArea;\r\n    }\r\n    \r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solve{\r\n    \r\n    long maxArea(int A[], int len){\r\n        \r\n        int maxArea=0;\r\n        int lp=0;\r\n        int rp=len-1;\r\n        while(lp<rp){\r\n            int ht=Math.min(A[lp],A[rp]);\r\n            int width=rp-lp;\r\n            int currWater=ht*width;\r\n            maxArea=Math.max(maxArea,currWater);\r\n            \r\n            if(A[lp]<A[rp]){\r\n             lp++;   \r\n            }\r\n            else{\r\n                rp--;\r\n            }\r\n        }\r\n        return maxArea;\r\n    }\r\n    \r\n}"
}