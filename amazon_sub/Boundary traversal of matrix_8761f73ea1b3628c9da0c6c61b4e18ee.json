{
  "code": "#include <bits/stdc++.h> \r\nusing namespace std; \r\n\r\n// } Driver Code Ends\r\n\r\nclass Solution\r\n{   \r\n    public:\r\n    //Function to return list of integers that form the boundary \r\n    //traversal of the matrix in a clockwise manner.\r\n    vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) \r\n    {\r\n        // code here\r\n        vector<int> ans;\r\n        \r\n        if(n==1){\r\n            for(int i=0;i<m;i++){\r\n                ans.push_back(matrix[0][i]);\r\n            }\r\n        }\r\n        else if(m==1){\r\n            for(int i=0;i<n;i++){\r\n                ans.push_back(matrix[i][0]);\r\n            }\r\n        }\r\n        \r\n        else{\r\n            for(int i=0;i<m;i++){\r\n                ans.push_back(matrix[0][i]);\r\n            }\r\n            for(int i=1;i<n;i++){\r\n                ans.push_back(matrix[i][m-1]);\r\n            }\r\n            for(int i=m-2;i>=0;i--){\r\n                ans.push_back(matrix[n-1][i]);\r\n            }\r\n            for(int i=n-2;i>0;i--){\r\n                ans.push_back(matrix[i][0]);\r\n            }\r\n        }\r\n        return ans;// code here\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int t;\r\n    cin>>t;\r\n    \r\n    while(t--) \r\n    {\r\n        int n,m;\r\n        cin>>n>>m;\r\n        vector<vector<int> > matrix(n); \r\n\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            matrix[i].assign(m, 0);\r\n            for( int j=0; j<m; j++)\r\n            {\r\n                cin>>matrix[i][j];\r\n            }\r\n        }\r\n\r\n        Solution ob;\r\n        vector<int> result = ob.boundaryTraversal(matrix, n, m);\r\n        for (int i = 0; i < result.size(); ++i)\r\n                cout<<result[i]<<\" \";\r\n        cout<<endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\nclass Solution\r\n{   \r\n    public:\r\n    //Function to return list of integers that form the boundary \r\n    //traversal of the matrix in a clockwise manner.\r\n    vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) \r\n    {\r\n        // code here\r\n        vector<int> ans;\r\n        \r\n        if(n==1){\r\n            for(int i=0;i<m;i++){\r\n                ans.push_back(matrix[0][i]);\r\n            }\r\n        }\r\n        else if(m==1){\r\n            for(int i=0;i<n;i++){\r\n                ans.push_back(matrix[i][0]);\r\n            }\r\n        }\r\n        \r\n        else{\r\n            for(int i=0;i<m;i++){\r\n                ans.push_back(matrix[0][i]);\r\n            }\r\n            for(int i=1;i<n;i++){\r\n                ans.push_back(matrix[i][m-1]);\r\n            }\r\n            for(int i=m-2;i>=0;i--){\r\n                ans.push_back(matrix[n-1][i]);\r\n            }\r\n            for(int i=n-2;i>0;i--){\r\n                ans.push_back(matrix[i][0]);\r\n            }\r\n        }\r\n        return ans;// code here\r\n    }\r\n};\r\n\r\n"
}