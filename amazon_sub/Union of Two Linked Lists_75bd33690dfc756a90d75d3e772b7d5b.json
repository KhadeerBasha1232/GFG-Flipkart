{
  "code": "import java.io.*;\r\nimport java.util.*;\r\n\r\nclass Node \r\n{\r\n    int data;\r\n    Node next;\r\n    \r\n    Node(int a)\r\n        {\r\n            data = a;\r\n            next = null;\r\n        }\r\n}\r\n\r\nclass GfG\r\n{\r\n    static Scanner sc = new Scanner(System.in);\r\n    \r\n    public static Node inputList(int size)\r\n    {\r\n        Node head, tail;\r\n        int val;\r\n        \r\n        val = sc.nextInt();\r\n        \r\n        head = tail = new Node(val);\r\n        \r\n        size--;\r\n        \r\n        while(size-->0)\r\n        {\r\n            val = sc.nextInt();\r\n            tail.next = new Node(val);\r\n            tail = tail.next;\r\n        }\r\n        \r\n        return head;\r\n    }\r\n    \r\n    public static void printList(Node n)\r\n    {\r\n        while(n!=null)\r\n        {\r\n            System.out.print(n.data + \" \");\r\n            n = n.next;\r\n        }\r\n    }\r\n    \r\n    public static void main(String args[])\r\n    {\r\n        int t = sc.nextInt();\r\n        while(t-->0)\r\n        {\r\n            int n , m;\r\n            \r\n            n = sc.nextInt();\r\n            Node head1 = inputList(n);\r\n            \r\n            m = sc.nextInt();\r\n            Node head2 = inputList(m);\r\n            \r\n            Sol obj = new Sol();\r\n            \r\n            printList(obj.findUnion(head1, head2));\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n/*\r\n    class Node\r\n    {\r\n        int data;\r\n        Node next;\r\n        Node(int d) {data = d; next = null; }\r\n    }\r\n*/\r\n\r\nclass Sol\r\n{\r\n    public static Node findUnion(Node head1,Node head2)\r\n    {\r\n        //Add your code here.\r\n        Node f1=head1;\r\n        Node f2=head2;\r\n        \r\n        HashSet<Integer> set = new HashSet<>();\r\n        while(f1!=null){\r\n            set.add(f1.data);\r\n            f1=f1.next;\r\n        }\r\n        while(f2!=null){\r\n            set.add(f2.data);\r\n            f2=f2.next;\r\n        }\r\n        ArrayList<Integer> list=new ArrayList<Integer>();\r\n        Iterator it = set.iterator();\r\n        while(it.hasNext()){\r\n            list.add((Integer)it.next());\r\n        }\r\n        Collections.sort(list);   \r\n        Node head=null;\r\n        Node x=null;\r\n        int i=0;\r\n        int n=list.size();\r\n        while(i<n){\r\n            Node newnode = new Node(list.get(i));\r\n            if (head == null) {\r\n                head = newnode;\r\n                x=head;\r\n            }else{\r\n                x.next = newnode;\r\n            }\r\n            x=newnode;\r\n            i++;\r\n        }\r\n        return head;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*\r\n    class Node\r\n    {\r\n        int data;\r\n        Node next;\r\n        Node(int d) {data = d; next = null; }\r\n    }\r\n*/\r\n\r\nclass Sol\r\n{\r\n    public static Node findUnion(Node head1,Node head2)\r\n    {\r\n        //Add your code here.\r\n        Node f1=head1;\r\n        Node f2=head2;\r\n        \r\n        HashSet<Integer> set = new HashSet<>();\r\n        while(f1!=null){\r\n            set.add(f1.data);\r\n            f1=f1.next;\r\n        }\r\n        while(f2!=null){\r\n            set.add(f2.data);\r\n            f2=f2.next;\r\n        }\r\n        ArrayList<Integer> list=new ArrayList<Integer>();\r\n        Iterator it = set.iterator();\r\n        while(it.hasNext()){\r\n            list.add((Integer)it.next());\r\n        }\r\n        Collections.sort(list);   \r\n        Node head=null;\r\n        Node x=null;\r\n        int i=0;\r\n        int n=list.size();\r\n        while(i<n){\r\n            Node newnode = new Node(list.get(i));\r\n            if (head == null) {\r\n                head = newnode;\r\n                x=head;\r\n            }else{\r\n                x.next = newnode;\r\n            }\r\n            x=newnode;\r\n            i++;\r\n        }\r\n        return head;\r\n    }\r\n}"
}