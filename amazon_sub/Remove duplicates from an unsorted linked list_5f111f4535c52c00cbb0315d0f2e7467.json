{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node {\r\n  int data;\r\n  struct Node *next;\r\n  Node(int x) {\r\n    data = x;\r\n    next = NULL;\r\n  }\r\n};\r\n\r\nvoid print(Node *root)\r\n{\r\nNode *temp = root;\r\nwhile(temp!=NULL)\r\n{\r\ncout<<temp->data<<\" \";\r\ntemp=temp->next;\r\n}\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n/*\r\nThe structure of linked list is the following\r\n\r\nstruct Node {\r\n  int data;\r\n  struct Node *next;\r\n  Node(int x) {\r\n    data = x;\r\n    next = NULL;\r\n  }\r\n};\r\n*/\r\n\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to remove duplicates from unsorted linked list.\r\n    Node * removeDuplicates( Node *head) \r\n    {\r\n     // your code goes here\r\n     if(head==NULL)\r\n     return head;\r\n     if(head->next==NULL)\r\n     return head;\r\n     \r\n     unordered_set<int>s;\r\n     s.insert(head->data);\r\n     Node * curr = head;\r\n     \r\n     while(curr->next->next!=NULL)\r\n     {\r\n         if(s.find(curr->next->data)==s.end())\r\n         {\r\n             s.insert(curr->next->data);\r\n             curr=curr->next;\r\n         }\r\n         else\r\n         {\r\n             curr->next=curr->next->next;\r\n         }\r\n     }\r\n     if(s.find(curr->next->data)==s.end())\r\n     {\r\n         return head;\r\n     }\r\n     else\r\n     {\r\n        curr->next=NULL;\r\n        return head;\r\n     }\r\n     \r\n     \r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n\t// your code goes here\r\n\tint T;\r\n\tcin>>T;\r\n\t\r\n\twhile(T--)\r\n\t{\r\n\t\tint K;\r\n\t\tcin>>K;\r\n\t\tstruct Node *head = NULL;\r\n        struct Node *temp = head;\r\n \r\n\t\tfor(int i=0;i<K;i++){\r\n\t\tint data;\r\n\t\tcin>>data;\r\n\t\t\tif(head==NULL)\r\n\t\t\thead=temp=new Node(data);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp->next = new Node(data);\r\n\t\t\t\ttemp=temp->next;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t    Solution ob;\r\n\t\tNode *result  = ob.removeDuplicates(head);\r\n\t\tprint(result);\r\n\t\tcout<<endl;\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*\r\nThe structure of linked list is the following\r\n\r\nstruct Node {\r\n  int data;\r\n  struct Node *next;\r\n  Node(int x) {\r\n    data = x;\r\n    next = NULL;\r\n  }\r\n};\r\n*/\r\n\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to remove duplicates from unsorted linked list.\r\n    Node * removeDuplicates( Node *head) \r\n    {\r\n     // your code goes here\r\n     if(head==NULL)\r\n     return head;\r\n     if(head->next==NULL)\r\n     return head;\r\n     \r\n     unordered_set<int>s;\r\n     s.insert(head->data);\r\n     Node * curr = head;\r\n     \r\n     while(curr->next->next!=NULL)\r\n     {\r\n         if(s.find(curr->next->data)==s.end())\r\n         {\r\n             s.insert(curr->next->data);\r\n             curr=curr->next;\r\n         }\r\n         else\r\n         {\r\n             curr->next=curr->next->next;\r\n         }\r\n     }\r\n     if(s.find(curr->next->data)==s.end())\r\n     {\r\n         return head;\r\n     }\r\n     else\r\n     {\r\n        curr->next=NULL;\r\n        return head;\r\n     }\r\n     \r\n     \r\n    }\r\n};\r\n\r\n"
}