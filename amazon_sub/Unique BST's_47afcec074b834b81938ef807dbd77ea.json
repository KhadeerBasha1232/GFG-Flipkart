{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to return the total number of possible unique BST.\r\n    static int numTrees(int n)\r\n    {\r\n        long mod=1000000007;\r\n        if(n==0)\r\n        return 1;\r\n        long dp[]=new long[n+1];\r\n        dp[0]=1;\r\n        for(int i=1;i<=n;i++){\r\n            dp[i]=0;\r\n            for(int j=0;j<i;j++){\r\n                \r\n                dp[i]=(dp[i]%mod+((dp[j]%mod)*(dp[i-j-1]%mod)%mod))%mod;\r\n            }\r\n        }\r\n        return (int)dp[n];\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nclass GFG\r\n{\r\n    public static void main(String args[])\r\n    {\r\n        //taking input using Scanner class\r\n        Scanner sc = new Scanner(System.in);\r\n        \r\n        //taking total testcases\r\n        int t = sc.nextInt();\r\n        \r\n        while(t-- > 0)\r\n        {\r\n            //taking n\r\n            int n =sc.nextInt();\r\n            \r\n            //creating an object of class Solution\r\n            Solution ob = new Solution();\r\n            \r\n            //calling method numTrees() of \r\n            //class Solution\r\n            System.out.println(ob.numTrees(n));\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to return the total number of possible unique BST.\r\n    static int numTrees(int n)\r\n    {\r\n        long mod=1000000007;\r\n        if(n==0)\r\n        return 1;\r\n        long dp[]=new long[n+1];\r\n        dp[0]=1;\r\n        for(int i=1;i<=n;i++){\r\n            dp[i]=0;\r\n            for(int j=0;j<i;j++){\r\n                \r\n                dp[i]=(dp[i]%mod+((dp[j]%mod)*(dp[i-j-1]%mod)%mod))%mod;\r\n            }\r\n        }\r\n        return (int)dp[n];\r\n        \r\n        \r\n    }\r\n}\r\n\r\n"
}