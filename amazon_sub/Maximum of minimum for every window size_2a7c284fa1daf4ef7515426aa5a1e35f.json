{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to find maximum of minimums of every window size.\r\n    vector <int> maxOfMin(int arr[], int n)\r\n    {\r\n        // Your code here\r\n        stack<int> s;\r\n        int left[n+1];\r\n        int right[n+1];\r\n        for(int i=0;i<n;i++){\r\n            left[i]=-1;\r\n            right[i]=n;\r\n        }\r\n        for(int i=0;i<n;i++){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]) s.pop();\r\n            if(!s.empty()) left[i]=s.top();\r\n            s.push(i);\r\n        }\r\n        while(!s.empty()){\r\n            s.pop();\r\n        }\r\n        for(int i=n-1;i>=0;i--){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]) s.pop();\r\n            if(!s.empty()) right[i]=s.top();\r\n            s.push(i);\r\n        }\r\n        int ans[n+1];\r\n        for (int i = 0; i <= n; i++) ans[i] = 0;\r\n        for(int i=0;i<n;i++){\r\n            int len=right[i]-left[i]-1;\r\n            ans[len]=max(ans[len],arr[i]);\r\n        }\r\n        for(int i=n-1;i>=1;i--){\r\n            ans[i]=max(ans[i],ans[i+1]);\r\n        }\r\n        vector<int> res(n);\r\n        for(int i=1;i<=n;i++){\r\n            res[i-1]=ans[i];\r\n        }\r\n        return res;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n        int a[n];\r\n        for (int i = 0; i < n; i++) cin >> a[i];\r\n        Solution ob;\r\n        vector <int> res = ob.maxOfMin(a, n);\r\n        for (int i : res) cout << i << \" \";\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to find maximum of minimums of every window size.\r\n    vector <int> maxOfMin(int arr[], int n)\r\n    {\r\n        // Your code here\r\n        stack<int> s;\r\n        int left[n+1];\r\n        int right[n+1];\r\n        for(int i=0;i<n;i++){\r\n            left[i]=-1;\r\n            right[i]=n;\r\n        }\r\n        for(int i=0;i<n;i++){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]) s.pop();\r\n            if(!s.empty()) left[i]=s.top();\r\n            s.push(i);\r\n        }\r\n        while(!s.empty()){\r\n            s.pop();\r\n        }\r\n        for(int i=n-1;i>=0;i--){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]) s.pop();\r\n            if(!s.empty()) right[i]=s.top();\r\n            s.push(i);\r\n        }\r\n        int ans[n+1];\r\n        for (int i = 0; i <= n; i++) ans[i] = 0;\r\n        for(int i=0;i<n;i++){\r\n            int len=right[i]-left[i]-1;\r\n            ans[len]=max(ans[len],arr[i]);\r\n        }\r\n        for(int i=n-1;i>=1;i--){\r\n            ans[i]=max(ans[i],ans[i+1]);\r\n        }\r\n        vector<int> res(n);\r\n        for(int i=1;i<=n;i++){\r\n            res[i-1]=ans[i];\r\n        }\r\n        return res;\r\n    }\r\n};\r\n"
}