{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG \r\n{\r\n    public static void main(String[] args) throws IOException\r\n    {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\r\n        int tc = Integer.parseInt(br.readLine().trim());\r\n        while (tc-- > 0)\r\n        {\r\n            String[] nx = br.readLine().trim().split(\" \");\r\n            int n = Integer.parseInt(nx[0]);\r\n            int x = Integer.parseInt(nx[1]);\r\n            String[] str = br.readLine().trim().split(\" \");\r\n            int[] a = new int[n];\r\n            \r\n            for (int i = 0; i < n; i++) \r\n                a[i] = Integer.parseInt(str[i]);\r\n            \r\n            Solution sln = new Solution();\r\n            if (sln.keypair(a, n, x) == true) \r\n                System.out.println(\"Yes\");\r\n            else \r\n                System.out.println(\"No\");\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    // A[] : the input array of positive integers\r\n    // N : size of the array arr[]\r\n    // X : the required sum\r\n    public boolean keypair(int[] A, int n, int X)\r\n    {\r\n        // code here\r\n        boolean result=false;\r\n        Set<Integer>h=new HashSet<>();\r\n        for(int i=0;i<n;i++){\r\n            int key=A[i];\r\n            if(h.contains(X-key)){\r\n                result=true;\r\n            }\r\n            h.add(key);\r\n        }\r\n        return result;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    // A[] : the input array of positive integers\r\n    // N : size of the array arr[]\r\n    // X : the required sum\r\n    public boolean keypair(int[] A, int n, int X)\r\n    {\r\n        // code here\r\n        boolean result=false;\r\n        Set<Integer>h=new HashSet<>();\r\n        for(int i=0;i<n;i++){\r\n            int key=A[i];\r\n            if(h.contains(X-key)){\r\n                result=true;\r\n            }\r\n            h.add(key);\r\n        }\r\n        return result;\r\n    }\r\n}"
}