{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct node {\r\n    string data;\r\n    struct node *left;\r\n    struct node *right;\r\n\r\n    node(string x) {\r\n        data = x;\r\n        left = NULL;\r\n        right = NULL;\r\n    }\r\n};\r\n\r\nbool isExpression(string &s) {\r\n    if (s == \"+\" or s == \"-\" or s == \"*\" or s == \"/\") return true;\r\n    return false;\r\n}\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n/*The structure of node is as follows\r\nstruct node{\r\n    string data;\r\n    node *left;\r\n    node *right;\r\n};\r\n*/\r\n\r\nclass Solution{\r\n  public:\r\n    /*You are required to complete below method */\r\n    int evalTree(node* root) {\r\n        if(root==NULL)\r\n            return 0;\r\n        int l = evalTree(root->left);\r\n        int r = evalTree(root->right);\r\n        \r\n        if(root->data==\"*\")return l*r;\r\n        else if(root->data==\"+\")return l+r;\r\n        else if(root->data==\"/\")return l/r;\r\n        else if(root->data==\"-\")return l-r;\r\n        else return stoi(root->data);\r\n        // Your code here\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n        string s[n];\r\n        for (int i = 0; i < n; i++) cin >> s[i];\r\n\r\n        int p = 0;\r\n        node *root = new node(s[p++]);\r\n        queue<node *> q;\r\n        q.push(root);\r\n        while (!q.empty()) {\r\n            node *f = q.front();\r\n            q.pop();\r\n            node *l, *r;\r\n            if (isExpression(f->data)) {\r\n                l = new node(s[p++]);\r\n                r = new node(s[p++]);\r\n                f->left = l;\r\n                f->right = r;\r\n                q.push(l);\r\n                q.push(r);\r\n            }\r\n        }\r\n        Solution obj;\r\n        cout << obj.evalTree(root) << endl;\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*The structure of node is as follows\r\nstruct node{\r\n    string data;\r\n    node *left;\r\n    node *right;\r\n};\r\n*/\r\n\r\nclass Solution{\r\n  public:\r\n    /*You are required to complete below method */\r\n    int evalTree(node* root) {\r\n        if(root==NULL)\r\n            return 0;\r\n        int l = evalTree(root->left);\r\n        int r = evalTree(root->right);\r\n        \r\n        if(root->data==\"*\")return l*r;\r\n        else if(root->data==\"+\")return l+r;\r\n        else if(root->data==\"/\")return l/r;\r\n        else if(root->data==\"-\")return l-r;\r\n        else return stoi(root->data);\r\n        // Your code here\r\n    }\r\n};\r\n\r\n"
}