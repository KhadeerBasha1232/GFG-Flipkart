{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    \r\n     char getMaxCountChar(vector<int>&countArray)\r\n    {\r\n        char ch='a';\r\n        int max=0;\r\n        \r\n        for (int i = 0; i < 26;i++)\r\n        {\r\n            if(countArray[i] > max)\r\n            {\r\n                max = countArray[i];\r\n                ch = (i + 'a');\r\n            }\r\n        }\r\n        \r\n        return ch;\r\n    }\r\n\r\n    string rearrangeString(string str)\r\n    {\r\n        vector<int> countArray(26, 0);\r\n        int n = str.length();\r\n        for (char ch : str)\r\n        {\r\n            countArray[ch - 'a']++;\r\n        }\r\n        char c = getMaxCountChar(countArray);\r\n        \r\n        int maxCount = countArray[c - 'a'];\r\n        \r\n        if (maxCount > (n + 1) / 2)\r\n        {\r\n            return \"\";\r\n        }\r\n        \r\n        vector<char> res(n, ' ');\r\n        \r\n        int idx = 0;\r\n        while(maxCount)\r\n        {\r\n            res[idx] = c;\r\n            idx += 2;\r\n            maxCount -= 1;\r\n        }\r\n        \r\n        countArray[c - 'a'] = 0;\r\n        \r\n        for (int i = 0; i < 26;i++)\r\n        {\r\n            while(countArray[i]>0)\r\n            {\r\n                if(idx>=n)\r\n                {\r\n                    idx = 1;\r\n                }\r\n                res[idx] = (i + 'a');\r\n                idx += 2;\r\n                countArray[i] -= 1;\r\n            }\r\n        }\r\n        \r\n        return string(res.begin(), res.end());\r\n    }\r\n    \r\n    \r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint checker(string str, string pat)\r\n{\r\n    int freq[26];\r\n    for(int i=0;i<26;i++)\r\n        freq[i]=0;\r\n    if(str.length()!=pat.length())\r\n        return 0;\r\n    for(int i=0;i<str.length();i++)\r\n    {\r\n        freq[str[i]-97]--;\r\n        if(pat[i]<97 || pat[i]>122)\r\n            return 0;\r\n        freq[pat[i]-97]++;\r\n    }\r\n    for(int i=0;i<26;i++)\r\n        if(freq[i]!=0)\r\n            return 0;\r\n    for(int i=0;i<pat.length()-1;i++)\r\n        if(pat[i]==pat[i+1])\r\n            return 0;\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\tcin.ignore(INT_MAX, '\\n');\r\n\twhile(t--)\r\n\t{\r\n\t    string str,ret;\r\n\t    cin>>str;\r\n\t    Solution ob;\r\n\t    ret = ob.rearrangeString(str);\r\n\t    cout << checker(str, ret) << endl;\r\n\t}\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    \r\n     char getMaxCountChar(vector<int>&countArray)\r\n    {\r\n        char ch='a';\r\n        int max=0;\r\n        \r\n        for (int i = 0; i < 26;i++)\r\n        {\r\n            if(countArray[i] > max)\r\n            {\r\n                max = countArray[i];\r\n                ch = (i + 'a');\r\n            }\r\n        }\r\n        \r\n        return ch;\r\n    }\r\n\r\n    string rearrangeString(string str)\r\n    {\r\n        vector<int> countArray(26, 0);\r\n        int n = str.length();\r\n        for (char ch : str)\r\n        {\r\n            countArray[ch - 'a']++;\r\n        }\r\n        char c = getMaxCountChar(countArray);\r\n        \r\n        int maxCount = countArray[c - 'a'];\r\n        \r\n        if (maxCount > (n + 1) / 2)\r\n        {\r\n            return \"\";\r\n        }\r\n        \r\n        vector<char> res(n, ' ');\r\n        \r\n        int idx = 0;\r\n        while(maxCount)\r\n        {\r\n            res[idx] = c;\r\n            idx += 2;\r\n            maxCount -= 1;\r\n        }\r\n        \r\n        countArray[c - 'a'] = 0;\r\n        \r\n        for (int i = 0; i < 26;i++)\r\n        {\r\n            while(countArray[i]>0)\r\n            {\r\n                if(idx>=n)\r\n                {\r\n                    idx = 1;\r\n                }\r\n                res[idx] = (i + 'a');\r\n                idx += 2;\r\n                countArray[i] -= 1;\r\n            }\r\n        }\r\n        \r\n        return string(res.begin(), res.end());\r\n    }\r\n    \r\n    \r\n};\r\n"
}