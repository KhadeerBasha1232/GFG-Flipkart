{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define MAX 1000\r\n\r\n\r\n// } Driver Code Ends\r\n/*You are required to complete this method*/\r\n\r\nclass Solution{\r\n\r\n    private:\r\n    vector<int> nextSmallerIndex(int *heights, int size){\r\n    vector<int> s(size);\r\n    stack<int>st;\r\n    st.push(-1);\r\n\r\n    for(int h=size-1; h>=0; h--){\r\n        int e = heights[h];\r\n        while(st.top() != -1 && heights[st.top()]>=e){\r\n        st.pop();\r\n        }\r\n        s[h] = st.top();\r\n        st.push(h);\r\n    }\r\n\r\n    return s;\r\n    }\r\n\r\n    vector<int> prevSmallerIndex(int *heights, int size){\r\n    vector<int> s(size);\r\n    stack<int>st;\r\n    st.push(-1);\r\n\r\n    for(int h=0; h<size; h++){\r\n        int e = heights[h];\r\n        while(st.top() != -1 && heights[st.top()]>=e){\r\n        st.pop();\r\n        }\r\n        s[h] = st.top();\r\n        st.push(h);\r\n    }\r\n\r\n    return s;\r\n    }\r\n    \r\n     int largestRectangleArea(int *heights, int size) {\r\n        vector<int> a1(size);\r\n        a1 = nextSmallerIndex(heights, size);\r\n        vector<int> a2(size); \r\n        a2 = prevSmallerIndex(heights, size);\r\n\r\n        int area = 0; \r\n\r\n        for(int i=0; i<size; i++){\r\n            int h = heights[i];\r\n            \r\n            int w = (a1[i] == -1 ? size : a1[i]) - (a2[i] == -1 ? -1 : a2[i]) - 1;\r\n            \r\n            \r\n            area = max(area, h*w);\r\n        }\r\n\r\n        return area;\r\n    }\r\n    \r\n  public:\r\n    int maxArea(int M[MAX][MAX], int n, int m) {\r\n        int area = largestRectangleArea(M[0],m);\r\n        \r\n        for(int i=1; i<n; i++){\r\n            for(int j=0; j<m; j++){\r\n                if(M[i][j] == 0){\r\n                    M[i][j] = 0;\r\n                }else{\r\n                    M[i][j] = M[i][j] + M[i-1][j];\r\n                }\r\n            }\r\n            area = max(area, largestRectangleArea(M[i],m));\r\n        }\r\n        \r\n        return area;\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int T;\r\n    cin >> T;\r\n\r\n    int M[MAX][MAX];\r\n\r\n    while (T--) {\r\n        int n, m;\r\n        cin >> n >> m;\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = 0; j < m; j++) {\r\n                cin >> M[i][j];\r\n            }\r\n        }\r\n        Solution obj;\r\n        cout << obj.maxArea(M, n, m) << endl;\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*You are required to complete this method*/\r\n\r\nclass Solution{\r\n\r\n    private:\r\n    vector<int> nextSmallerIndex(int *heights, int size){\r\n    vector<int> s(size);\r\n    stack<int>st;\r\n    st.push(-1);\r\n\r\n    for(int h=size-1; h>=0; h--){\r\n        int e = heights[h];\r\n        while(st.top() != -1 && heights[st.top()]>=e){\r\n        st.pop();\r\n        }\r\n        s[h] = st.top();\r\n        st.push(h);\r\n    }\r\n\r\n    return s;\r\n    }\r\n\r\n    vector<int> prevSmallerIndex(int *heights, int size){\r\n    vector<int> s(size);\r\n    stack<int>st;\r\n    st.push(-1);\r\n\r\n    for(int h=0; h<size; h++){\r\n        int e = heights[h];\r\n        while(st.top() != -1 && heights[st.top()]>=e){\r\n        st.pop();\r\n        }\r\n        s[h] = st.top();\r\n        st.push(h);\r\n    }\r\n\r\n    return s;\r\n    }\r\n    \r\n     int largestRectangleArea(int *heights, int size) {\r\n        vector<int> a1(size);\r\n        a1 = nextSmallerIndex(heights, size);\r\n        vector<int> a2(size); \r\n        a2 = prevSmallerIndex(heights, size);\r\n\r\n        int area = 0; \r\n\r\n        for(int i=0; i<size; i++){\r\n            int h = heights[i];\r\n            \r\n            int w = (a1[i] == -1 ? size : a1[i]) - (a2[i] == -1 ? -1 : a2[i]) - 1;\r\n            \r\n            \r\n            area = max(area, h*w);\r\n        }\r\n\r\n        return area;\r\n    }\r\n    \r\n  public:\r\n    int maxArea(int M[MAX][MAX], int n, int m) {\r\n        int area = largestRectangleArea(M[0],m);\r\n        \r\n        for(int i=1; i<n; i++){\r\n            for(int j=0; j<m; j++){\r\n                if(M[i][j] == 0){\r\n                    M[i][j] = 0;\r\n                }else{\r\n                    M[i][j] = M[i][j] + M[i-1][j];\r\n                }\r\n            }\r\n            area = max(area, largestRectangleArea(M[i],m));\r\n        }\r\n        \r\n        return area;\r\n    }\r\n};\r\n\r\n"
}