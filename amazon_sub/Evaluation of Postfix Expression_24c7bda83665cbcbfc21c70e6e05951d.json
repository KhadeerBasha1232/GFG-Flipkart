{
  "code": "// C++ program to evaluate value of a postfix expression\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to evaluate a postfix expression.\r\n    int solve(int first,int second,char ch){\r\n        if(ch=='*'){\r\n            return second*first;\r\n        }\r\n        if(ch=='/'){\r\n            return second/first;\r\n    }\r\n    if(ch=='+'){\r\n        return second+first;\r\n    }\r\n    if(ch=='-'){\r\n        return second-first;\r\n    }\r\n    }\r\n    int evaluatePostfix(string S)\r\n    {\r\n        // Your code here\r\n         stack<int>s;\r\n         for(int i=0;i<S.size();i++){\r\n             if(S[i]-'0'>=0&&S[i]-'0'<=9){\r\n                 s.push(S[i]-'0');\r\n             }\r\n             else{\r\n                 int top1=s.top();\r\n                 s.pop();\r\n                 int top2=s.top();\r\n                 s.pop();\r\n                 int temp=solve(top1,top2,S[i]);\r\n                 s.push(temp);\r\n             }\r\n         }\r\n         return s.top();\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\n// Driver program to test above functions\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    cin.ignore(INT_MAX, '\\n');\r\n    while(t--)\r\n    {\r\n        string S;\r\n        cin>>S;\r\n        Solution obj;\r\n    \r\n    cout<<obj.evaluatePostfix(S)<<endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    //Function to evaluate a postfix expression.\r\n    int solve(int first,int second,char ch){\r\n        if(ch=='*'){\r\n            return second*first;\r\n        }\r\n        if(ch=='/'){\r\n            return second/first;\r\n    }\r\n    if(ch=='+'){\r\n        return second+first;\r\n    }\r\n    if(ch=='-'){\r\n        return second-first;\r\n    }\r\n    }\r\n    int evaluatePostfix(string S)\r\n    {\r\n        // Your code here\r\n         stack<int>s;\r\n         for(int i=0;i<S.size();i++){\r\n             if(S[i]-'0'>=0&&S[i]-'0'<=9){\r\n                 s.push(S[i]-'0');\r\n             }\r\n             else{\r\n                 int top1=s.top();\r\n                 s.pop();\r\n                 int top2=s.top();\r\n                 s.pop();\r\n                 int temp=solve(top1,top2,S[i]);\r\n                 s.push(temp);\r\n             }\r\n         }\r\n         return s.top();\r\n    }\r\n};\r\n\r\n"
}