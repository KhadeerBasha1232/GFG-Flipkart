{
  "code": "\r\nclass Solution:\r\n    \r\n    #Function to return a list containing the union of the two arrays.\r\n    def findUnion(self,a,b,n,m):\r\n        '''\r\n        :param a: given sorted array a\r\n        :param n: size of sorted array a\r\n        :param b: given sorted array b\r\n        :param m: size of sorted array b\r\n        :return:  The union of both arrays as a list\r\n        '''\r\n        # code here \r\n        x = set(a)\r\n        y = set(b)\r\n        z = x.union(y)\r\n        n = list(z)\r\n        n = sorted(n)\r\n        return n\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\n# Contributed by : Nagendra Jha\r\n# Modified by : Sagar Gupta\r\n\r\n\r\nif __name__ == '__main__':\r\n    test_cases = int(input())\r\n    for cases in range(test_cases) :\r\n        n,m = map(int,input().strip().split())\r\n        a = list(map(int,input().strip().split()))\r\n        b = list(map(int,input().strip().split()))\r\n        ob=Solution()\r\n        li = ob.findUnion(a,b,n,m)\r\n        for val in li:\r\n            print(val, end = ' ')\r\n        print()\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\nclass Solution:\r\n    \r\n    #Function to return a list containing the union of the two arrays.\r\n    def findUnion(self,a,b,n,m):\r\n        '''\r\n        :param a: given sorted array a\r\n        :param n: size of sorted array a\r\n        :param b: given sorted array b\r\n        :param m: size of sorted array b\r\n        :return:  The union of both arrays as a list\r\n        '''\r\n        # code here \r\n        x = set(a)\r\n        y = set(b)\r\n        z = x.union(y)\r\n        n = list(z)\r\n        n = sorted(n)\r\n        return n\r\n\r\n\r\n"
}