{
  "code": "//\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node *next;\r\n    Node(int val)\r\n    {\r\n        data=val;\r\n        next=NULL;\r\n    }\r\n};\r\n\r\nNode* inputList(int size)\r\n{\r\n    Node *head, *tail;\r\n    int val;\r\n    \r\n    cin>>val;\r\n    head = tail = new Node(val);\r\n    \r\n    while(--size)\r\n    {\r\n        cin>>val;\r\n        tail->next = new Node(val);\r\n        tail = tail->next;\r\n    }\r\n    \r\n    return head;\r\n}\r\n\r\nvoid printList(Node* n)\r\n{\r\n    while(n)\r\n    {\r\n        cout<< n->data << \" \";\r\n        n = n->next;\r\n    }\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n/* structure of list node:\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node *next;\r\n    Node(int val)\r\n    {\r\n        data=val;\r\n        next=NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\nclass Solution{\r\n  public:\r\n    Node* findIntersection(Node* head1, Node* head2)\r\n    {\r\n        // code here\r\n        unordered_set<int> s;\r\n        Node *t= head2;\r\n        while(t){\r\n            s.insert(t->data);\r\n            t = t->next;\r\n        }\r\n        t= head1;\r\n        Node *root=0, *temp, *nn;\r\n\r\n        while(t){\r\n            auto it = s.find(t->data);\r\n            if(it!=s.end()){\r\n                nn = new Node(t->data); \r\n                if(root ==0 )   root = temp = nn;\r\n                else            temp = temp->next = nn;\r\n                s.erase(it);\r\n            }\r\n            t=t->next;\r\n        }\r\n        return root;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t    int n,m;\r\n\t    \r\n\t    cin>> n;\r\n\t    Node* head1 = inputList(n);\r\n\t    \r\n\t    cin>>m;\r\n\t    Node* head2 = inputList(m);\r\n\t    Solution obj;\r\n\t    Node* result = obj.findIntersection(head1, head2);\r\n\t    \r\n\t    printList(result);\r\n\t    cout<< endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/* structure of list node:\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node *next;\r\n    Node(int val)\r\n    {\r\n        data=val;\r\n        next=NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\nclass Solution{\r\n  public:\r\n    Node* findIntersection(Node* head1, Node* head2)\r\n    {\r\n        // code here\r\n        unordered_set<int> s;\r\n        Node *t= head2;\r\n        while(t){\r\n            s.insert(t->data);\r\n            t = t->next;\r\n        }\r\n        t= head1;\r\n        Node *root=0, *temp, *nn;\r\n\r\n        while(t){\r\n            auto it = s.find(t->data);\r\n            if(it!=s.end()){\r\n                nn = new Node(t->data); \r\n                if(root ==0 )   root = temp = nn;\r\n                else            temp = temp->next = nn;\r\n                s.erase(it);\r\n            }\r\n            t=t->next;\r\n        }\r\n        return root;\r\n    }\r\n};\r\n"
}