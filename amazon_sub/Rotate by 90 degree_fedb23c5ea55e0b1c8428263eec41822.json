{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*; \r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass DriverClass\r\n{\r\n\tpublic static void main(String[] args) \r\n\t{ \r\n\t    Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while (t-- > 0)\r\n        {\r\n            int n = sc.nextInt();\r\n            int[][] arr = new int[n][n];\r\n            \r\n            for (int i = 0; i < n; i++)\r\n                for (int j = 0; j < n; j++)\r\n                    arr[i][j] = sc.nextInt();\r\n            \r\n            GFG g = new GFG();\r\n            g.rotate(arr);\r\n            printMatrix (arr);\r\n        }\r\n\t} \r\n\t\r\n\tstatic void printMatrix(int arr[][]) \r\n\t{ \r\n\t\tfor (int i = 0; i < arr.length; i++) { \r\n\t\t\tfor (int j = 0; j < arr[0].length; j++) \r\n\t\t\t\tSystem.out.print(arr[i][j] + \" \"); \r\n\t\t\tSystem.out.println(\"\"); \r\n\t\t} \r\n\t} \r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass GFG\r\n{\r\n    static void rotate(int matrix[][]) \r\n    {\r\n         int N=matrix.length;\r\n        for(int i = 0; i<N;i++){\r\n            for(int j = i; j<N;j++){\r\n                int temp = matrix[i][j];\r\n                matrix[i][j]=matrix[j][i];\r\n                matrix[j][i] = temp;\r\n            }\r\n        }\r\n        int top = 0, bottom = N - 1;\r\n        while (top < bottom) {\r\n            int[] temp = matrix[top];\r\n            matrix[top] = matrix[bottom];\r\n            matrix[bottom] = temp;\r\n            top++;\r\n            bottom--;\r\n        }  \r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass GFG\r\n{\r\n    static void rotate(int matrix[][]) \r\n    {\r\n         int N=matrix.length;\r\n        for(int i = 0; i<N;i++){\r\n            for(int j = i; j<N;j++){\r\n                int temp = matrix[i][j];\r\n                matrix[i][j]=matrix[j][i];\r\n                matrix[j][i] = temp;\r\n            }\r\n        }\r\n        int top = 0, bottom = N - 1;\r\n        while (top < bottom) {\r\n            int[] temp = matrix[top];\r\n            matrix[top] = matrix[bottom];\r\n            matrix[bottom] = temp;\r\n            top++;\r\n            bottom--;\r\n        }  \r\n    }\r\n}"
}