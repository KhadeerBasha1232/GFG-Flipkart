{
  "code": "\r\n\r\n\r\nclass Solution:\r\n    def find3number(self,A, n):\r\n        # code here\r\n        if n < 3:\r\n            return []\r\n\r\n        s = [None] * n\r\n        g = [None] * n\r\n        minele = A[0]\r\n\r\n        for i in range(n):\r\n            if A[i] < minele:\r\n                minele = A[i]\r\n            s[i] = minele\r\n            \r\n        maxele = A[n - 1]\r\n\r\n        for i in range(n - 1, -1, -1):\r\n            if A[i] > maxele:\r\n                maxele = A[i]\r\n            g[i] = maxele\r\n            \r\n        for i in range(1, n - 1):\r\n            if s[i] < A[i] < g[i]:\r\n                return [s[i], A[i], g[i]]\r\n\r\n        return []\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\nimport sys\r\nsys.setrecursionlimit(100000)\r\n\r\ndef isSubSeq(arr, lis, n, m):\r\n    if m==0:\r\n        return True\r\n    if n==0:\r\n        return False\r\n    if arr[n-1]==lis[m-1]:\r\n        return isSubSeq(arr, lis, n-1, m-1)\r\n    return isSubSeq(arr, lis, n-1, m)\r\n\r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    arr=list(map(int, input().strip().split()))\r\n    lis = Solution().find3number(arr, n)\r\n    # print(lis)\r\n    # print(isSubSeq(arr, lis, n, len(lis)))\r\n    if len(lis)!=0 and len(lis)!=3:\r\n        print(-1)\r\n        continue\r\n    if len(lis)==0:\r\n        print(0)\r\n    elif lis[0]<lis[1] and lis[1]<lis[2] and isSubSeq(arr, lis, n, len(lis)):\r\n        print(1)\r\n    else:\r\n        print(-1)\r\n        \r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\n\r\n\r\nclass Solution:\r\n    def find3number(self,A, n):\r\n        # code here\r\n        if n < 3:\r\n            return []\r\n\r\n        s = [None] * n\r\n        g = [None] * n\r\n        minele = A[0]\r\n\r\n        for i in range(n):\r\n            if A[i] < minele:\r\n                minele = A[i]\r\n            s[i] = minele\r\n            \r\n        maxele = A[n - 1]\r\n\r\n        for i in range(n - 1, -1, -1):\r\n            if A[i] > maxele:\r\n                maxele = A[i]\r\n            g[i] = maxele\r\n            \r\n        for i in range(1, n - 1):\r\n            if s[i] < A[i] < g[i]:\r\n                return [s[i], A[i], g[i]]\r\n\r\n        return []\r\n\r\n\r\n"
}