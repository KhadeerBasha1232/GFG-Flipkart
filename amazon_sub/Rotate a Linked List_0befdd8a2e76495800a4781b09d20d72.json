{
  "code": "import java.util.*;\r\nclass Node {\r\n    int data;\r\n    Node next;\r\n    Node(int d) {\r\n        data = d;\r\n        next = null;\r\n    }\r\n} \r\n\r\nclass Main {\r\n    public static void main(String[] args) {\r\n        \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while (t-- > 0) {\r\n            int n = sc.nextInt();\r\n            \r\n            int a = sc.nextInt();\r\n            Node head = new Node(a);\r\n            Node tail = head;\r\n            \r\n            for (int i=0; i<n-1; i++)\r\n            {\r\n                a = sc.nextInt();\r\n                tail.next = new Node(a);\r\n                tail = tail.next;\r\n            }\r\n            \r\n            int k = sc.nextInt();\r\n            \r\n            Solution ob = new Solution();\r\n            head = ob.rotate(head,k);\r\n            printList(head);\r\n        }\r\n    }\r\n    \r\n    public static void printList(Node n) {\r\n        while (n != null) {\r\n            System.out.print(n.data + \" \");\r\n            n = n.next;\r\n        }\r\n        System.out.println();\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution{\r\n    //Function to rotate a linked list.\r\n    public static int count(Node head){\r\n        int c=0;\r\n        while(head!=null){\r\n            head=head.next;\r\n            c++;\r\n        }\r\n        return c;\r\n    }\r\n    public Node rotate(Node head, int k) {\r\n       if(k%count(head)==0)\r\n        return head;\r\n        int i=1;\r\n        Node temp=head;\r\n        while(i<k){\r\n            temp=temp.next;\r\n            i++;\r\n        }\r\n        Node prev=temp.next;\r\n        temp.next=null;\r\n        temp=prev;\r\n        while(temp.next!=null){\r\n            temp=temp.next;\r\n        }\r\n        temp.next=head;\r\n        head=prev;\r\n        return head;\r\n    }\r\n}\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution{\r\n    //Function to rotate a linked list.\r\n    public static int count(Node head){\r\n        int c=0;\r\n        while(head!=null){\r\n            head=head.next;\r\n            c++;\r\n        }\r\n        return c;\r\n    }\r\n    public Node rotate(Node head, int k) {\r\n       if(k%count(head)==0)\r\n        return head;\r\n        int i=1;\r\n        Node temp=head;\r\n        while(i<k){\r\n            temp=temp.next;\r\n            i++;\r\n        }\r\n        Node prev=temp.next;\r\n        temp.next=null;\r\n        temp=prev;\r\n        while(temp.next!=null){\r\n            temp=temp.next;\r\n        }\r\n        temp.next=head;\r\n        head=prev;\r\n        return head;\r\n    }\r\n}\r\n"
}