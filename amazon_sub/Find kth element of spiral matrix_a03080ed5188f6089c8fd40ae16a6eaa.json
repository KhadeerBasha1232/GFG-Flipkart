{
  "code": "import java.util.*;\r\n\r\nclass Find_Given_Element_Of_Spiral_Matrix \r\n{\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint t = sc.nextInt();\r\n\t\twhile(t > 0)\r\n\t\t{\r\n\t\t\tint n = sc.nextInt();\r\n\t\t\tint m = sc.nextInt();\r\n\t\t\tint k = sc.nextInt();\r\n\t\t\tint arr[][] = new int[1000][1000];\r\n\t\t\tfor(int i=0; i<n; i++)\r\n\t\t\t{\r\n\t\t\t\tfor(int j=0; j<m; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tarr[i][j] = sc.nextInt();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSystem.out.println(new Solution().findK(arr, n, m, k));\r\n\t\tt--;\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    /*You are required to complete this method*/\r\n    int findK(int A[][], int n, int m, int k)\r\n    {\r\n        int lft = 0,rgt =m-1,top=0,bottom=n-1;\r\n\tint count=0;\r\n\t\r\n\twhile(lft<=rgt && top<=bottom){\r\n\t    for(int i=lft;i<=rgt;i++){\r\n\t        count++;\r\n\t        if(count==k){\r\n\t            return A[top][i];\r\n\t        }\r\n\t    }\r\n\t    top++;\r\n\t    \r\n\t    for(int i=top;i<=bottom;i++){\r\n\t        count++;\r\n\t        if(count == k){\r\n\t            return A[i][rgt];\r\n\t        }\r\n\t    }\r\n\t    rgt--;\r\n\t    \r\n\t    if(top<=bottom) {\r\n\t        for(int i=rgt;i>=lft;i--){\r\n\t            count++;\r\n\t            if(count==k){\r\n\t                return A[bottom][i];\r\n\t            }\r\n\t        }\r\n\t        bottom--;\r\n\t    }\r\n\t    \r\n\t    if(lft<=rgt){\r\n\t        for(int i=bottom;i>=top;i--){\r\n\t            count++;\r\n\t            if(count==k){\r\n\t                return A[i][lft];\r\n\t            }\r\n\t        }\r\n\t        lft++;\r\n\t    }\r\n\t}\r\n\treturn -1;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    /*You are required to complete this method*/\r\n    int findK(int A[][], int n, int m, int k)\r\n    {\r\n        int lft = 0,rgt =m-1,top=0,bottom=n-1;\r\n\tint count=0;\r\n\t\r\n\twhile(lft<=rgt && top<=bottom){\r\n\t    for(int i=lft;i<=rgt;i++){\r\n\t        count++;\r\n\t        if(count==k){\r\n\t            return A[top][i];\r\n\t        }\r\n\t    }\r\n\t    top++;\r\n\t    \r\n\t    for(int i=top;i<=bottom;i++){\r\n\t        count++;\r\n\t        if(count == k){\r\n\t            return A[i][rgt];\r\n\t        }\r\n\t    }\r\n\t    rgt--;\r\n\t    \r\n\t    if(top<=bottom) {\r\n\t        for(int i=rgt;i>=lft;i--){\r\n\t            count++;\r\n\t            if(count==k){\r\n\t                return A[bottom][i];\r\n\t            }\r\n\t        }\r\n\t        bottom--;\r\n\t    }\r\n\t    \r\n\t    if(lft<=rgt){\r\n\t        for(int i=bottom;i>=top;i--){\r\n\t            count++;\r\n\t            if(count==k){\r\n\t                return A[i][lft];\r\n\t            }\r\n\t        }\r\n\t        lft++;\r\n\t    }\r\n\t}\r\n\treturn -1;\r\n    }\r\n}"
}