{
  "code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t\tScanner scan = new Scanner(System.in);\r\n\t\tint test = scan.nextInt();\r\n\t\t\r\n\t\twhile(test > 0){\r\n\t\t    String s = scan.next();\r\n\t\t    String t = scan.next();\r\n\t\t    \r\n\t\t    System.out.println(new Solution().smallestWindow(s, t));\r\n\t\t    test--;\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the smallest window in the string s consisting\r\n    //of all the characters of string p.\r\n    public static String smallestWindow(String s, String p)\r\n    {\r\n        int si = 0, ei = 0, ns = s.length() , req = p.length(), head = -1; \r\n        int min = Integer.MAX_VALUE;\r\n        int arr[] = new int[128];\r\n        \r\n        for(int i = 0; i < req; i++){\r\n            arr[p.charAt(i)]++;\r\n        }\r\n        \r\n        while(ei<ns){\r\n            if(arr[s.charAt(ei)]>0){\r\n                req--;\r\n            }\r\n            arr[s.charAt(ei)]--;\r\n            ei++;\r\n            \r\n            while(req==0){\r\n                if(ei-si<min){\r\n                    min = ei-si;\r\n                    head = si;\r\n                }\r\n                \r\n                if(arr[s.charAt(si)]==0){\r\n                    req++;\r\n                }\r\n                \r\n                arr[s.charAt(si)]++;\r\n                si++;\r\n            }\r\n        }\r\n        return min == Integer.MAX_VALUE ? \"-1\" : s.substring(head,head+min);\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    //Function to find the smallest window in the string s consisting\r\n    //of all the characters of string p.\r\n    public static String smallestWindow(String s, String p)\r\n    {\r\n        int si = 0, ei = 0, ns = s.length() , req = p.length(), head = -1; \r\n        int min = Integer.MAX_VALUE;\r\n        int arr[] = new int[128];\r\n        \r\n        for(int i = 0; i < req; i++){\r\n            arr[p.charAt(i)]++;\r\n        }\r\n        \r\n        while(ei<ns){\r\n            if(arr[s.charAt(ei)]>0){\r\n                req--;\r\n            }\r\n            arr[s.charAt(ei)]--;\r\n            ei++;\r\n            \r\n            while(req==0){\r\n                if(ei-si<min){\r\n                    min = ei-si;\r\n                    head = si;\r\n                }\r\n                \r\n                if(arr[s.charAt(si)]==0){\r\n                    req++;\r\n                }\r\n                \r\n                arr[s.charAt(si)]++;\r\n                si++;\r\n            }\r\n        }\r\n        return min == Integer.MAX_VALUE ? \"-1\" : s.substring(head,head+min);\r\n    }\r\n}"
}