{
  "code": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\n\r\n\r\nnamespace DriverCode\r\n{\r\n\r\n    class GFG\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int testcases;// Taking testcase as input\r\n            testcases = Convert.ToInt32(Console.ReadLine());\r\n            while (testcases-- > 0)// Looping through all testcases\r\n            {\r\n                int n = Convert.ToInt32(Console.ReadLine());\r\n                int[] arr = new int[n-1];\r\n                var stringarray = Console.ReadLine().Split(' ');\r\n                for (int i = 0; i < n-1; i++)\r\n                {\r\n                    arr[i] = int.Parse(stringarray[i]);\r\n                }\r\n                Solution obj = new Solution();\r\n                Console.WriteLine(obj.MissingNumber(arr, n));\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for C#\r\npublic class Solution\r\n{\r\n    public int MissingNumber(int[] arr, int n)\r\n    {\r\n        Array.Sort(arr);\r\n        int test = arr[0];\r\n        if(arr[0] != 1){return 1;}\r\n        for(int i = 0; i < arr.Length; i++){\r\n            if(arr[i] != test){\r\n                return test;\r\n            }\r\n            test++;\r\n        }\r\n        return test;\r\n    }\r\n}",
  "status": "1",
  "language": "csharp",
  "user_code": "\r\n\r\n//User function Template for C#\r\npublic class Solution\r\n{\r\n    public int MissingNumber(int[] arr, int n)\r\n    {\r\n        Array.Sort(arr);\r\n        int test = arr[0];\r\n        if(arr[0] != 1){return 1;}\r\n        for(int i = 0; i < arr.Length; i++){\r\n            if(arr[i] != test){\r\n                return test;\r\n            }\r\n            test++;\r\n        }\r\n        return test;\r\n    }\r\n}"
}