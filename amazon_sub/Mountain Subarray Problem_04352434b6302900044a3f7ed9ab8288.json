{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass Pair {\r\n    int l, r;\r\n    Pair(int l, int r) {\r\n        this.l = l;\r\n        this.r = r;\r\n    }\r\n}\r\n\r\nclass Main {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br =\r\n            new BufferedReader(new InputStreamReader(System.in));\r\n        int tc = Integer.parseInt(br.readLine().trim());\r\n        while (tc-- > 0) {\r\n            int n = Integer.parseInt(br.readLine().trim());\r\n            int[] a = new int[n];\r\n            String[] str = br.readLine().trim().split(\" \");\r\n            for (int i = 0; i < n; i++) {\r\n                a[i] = Integer.parseInt(str[i]);\r\n            }\r\n            int q = Integer.parseInt(br.readLine().trim());\r\n            ArrayList<Pair> queries = new ArrayList<Pair>();\r\n            for (int i = 0; i < q; i++) {\r\n                String[] lr = br.readLine().trim().split(\" \");\r\n                queries.add(\r\n                    new Pair(Integer.parseInt(lr[0]), Integer.parseInt(lr[1])));\r\n            }\r\n            Solution sln = new Solution();\r\n\r\n            ArrayList<Boolean> al = sln.processQueries(a, n, queries, q);\r\n            for (boolean u : al) {\r\n                if (u) {\r\n                    System.out.println(\"Yes\");\r\n                } else {\r\n                    System.out.println(\"No\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\n// refer Pair class in driver code\r\nclass Solution {\r\n    \r\n    public Boolean helper(int l,int r,int a[])\r\n    {\r\n        while(l<r){\r\n           if(a[l]>a[l+1]) break;\r\n           l++;\r\n       }\r\n       while(l<r){\r\n           if(a[l]<a[l+1]){\r\n               break;\r\n           }\r\n           l++;\r\n       }\r\n       if(l==r) return true;\r\n       else return false;\r\n    }\r\n    public ArrayList<Boolean> processQueries(int[] a, int n, ArrayList<Pair> queries,\r\n                                      int q) {\r\n                                          \r\n        ArrayList<Boolean> al = new ArrayList<>();\r\n        for(int i=0;i<queries.size();i++)\r\n        {\r\n            int l=queries.get(i).l;\r\n            int r =queries.get(i).r;\r\n            al.add(helper(l,r,a));\r\n        }\r\n        \r\n        return al;\r\n        // code here\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\n// refer Pair class in driver code\r\nclass Solution {\r\n    \r\n    public Boolean helper(int l,int r,int a[])\r\n    {\r\n        while(l<r){\r\n           if(a[l]>a[l+1]) break;\r\n           l++;\r\n       }\r\n       while(l<r){\r\n           if(a[l]<a[l+1]){\r\n               break;\r\n           }\r\n           l++;\r\n       }\r\n       if(l==r) return true;\r\n       else return false;\r\n    }\r\n    public ArrayList<Boolean> processQueries(int[] a, int n, ArrayList<Pair> queries,\r\n                                      int q) {\r\n                                          \r\n        ArrayList<Boolean> al = new ArrayList<>();\r\n        for(int i=0;i<queries.size();i++)\r\n        {\r\n            int l=queries.get(i).l;\r\n            int r =queries.get(i).r;\r\n            al.add(helper(l,r,a));\r\n        }\r\n        \r\n        return al;\r\n        // code here\r\n    }\r\n}"
}