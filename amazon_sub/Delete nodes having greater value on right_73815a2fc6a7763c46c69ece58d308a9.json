{
  "code": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n\r\nvoid print(Node *root)\r\n{\r\n    Node *temp = root;\r\n    while(temp!=NULL)\r\n    {\r\n        cout<<temp->data<<\" \";\r\n        temp=temp->next;\r\n    }\r\n}\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n/*\r\n\r\nThe structure of linked list is the following\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n*/\r\nclass Solution\r\n{\r\n    public:\r\n    Node *reverse(Node *head)\r\n    {\r\n        Node*prev=NULL;\r\n        Node*curr=head;\r\n        Node*frw=NULL;\r\n        while(curr!=NULL)\r\n        {\r\n            frw=curr->next;\r\n            curr->next=prev;\r\n            \r\n            prev=curr;\r\n            curr=frw;\r\n        }\r\n        return prev;\r\n    }\r\n    Node *compute(Node *head)\r\n    {\r\n        Node* reversed_head=reverse(head);\r\n        \r\n        Node*prev=reversed_head;\r\n        Node*curr=reversed_head->next;\r\n        while(curr!=NULL)\r\n        {\r\n            if(curr->data<prev->data)\r\n            {\r\n                prev->next=curr->next;\r\n                curr=curr->next;\r\n            }\r\n            else\r\n            {\r\n                prev=prev->next;\r\n                curr=curr->next;\r\n            }\r\n        }\r\n        Node* result=reverse(reversed_head);\r\n        return result;\r\n    }\r\n    \r\n};\r\n   \r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n    int T;\r\n\tcin>>T;\r\n\r\n\twhile(T--)\r\n\t{\r\n\t\tint K;\r\n\t\tcin>>K;\r\n\t\tstruct Node *head = NULL;\r\n        struct Node *temp = head;\r\n\r\n\t\tfor(int i=0;i<K;i++){\r\n\t\t    int data;\r\n\t\t    cin>>data;\r\n\t\t\tif(head==NULL)\r\n\t\t\t    head=temp=new Node(data);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp->next = new Node(data);\r\n\t\t\t\ttemp = temp->next;\r\n\t\t\t}\r\n\t\t}\r\n        Solution ob;\r\n        Node *result = ob.compute(head);\r\n        print(result);\r\n        cout<<endl;\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*\r\n\r\nThe structure of linked list is the following\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n*/\r\nclass Solution\r\n{\r\n    public:\r\n    Node *reverse(Node *head)\r\n    {\r\n        Node*prev=NULL;\r\n        Node*curr=head;\r\n        Node*frw=NULL;\r\n        while(curr!=NULL)\r\n        {\r\n            frw=curr->next;\r\n            curr->next=prev;\r\n            \r\n            prev=curr;\r\n            curr=frw;\r\n        }\r\n        return prev;\r\n    }\r\n    Node *compute(Node *head)\r\n    {\r\n        Node* reversed_head=reverse(head);\r\n        \r\n        Node*prev=reversed_head;\r\n        Node*curr=reversed_head->next;\r\n        while(curr!=NULL)\r\n        {\r\n            if(curr->data<prev->data)\r\n            {\r\n                prev->next=curr->next;\r\n                curr=curr->next;\r\n            }\r\n            else\r\n            {\r\n                prev=prev->next;\r\n                curr=curr->next;\r\n            }\r\n        }\r\n        Node* result=reverse(reversed_head);\r\n        return result;\r\n    }\r\n    \r\n};\r\n   \r\n\r\n"
}