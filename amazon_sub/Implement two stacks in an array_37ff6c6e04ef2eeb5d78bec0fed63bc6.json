{
  "code": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n\r\nclass twoStacks\r\n{\r\n    int *arr;\r\n    int size;\r\n    int top1, top2;\r\npublic:\r\n    \r\n    twoStacks(int n = 100)\r\n    {\r\n        size = n;\r\n        arr = new int[n];\r\n        top1 = -1;\r\n        top2 = size;\r\n    }\r\n\r\n    void push1(int x)\r\n    {\r\n        arr[++top1] = x;\r\n    }\r\n    \r\n    void push2(int x)\r\n    {\r\n        arr[--top2] = x;\r\n    }\r\n    \r\n    int pop1()\r\n    {\r\n        if (top1 == -1)\r\n            return -1;\r\n        return arr[top1--];\r\n    }\r\n    \r\n    int pop2()\r\n    {\r\n        if (top2 == size)\r\n            return -1;\r\n\r\n        return arr[top2++];\r\n    }\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\r\n    int T;\r\n    cin>>T;\r\n    while(T--)\r\n    {\r\n        twoStacks *sq = new twoStacks();\r\n\r\n        int Q;\r\n        cin>>Q;\r\n        while(Q--){\r\n        int stack_no;\r\n        cin>>stack_no;\r\n        int QueryType=0;\r\n        cin>>QueryType;\r\n        \r\n        if(QueryType==1)\r\n        {\r\n            int a;\r\n            cin>>a;\r\n            if(stack_no ==1)\r\n            sq->push1(a);\r\n            else if(stack_no==2)\r\n            sq->push2(a);\r\n        }else if(QueryType==2){\r\n        \tif(stack_no==1)\r\n            cout<<sq->pop1()<<\" \";\r\n            else if(stack_no==2)\r\n            cout<<sq->pop2()<<\" \";\r\n\r\n        }\r\n        }\r\n        cout<<endl;\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n\r\nclass twoStacks\r\n{\r\n    int *arr;\r\n    int size;\r\n    int top1, top2;\r\npublic:\r\n    \r\n    twoStacks(int n = 100)\r\n    {\r\n        size = n;\r\n        arr = new int[n];\r\n        top1 = -1;\r\n        top2 = size;\r\n    }\r\n\r\n    void push1(int x)\r\n    {\r\n        arr[++top1] = x;\r\n    }\r\n    \r\n    void push2(int x)\r\n    {\r\n        arr[--top2] = x;\r\n    }\r\n    \r\n    int pop1()\r\n    {\r\n        if (top1 == -1)\r\n            return -1;\r\n        return arr[top1--];\r\n    }\r\n    \r\n    int pop2()\r\n    {\r\n        if (top2 == size)\r\n            return -1;\r\n\r\n        return arr[top2++];\r\n    }\r\n};\r\n\r\n\r\n"
}