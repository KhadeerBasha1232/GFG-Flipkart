{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n\r\nclass Solution{\r\n  public:\r\n    vector <int> countDistinct (int A[], int n, int k)\r\n    {\r\n        //code here.\r\n        int start = 0;\r\n        int end = 0;\r\n        unordered_map<int, int> mp;\r\n        vector<int> ans;\r\n        while(end < n) {\r\n            mp[A[end]]++;\r\n            if(end - start + 1 == k) {\r\n                ans.push_back(mp.size());\r\n                //if(mp.find(A[start]) != mp.end()) {\r\n                    mp[A[start]]--;\r\n                    if(mp[A[start]] == 0) mp.erase(A[start]);\r\n                //}\r\n                start++;\r\n            }\r\n            end++;\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n\r\n        int n, k;\r\n        cin >> n >> k;\r\n        int a[n];\r\n        for (int i = 0; i < n; i++) \r\n        \tcin >> a[i];\r\n        Solution obj;\r\n        vector <int> result = obj.countDistinct(a, n, k);\r\n        for (int i : result) \r\n        \tcout << i << \" \";\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\nclass Solution{\r\n  public:\r\n    vector <int> countDistinct (int A[], int n, int k)\r\n    {\r\n        //code here.\r\n        int start = 0;\r\n        int end = 0;\r\n        unordered_map<int, int> mp;\r\n        vector<int> ans;\r\n        while(end < n) {\r\n            mp[A[end]]++;\r\n            if(end - start + 1 == k) {\r\n                ans.push_back(mp.size());\r\n                //if(mp.find(A[start]) != mp.end()) {\r\n                    mp[A[start]]--;\r\n                    if(mp[A[start]] == 0) mp.erase(A[start]);\r\n                //}\r\n                start++;\r\n            }\r\n            end++;\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n"
}