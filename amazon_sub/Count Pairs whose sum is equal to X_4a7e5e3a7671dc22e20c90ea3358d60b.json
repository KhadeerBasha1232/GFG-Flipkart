{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node {\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\nvoid append(struct Node** headRef, struct Node** tailRef, int newData) {\r\n    struct Node* new_node = new Node(newData);\r\n\r\n    if (*headRef == NULL) {\r\n        *headRef = new_node;\r\n    }\r\n\r\n    else {\r\n        (*tailRef)->next = new_node;\r\n    }\r\n    *tailRef = new_node;\r\n}\r\n\r\nvoid printList(struct Node* head) {\r\n    while (head) {\r\n        cout << head->data << ' ';\r\n        head = head->next;\r\n    }\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n/*\r\nStructure of the node of the linked list is as\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n*/\r\nclass Solution{\r\n  public:\r\n   \r\n    int countPairs(struct Node* head1, struct Node* head2, int x) {\r\n       set<int> temp;\r\n       \r\n       while(head1)\r\n       {\r\n           temp.insert(head1->data);\r\n           head1=head1->next;\r\n       }\r\n       int ans=0;\r\n       while(head2)\r\n       {\r\n           int t=x-head2->data;\r\n           \r\n           if(temp.find(t)!=temp.end())\r\n           {\r\n               ans++;\r\n           }\r\n           head2=head2->next;\r\n       }\r\n       \r\n       return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int T;\r\n    cin >> T;\r\n    while (T--) {\r\n        struct Node* head1 = NULL;\r\n        struct Node* tail1 = NULL;\r\n        struct Node* tail2 = NULL;\r\n        struct Node* head2 = NULL;\r\n        int n1, n2, tmp, x;\r\n        cin >> n1;\r\n        while (n1--) {\r\n            cin >> tmp;\r\n            append(&head1, &tail1, tmp);\r\n        }\r\n        cin >> n2;\r\n        while (n2--) {\r\n            cin >> tmp;\r\n            append(&head2, &tail2, tmp);\r\n        }\r\n        cin >> x;\r\n        Solution obj;\r\n        cout << obj.countPairs(head1, head2, x) << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*\r\nStructure of the node of the linked list is as\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n*/\r\nclass Solution{\r\n  public:\r\n   \r\n    int countPairs(struct Node* head1, struct Node* head2, int x) {\r\n       set<int> temp;\r\n       \r\n       while(head1)\r\n       {\r\n           temp.insert(head1->data);\r\n           head1=head1->next;\r\n       }\r\n       int ans=0;\r\n       while(head2)\r\n       {\r\n           int t=x-head2->data;\r\n           \r\n           if(temp.find(t)!=temp.end())\r\n           {\r\n               ans++;\r\n           }\r\n           head2=head2->next;\r\n       }\r\n       \r\n       return ans;\r\n    }\r\n};\r\n"
}