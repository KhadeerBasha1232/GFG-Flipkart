{
  "code": "//Initial template for C++\r\n\r\n#include <bits/stdc++.h> \r\nusing namespace std; \r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\nvoid printList(Node* node) \r\n{ \r\n    while (node != NULL) { \r\n        cout << node->data%10; \r\n        node = node->next; \r\n    }  \r\n    cout<<\"\\n\";\r\n} \r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n\r\n/* \r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* reverse(Node*root)\r\n    {\r\n        Node*p=root,*q=0,*r=0;\r\n        while(p)\r\n        {\r\n            r=q;\r\n            q=p;\r\n            p=p->next;\r\n            q->next=r;\r\n        }\r\n        return q;\r\n    }\r\n    Node* addOne(Node *first) \r\n    {\r\n      Node*a=reverse(first);\r\n       \r\n          \r\n          \r\n          int carry=0;\r\n          Node*p=0;\r\n           int fla=0;\r\n           Node*t=a;\r\n          while(a)\r\n          {\r\n                   int sum=0;\r\n                    if(fla==0)\r\n                    {\r\n                        sum+=a->data+1;\r\n                        fla=1;\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        sum+=a->data+carry;\r\n                    }\r\n                   carry=sum/10;\r\n                   a->data=sum%10;\r\n                   p=a;\r\n                   a=a->next;\r\n                  //cout<<p->data<<endl;\r\n            }\r\n           \r\n            if(carry>0)\r\n            {\r\n                 Node*newnode=new Node(carry);\r\n                 p->next=newnode;\r\n                 p=newnode;\r\n            }\r\n            \r\n            Node*ans=reverse(t);\r\n           return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() \r\n{ \r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        string s;\r\n        cin>>s;\r\n        \r\n        Node* head = new Node( s[0]-'0' );\r\n        Node* tail = head;\r\n        for(int i=1; i<s.size(); i++)\r\n        {\r\n            tail->next = new Node( s[i]-'0' );\r\n            tail = tail->next;\r\n        }\r\n        Solution ob;\r\n        head = ob.addOne(head);\r\n        printList(head); \r\n    }\r\n    return 0; \r\n} \r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n\r\n/* \r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* reverse(Node*root)\r\n    {\r\n        Node*p=root,*q=0,*r=0;\r\n        while(p)\r\n        {\r\n            r=q;\r\n            q=p;\r\n            p=p->next;\r\n            q->next=r;\r\n        }\r\n        return q;\r\n    }\r\n    Node* addOne(Node *first) \r\n    {\r\n      Node*a=reverse(first);\r\n       \r\n          \r\n          \r\n          int carry=0;\r\n          Node*p=0;\r\n           int fla=0;\r\n           Node*t=a;\r\n          while(a)\r\n          {\r\n                   int sum=0;\r\n                    if(fla==0)\r\n                    {\r\n                        sum+=a->data+1;\r\n                        fla=1;\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        sum+=a->data+carry;\r\n                    }\r\n                   carry=sum/10;\r\n                   a->data=sum%10;\r\n                   p=a;\r\n                   a=a->next;\r\n                  //cout<<p->data<<endl;\r\n            }\r\n           \r\n            if(carry>0)\r\n            {\r\n                 Node*newnode=new Node(carry);\r\n                 p->next=newnode;\r\n                 p=newnode;\r\n            }\r\n            \r\n            Node*ans=reverse(t);\r\n           return ans;\r\n    }\r\n};\r\n"
}