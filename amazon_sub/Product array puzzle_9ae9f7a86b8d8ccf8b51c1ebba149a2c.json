{
  "code": "//Initial template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n\r\nclass Solution{\r\n  public:\r\n    // nums: given vector\r\n    // return the Product vector P that hold product except self at each index\r\n    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {\r\n       \r\n        vector<long long int> left(n),right(n);\r\n        left[0] = 1;\r\n        right[n-1] = 1;\r\n        for(int i = 1; i<n ;i++)\r\n        {\r\n            left[i] = left[i-1]*nums[i-1];\r\n            right[n-i-1] = right[n-i]*nums[n-i];\r\n        }\r\n        for(int i = 0 ; i<n ;i++)\r\n        {\r\n            left[i] = left[i]*right[i];\r\n        }\r\n        return left;\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n {\r\n    int t;  // number of test cases\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;  // size of the array\r\n        cin>>n;\r\n        vector<long long int> arr(n),vec(n);\r\n        \r\n        for(int i=0;i<n;i++)    // input the array\r\n        {\r\n            cin>>arr[i];\r\n        }\r\n        Solution obj;\r\n        vec = obj.productExceptSelf(arr,n);   // function call\r\n        \r\n        for(int i=0;i<n;i++)    // print the output\r\n        {\r\n            cout << vec[i] << \" \";\r\n        }\r\n        cout<<endl;\r\n    }\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n\r\nclass Solution{\r\n  public:\r\n    // nums: given vector\r\n    // return the Product vector P that hold product except self at each index\r\n    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {\r\n       \r\n        vector<long long int> left(n),right(n);\r\n        left[0] = 1;\r\n        right[n-1] = 1;\r\n        for(int i = 1; i<n ;i++)\r\n        {\r\n            left[i] = left[i-1]*nums[i-1];\r\n            right[n-i-1] = right[n-i]*nums[n-i];\r\n        }\r\n        for(int i = 0 ; i<n ;i++)\r\n        {\r\n            left[i] = left[i]*right[i];\r\n        }\r\n        return left;\r\n    }\r\n};\r\n\r\n"
}