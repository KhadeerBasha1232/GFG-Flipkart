{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution{\r\npublic:\r\n    // Function to determine if graph can be coloured with at most M colours such\r\n    // that no two adjacent vertices of graph are coloured with same colour.\r\n    bool isSafe(bool graph[101][101],vector<int>&vis,int m,int n,int i,int j) {\r\n        for(int k=0;k<n;k++) {\r\n            if(k!=i && graph[k][i]==1 && vis[k]==j) return false;\r\n        }\r\n        return true;\r\n    }\r\n    bool solve(bool graph[101][101],vector<int>&vis,int m,int n,int i) {\r\n        if(i==n) return true;\r\n        for(int j=0;j<m;j++) {\r\n            if(isSafe(graph,vis,m,n,i,j)) {\r\n                vis[i]=j;\r\n                if(solve(graph,vis,m,n,i+1)) return true;\r\n                vis[i]=-1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    bool graphColoring(bool graph[101][101], int m, int n) {\r\n        // your code here\r\n        vector<int> vis(n,-1);\r\n        if(solve(graph,vis,m,n,0)) return true;\r\n        return false;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n, m, e;\r\n        cin >> n >> m >> e;\r\n        int i;\r\n        bool graph[101][101];\r\n        for (i = 0; i < n; i++) {\r\n            memset(graph[i], 0, sizeof(graph[i]));\r\n        }\r\n        for (i = 0; i < e; i++) {\r\n            int a, b;\r\n            cin >> a >> b;\r\n            graph[a - 1][b - 1] = 1;\r\n            graph[b - 1][a - 1] = 1;\r\n        }\r\n        Solution ob;\r\n        cout << ob.graphColoring(graph, m, n) << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution{\r\npublic:\r\n    // Function to determine if graph can be coloured with at most M colours such\r\n    // that no two adjacent vertices of graph are coloured with same colour.\r\n    bool isSafe(bool graph[101][101],vector<int>&vis,int m,int n,int i,int j) {\r\n        for(int k=0;k<n;k++) {\r\n            if(k!=i && graph[k][i]==1 && vis[k]==j) return false;\r\n        }\r\n        return true;\r\n    }\r\n    bool solve(bool graph[101][101],vector<int>&vis,int m,int n,int i) {\r\n        if(i==n) return true;\r\n        for(int j=0;j<m;j++) {\r\n            if(isSafe(graph,vis,m,n,i,j)) {\r\n                vis[i]=j;\r\n                if(solve(graph,vis,m,n,i+1)) return true;\r\n                vis[i]=-1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    bool graphColoring(bool graph[101][101], int m, int n) {\r\n        // your code here\r\n        vector<int> vis(n,-1);\r\n        if(solve(graph,vis,m,n,0)) return true;\r\n        return false;\r\n    }\r\n};\r\n"
}