{
  "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n/* a Node of the doubly linked list */\r\nstruct Node\r\n{\r\n  int data;\r\n  struct Node *next;\r\n  struct Node *prev;\r\n  \r\n  Node(int x){\r\n      data = x;\r\n      next = NULL;\r\n      prev = NULL;\r\n  }\r\n  \r\n};\r\n\r\n\r\n// } Driver Code Ends\r\n/* Structure of Node\r\nstruct Node\r\n{\r\n  int data;\r\n  struct Node *next;\r\n  struct Node *prev;\r\n  \r\n  Node(int x){\r\n      data = x;\r\n      next = NULL;\r\n      prev = NULL;\r\n  }\r\n  \r\n};\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* deleteNode(Node *head, int x)\r\n    {\r\n      //Your code here\r\n     int cnt=1;\r\n     Node* curr = head;\r\n     Node* prev = NULL;\r\n     if(cnt==x){\r\n        curr->next->prev = NULL;\r\n        return curr->next;\r\n     }\r\n     while(curr->next !=NULL && cnt<x){\r\n         cnt++;\r\n         curr =curr->next;\r\n     }\r\n     \r\n     curr->prev->next = curr->next;\r\n     return head;\r\n      \r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\n/* Function to print Nodes in a given doubly linked list\r\n   This function is same as printList() of singly linked lsit */\r\nvoid printList(struct Node *node)\r\n{\r\n  while(node!=NULL)\r\n  {\r\n    printf(\"%d \", node->data);\r\n    node = node->next;\r\n  }\r\n   printf(\"\\n\");\r\n}\r\n \r\n/* Drier program to test above functions*/\r\nint main()\r\n{\r\n  int t, x, n, i;\r\n  scanf(\"%d\",&t);\r\n  \r\n  while(t--)\r\n  {\r\n      /* Start with the empty list */\r\n      struct Node *temp,*head = NULL;\r\n      scanf(\"%d\",&n);\r\n      \r\n      temp = NULL;\r\n      \r\n      for(i=0;i<n;i++){\r\n        scanf(\"%d\",&x);\r\n        \r\n        if(head == NULL){\r\n            head = new Node(x);\r\n            temp = head;\r\n        }\r\n        else{\r\n            Node *temp1 = new Node(x);\r\n            temp->next = temp1;\r\n            temp1->prev = temp;\r\n            temp = temp->next;\r\n        }\r\n      }\r\n  \r\n    scanf(\"%d\",&x);\r\n      \r\n    Solution ob;  \r\n    head = ob.deleteNode(head,x); \r\n      \r\n        \r\n        printList(head);           \r\n        while(head->next!=NULL)\r\n        {\r\n    \t    temp=head;\r\n    \t    head=head->next;\r\n    \t    free(temp);\r\n    \t}\r\n    \t\r\n    \tfree(head);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/* Structure of Node\r\nstruct Node\r\n{\r\n  int data;\r\n  struct Node *next;\r\n  struct Node *prev;\r\n  \r\n  Node(int x){\r\n      data = x;\r\n      next = NULL;\r\n      prev = NULL;\r\n  }\r\n  \r\n};\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* deleteNode(Node *head, int x)\r\n    {\r\n      //Your code here\r\n     int cnt=1;\r\n     Node* curr = head;\r\n     Node* prev = NULL;\r\n     if(cnt==x){\r\n        curr->next->prev = NULL;\r\n        return curr->next;\r\n     }\r\n     while(curr->next !=NULL && cnt<x){\r\n         cnt++;\r\n         curr =curr->next;\r\n     }\r\n     \r\n     curr->prev->next = curr->next;\r\n     return head;\r\n      \r\n    }\r\n};\r\n"
}