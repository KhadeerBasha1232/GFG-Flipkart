{
  "code": "//Initial Template for C++\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\nclass Solution\r\n{\r\npublic:\r\n     vector<int> findStores(int n, vector<int> houses, int m, \r\n    vector<int> stores)\r\n    {\r\n        sort(stores.begin(),stores.end());\r\n        vector<int>res;\r\n        for(auto house:houses){\r\n            auto it=lower_bound(stores.begin(),stores.end(),house);\r\n            if(it==stores.end()){\r\n                res.push_back(*(it-1));\r\n            }else if(it==stores.begin() || *it-house<house-*(it-1)){\r\n                res.push_back(*it);\r\n            }else{\r\n                res.push_back(*(it-1));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int N,M;\r\n        cin>>N>>M;\r\n        vector<int> houses(N),stores(M);\r\n        for(int i=0;i<N;i++){\r\n            cin>>houses[i];\r\n        }\r\n        for(int i=0;i<M;i++){\r\n            cin>>stores[i];\r\n        }\r\n        Solution ob;\r\n        auto ans = ob.findStores(N, houses, M, stores);\r\n        for(auto i:ans)\r\n            cout<<i<<\" \";\r\n        cout<<endl;\r\n    }\r\n    return 0;\r\n} \r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\nclass Solution\r\n{\r\npublic:\r\n     vector<int> findStores(int n, vector<int> houses, int m, \r\n    vector<int> stores)\r\n    {\r\n        sort(stores.begin(),stores.end());\r\n        vector<int>res;\r\n        for(auto house:houses){\r\n            auto it=lower_bound(stores.begin(),stores.end(),house);\r\n            if(it==stores.end()){\r\n                res.push_back(*(it-1));\r\n            }else if(it==stores.begin() || *it-house<house-*(it-1)){\r\n                res.push_back(*it);\r\n            }else{\r\n                res.push_back(*(it-1));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n};\r\n"
}