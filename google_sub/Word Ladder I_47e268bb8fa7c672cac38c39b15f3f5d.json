{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\npublic:\r\n    int wordLadderLength(string start, string target, vector<string>& ar) {\r\n        unordered_set<string> st(ar.begin(),ar.end());\r\n        st.erase(start);\r\n        queue<pair<string,int>> q;\r\n        q.push({start,1});\r\n        while(!q.empty()){\r\n            string s = q.front().first;\r\n            int d = q.front().second;\r\n            q.pop();\r\n            if(s == target) return d;\r\n            for(int i=0;i<s.length();i++){\r\n                string str = s;\r\n                for(int j=0;j<26;j++){\r\n                    str[i] = j + 'a';\r\n                    if(st.find(str) != st.end()){\r\n                        q.push({str,d+1});\r\n                        st.erase(str);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tvector<string>wordList(n);\r\n\t\tfor(int i = 0; i < n; i++)cin >> wordList[i];\r\n\t\tstring startWord, targetWord;\r\n\t\tcin >> startWord >> targetWord;\r\n\t\tSolution obj;\r\n\t\tint ans = obj.wordLadderLength(startWord, targetWord, wordList);\r\n\t\tcout << ans << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\npublic:\r\n    int wordLadderLength(string start, string target, vector<string>& ar) {\r\n        unordered_set<string> st(ar.begin(),ar.end());\r\n        st.erase(start);\r\n        queue<pair<string,int>> q;\r\n        q.push({start,1});\r\n        while(!q.empty()){\r\n            string s = q.front().first;\r\n            int d = q.front().second;\r\n            q.pop();\r\n            if(s == target) return d;\r\n            for(int i=0;i<s.length();i++){\r\n                string str = s;\r\n                for(int j=0;j<26;j++){\r\n                    str[i] = j + 'a';\r\n                    if(st.find(str) != st.end()){\r\n                        q.push({str,d+1});\r\n                        st.erase(str);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n};\r\n"
}