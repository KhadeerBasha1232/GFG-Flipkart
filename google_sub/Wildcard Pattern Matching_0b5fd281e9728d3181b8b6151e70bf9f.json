{
  "code": "import java.util.*;\r\n\r\nclass WildcardPattern\r\n{\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint t = sc.nextInt();\r\n\t\tsc.nextLine();\r\n\t\twhile(t>0)\r\n\t\t{\r\n\t\t\tString pat = sc.nextLine();\r\n\t\t\tString text = sc.nextLine();\r\n\t\t\tSolution g = new Solution();\r\n\t\t\tSystem.out.println(g.wildCard(pat,text));\r\n\t\t\tt--;\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    int wildCard(String pattern, String str)\r\n    {\r\n        // Your code goes here\r\n        int n = pattern.length();\r\n        int m = str.length();\r\n        int[][] dp = new int[n+1][m+1];\r\n        \r\n        dp[0][0] = 1;\r\n        \r\n        for(int j = 1; j <= m; j++) dp[0][j] = 0;\r\n        \r\n        for (int i = 1; i <= n; i++) {\r\n            if (pattern.charAt(i - 1) == '*')\r\n                dp[i][0] = dp[i - 1][0];\r\n            else\r\n                break;\r\n        }\r\n        \r\n        for(int i = 1; i <= n; i++){\r\n            for(int j = 1; j <= m; j++){\r\n                if(pattern.charAt(i-1) == str.charAt(j-1) || pattern.charAt(i-1) == '?'){\r\n                    dp[i][j] = dp[i-1][j-1];\r\n                }\r\n            \r\n                else if(pattern.charAt(i-1) == '*'){\r\n                    dp[i][j] = Math.max(dp[i-1][j] ,dp[i][j-1]);\r\n                }\r\n        \r\n                else dp[i][j] = 0;\r\n            }\r\n        }\r\n        return dp[n][m];\r\n    }\r\n}\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    int wildCard(String pattern, String str)\r\n    {\r\n        // Your code goes here\r\n        int n = pattern.length();\r\n        int m = str.length();\r\n        int[][] dp = new int[n+1][m+1];\r\n        \r\n        dp[0][0] = 1;\r\n        \r\n        for(int j = 1; j <= m; j++) dp[0][j] = 0;\r\n        \r\n        for (int i = 1; i <= n; i++) {\r\n            if (pattern.charAt(i - 1) == '*')\r\n                dp[i][0] = dp[i - 1][0];\r\n            else\r\n                break;\r\n        }\r\n        \r\n        for(int i = 1; i <= n; i++){\r\n            for(int j = 1; j <= m; j++){\r\n                if(pattern.charAt(i-1) == str.charAt(j-1) || pattern.charAt(i-1) == '?'){\r\n                    dp[i][j] = dp[i-1][j-1];\r\n                }\r\n            \r\n                else if(pattern.charAt(i-1) == '*'){\r\n                    dp[i][j] = Math.max(dp[i-1][j] ,dp[i][j-1]);\r\n                }\r\n        \r\n                else dp[i][j] = 0;\r\n            }\r\n        }\r\n        return dp[n][m];\r\n    }\r\n}\r\n"
}