{
  "code": "//Initial Template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    bool check(string s, string w) {\r\n        int m = s.size(), n = w.size();\r\n        int i = 0, j = 0;\r\n        for (int i2 = 0, j2 = 0; i < m && j < n; i = i2, j = j2) {\r\n            if (s[i] != w[j]) return false;\r\n            while(i2 < m && s[i2] == s[i]) i2++;\r\n            while(j2 < n && w[j2] == w[j]) j2++;\r\n            if ((i2 - i) != (j2 - j) && (i2 - i) < max(3, j2 - j)) return false; \r\n        }\r\n        return i == m && j == n;\r\n    }\r\n    int expressiveWords(string s, vector<string>& words) {\r\n                int ans = 0;\r\n        for (auto& word:words) {\r\n            if (check(s, word)) ans++;\r\n        }\r\n        return ans;\r\n    }\r\n };\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n        string s;\r\n        cin >> s;\r\n        int n;\r\n        cin >> n;\r\n        vector<string>words(n);\r\n        for(auto &i: words)cin >> i;\r\n        Solution ob;\r\n        cout<<ob.expressiveWords(s, words)<<endl;\r\n    }\r\n\t\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    bool check(string s, string w) {\r\n        int m = s.size(), n = w.size();\r\n        int i = 0, j = 0;\r\n        for (int i2 = 0, j2 = 0; i < m && j < n; i = i2, j = j2) {\r\n            if (s[i] != w[j]) return false;\r\n            while(i2 < m && s[i2] == s[i]) i2++;\r\n            while(j2 < n && w[j2] == w[j]) j2++;\r\n            if ((i2 - i) != (j2 - j) && (i2 - i) < max(3, j2 - j)) return false; \r\n        }\r\n        return i == m && j == n;\r\n    }\r\n    int expressiveWords(string s, vector<string>& words) {\r\n                int ans = 0;\r\n        for (auto& word:words) {\r\n            if (check(s, word)) ans++;\r\n        }\r\n        return ans;\r\n    }\r\n };\r\n"
}