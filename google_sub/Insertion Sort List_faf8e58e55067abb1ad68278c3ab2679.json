{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass Node {\r\n    int val;\r\n    Node next;\r\n    Node(int key) {\r\n        val = key;\r\n        next = null;\r\n    }\r\n}\r\nclass GFG {\r\n    public static void main (String[] args) {\r\n        Scanner sc= new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        while(t-- > 0) {\r\n            int n = sc.nextInt();\r\n            Node head = new Node(sc.nextInt());\r\n            Node tail = head;\r\n            while(n-- > 1){\r\n\t\t        tail.next = new Node(sc.nextInt());\r\n\t\t        tail = tail.next;\r\n\t\t    }\r\n\t\t     head = new Solution().insertionSortList(head);\r\n\t\t     printList(head);\r\n\t\t    System.out.println();\r\n        }\r\n    }\r\n    public static void printList(Node head) {\r\n        if(head == null)\r\n           return;\r\n        Node temp = head;\r\n        while(temp != null) {\r\n            System.out.print(temp.val + \" \");\r\n            temp = temp.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n/*\r\nclass Node\r\n{\r\n    int val;\r\n    Node next;\r\n    Node(int key)\r\n    {\r\n        this.val = key;\r\n        next = null;\r\n    }\r\n} */\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n/*\r\nclass Node\r\n{\r\n    int val;\r\n    Node next;\r\n    Node(int key)\r\n    {\r\n        this.val = key;\r\n        next = null;\r\n    }\r\n} */\r\n\r\nclass Solution\r\n{\r\n    //Function to sort the given linked list using Merge Sort.\r\n    static Node insertionSortList(Node head)\r\n    {\r\n        // Code here\r\n         if (head == null || head.next == null) {\r\n            return head;\r\n        }\r\n\r\n        Node sortedList = null;\r\n\r\n        while (head != null) {\r\n            Node current = head;\r\n            head = head.next;\r\n\r\n            if (sortedList == null || current.val < sortedList.val) {\r\n                current.next = sortedList;\r\n                sortedList = current;\r\n            } else {\r\n                Node temp = sortedList;\r\n                while (temp.next != null && current.val > temp.next.val) {\r\n                    temp = temp.next;\r\n                }\r\n                current.next = temp.next;\r\n                temp.next = current;\r\n            }\r\n        }\r\n\r\n        return sortedList;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n/*\r\nclass Node\r\n{\r\n    int val;\r\n    Node next;\r\n    Node(int key)\r\n    {\r\n        this.val = key;\r\n        next = null;\r\n    }\r\n} */\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n/*\r\nclass Node\r\n{\r\n    int val;\r\n    Node next;\r\n    Node(int key)\r\n    {\r\n        this.val = key;\r\n        next = null;\r\n    }\r\n} */\r\n\r\nclass Solution\r\n{\r\n    //Function to sort the given linked list using Merge Sort.\r\n    static Node insertionSortList(Node head)\r\n    {\r\n        // Code here\r\n         if (head == null || head.next == null) {\r\n            return head;\r\n        }\r\n\r\n        Node sortedList = null;\r\n\r\n        while (head != null) {\r\n            Node current = head;\r\n            head = head.next;\r\n\r\n            if (sortedList == null || current.val < sortedList.val) {\r\n                current.next = sortedList;\r\n                sortedList = current;\r\n            } else {\r\n                Node temp = sortedList;\r\n                while (temp.next != null && current.val > temp.next.val) {\r\n                    temp = temp.next;\r\n                }\r\n                current.next = temp.next;\r\n                temp.next = current;\r\n            }\r\n        }\r\n\r\n        return sortedList;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}