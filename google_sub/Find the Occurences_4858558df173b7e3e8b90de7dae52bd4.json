{
  "code": "//Initial Template for C++\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n\r\n//User function Template for C++\r\nclass Solution{\r\npublic:\r\n    long long dp[64][64][2][2];\r\n    long long f(string &str,int &D,int i=0,int cnt=0,int tight=1,int lead=1){\r\n        if(i==str.size())   return cnt;\r\n        if(dp[i][cnt][tight][lead]!=-1) return dp[i][cnt][tight][lead];\r\n        long long ans=0;\r\n        if(lead) ans+=f(str,D,i+1,0,0,1);\r\n        int maxDig=tight?str[i]-'0':9;\r\n        for(int dig=0;dig<=maxDig;dig++){\r\n            if(lead && dig==0) continue;\r\n            ans+=f(str,D,i+1,cnt+(dig==D),tight&&(dig==(str[i]-'0')),0);\r\n        }\r\n        return dp[i][cnt][tight][lead]=ans;\r\n    }\r\n    long long getOccurence(long long N, int D)\r\n    {\r\n        memset(dp,-1,sizeof(dp));\r\n        string str=to_string(N);\r\n        return f(str,D);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        long long N;\r\n        int K;\r\n        cin>>N>>K;\r\n        Solution obj;\r\n        cout<<obj.getOccurence(N, K)<<endl;\r\n    }\r\n    return 0;\r\n} \r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n//User function Template for C++\r\nclass Solution{\r\npublic:\r\n    long long dp[64][64][2][2];\r\n    long long f(string &str,int &D,int i=0,int cnt=0,int tight=1,int lead=1){\r\n        if(i==str.size())   return cnt;\r\n        if(dp[i][cnt][tight][lead]!=-1) return dp[i][cnt][tight][lead];\r\n        long long ans=0;\r\n        if(lead) ans+=f(str,D,i+1,0,0,1);\r\n        int maxDig=tight?str[i]-'0':9;\r\n        for(int dig=0;dig<=maxDig;dig++){\r\n            if(lead && dig==0) continue;\r\n            ans+=f(str,D,i+1,cnt+(dig==D),tight&&(dig==(str[i]-'0')),0);\r\n        }\r\n        return dp[i][cnt][tight][lead]=ans;\r\n    }\r\n    long long getOccurence(long long N, int D)\r\n    {\r\n        memset(dp,-1,sizeof(dp));\r\n        string str=to_string(N);\r\n        return f(str,D);\r\n    }\r\n};\r\n"
}