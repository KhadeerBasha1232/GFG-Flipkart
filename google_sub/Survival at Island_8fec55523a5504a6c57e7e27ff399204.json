{
  "code": "//Initial Template for Java\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int tc = Integer.parseInt(br.readLine().trim());\r\n        while (tc-- > 0) {\r\n            String[] inputLine;\r\n            inputLine = br.readLine().trim().split(\" \");\r\n            int N = Integer.parseInt(inputLine[0]);\r\n            int X = Integer.parseInt(inputLine[1]);\r\n            int Y = Integer.parseInt(inputLine[2]);\r\n            int K = Integer.parseInt(inputLine[3]);\r\n            long ans = new Solution().ProbabilityofAlive(N, X, Y, K);\r\n            System.out.println(ans);\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    private int mod = 1_000_000_007;\r\n    private long power(long x,long y){\r\n        long res = 1;\r\n        while(y>0){\r\n            if((y&1)>0){\r\n                res = (res*x)%mod;\r\n            }\r\n            y>>=1;\r\n            x = (x*x)%mod;\r\n        }\r\n        return res;\r\n    }\r\n    private long modInverse(long x){\r\n        return power(x,mod-2);\r\n    }\r\n    \r\n    long ProbabilityofAlive(int N, int X, int Y, int K) {\r\n        Long[][][] dp = new Long[N+1][N+1][K+1];\r\n        long p = solve(N,X,Y,K,dp);\r\n        long q = power(4,K);\r\n        long q_inverse = modInverse(q);\r\n        \r\n        return (p*q_inverse)%mod;\r\n    }\r\n    private long solve(int n,int x,int y,int k,Long[][][] dp){\r\n        if(x<0 || y<0 || x>=n || y>=n) return 0;\r\n        if(k==0) return 1;\r\n        \r\n        if(dp[x][y][k]!=null) return dp[x][y][k]; \r\n        \r\n        long res=0;\r\n        \r\n        res+= solve(n,x-1,y,k-1,dp);\r\n        res+= solve(n,x,y+1,k-1,dp);\r\n        res+= solve(n,x+1,y,k-1,dp);\r\n        res+= solve(n,x,y-1,k-1,dp);\r\n        \r\n        return dp[x][y][k] = res%mod;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    private int mod = 1_000_000_007;\r\n    private long power(long x,long y){\r\n        long res = 1;\r\n        while(y>0){\r\n            if((y&1)>0){\r\n                res = (res*x)%mod;\r\n            }\r\n            y>>=1;\r\n            x = (x*x)%mod;\r\n        }\r\n        return res;\r\n    }\r\n    private long modInverse(long x){\r\n        return power(x,mod-2);\r\n    }\r\n    \r\n    long ProbabilityofAlive(int N, int X, int Y, int K) {\r\n        Long[][][] dp = new Long[N+1][N+1][K+1];\r\n        long p = solve(N,X,Y,K,dp);\r\n        long q = power(4,K);\r\n        long q_inverse = modInverse(q);\r\n        \r\n        return (p*q_inverse)%mod;\r\n    }\r\n    private long solve(int n,int x,int y,int k,Long[][][] dp){\r\n        if(x<0 || y<0 || x>=n || y>=n) return 0;\r\n        if(k==0) return 1;\r\n        \r\n        if(dp[x][y][k]!=null) return dp[x][y][k]; \r\n        \r\n        long res=0;\r\n        \r\n        res+= solve(n,x-1,y,k-1,dp);\r\n        res+= solve(n,x,y+1,k-1,dp);\r\n        res+= solve(n,x+1,y,k-1,dp);\r\n        res+= solve(n,x,y-1,k-1,dp);\r\n        \r\n        return dp[x][y][k] = res%mod;\r\n    }\r\n}"
}