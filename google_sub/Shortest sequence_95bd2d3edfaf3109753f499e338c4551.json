{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nimport java.math.*;\r\n\r\n\r\nclass GFG{\r\n    static class FastReader{ \r\n        BufferedReader br; \r\n        StringTokenizer st; \r\n  \r\n        public FastReader(){ \r\n            br = new BufferedReader(new InputStreamReader(System.in)); \r\n        } \r\n  \r\n        String next(){ \r\n            while (st == null || !st.hasMoreElements()){ \r\n                try{ st = new StringTokenizer(br.readLine()); } catch (IOException  e){ e.printStackTrace(); } \r\n            } \r\n            return st.nextToken(); \r\n        } \r\n  \r\n        String nextLine(){ \r\n            String str = \"\"; \r\n            try{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } \r\n            return str; \r\n        } \r\n\r\n        Integer nextInt(){\r\n            return Integer.parseInt(next());\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException{\r\n        FastReader sc = new FastReader();\r\n        PrintWriter out = new PrintWriter(System.out);\r\n        int t = sc.nextInt();\r\n        while(t-- > 0){\r\n            int N = sc.nextInt(), K = sc.nextInt();\r\n            int A[] = new int[N];\r\n            for(int i = 0; i < N; i++)\r\n                A[i] = sc.nextInt();\r\n            Solution ob = new Solution();\r\n            int ans = ob.shortestSequence(N, K, A);\r\n            out.println(ans);\r\n        }\r\n        out.flush();\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    int shortestSequence(int n, int k, int a[]){\r\n        HashSet<Integer> s = new HashSet<Integer>();\r\n        int count = 0;\r\n        //ArrayList<Integer> v = new ArrayList<Integer>();\r\n        \r\n        for(int e : a)\r\n        {\r\n            s.add(e);\r\n            \r\n            if(s.size() == k)\r\n            {\r\n                count++;\r\n                // v.add(e);\r\n                s.clear();\r\n            }\r\n        }\r\n        \r\n        for(int i = k; i > 0; i--)\r\n        {\r\n            if(!s.contains(i))\r\n            {\r\n                count++;\r\n                // v.add(i);\r\n                break;\r\n            }\r\n        }\r\n        \r\n        //return v.size();\r\n        return count;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    int shortestSequence(int n, int k, int a[]){\r\n        HashSet<Integer> s = new HashSet<Integer>();\r\n        int count = 0;\r\n        //ArrayList<Integer> v = new ArrayList<Integer>();\r\n        \r\n        for(int e : a)\r\n        {\r\n            s.add(e);\r\n            \r\n            if(s.size() == k)\r\n            {\r\n                count++;\r\n                // v.add(e);\r\n                s.clear();\r\n            }\r\n        }\r\n        \r\n        for(int i = k; i > 0; i--)\r\n        {\r\n            if(!s.contains(i))\r\n            {\r\n                count++;\r\n                // v.add(i);\r\n                break;\r\n            }\r\n        }\r\n        \r\n        //return v.size();\r\n        return count;\r\n    }\r\n}"
}