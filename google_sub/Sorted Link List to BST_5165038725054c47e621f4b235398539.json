{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h> \r\nusing namespace std; \r\n\r\nstruct LNode\r\n{\r\n    int data;\r\n    struct LNode* next;\r\n    \r\n    LNode(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\nstruct TNode  \r\n{  \r\n    \r\n    int data;  \r\n    struct TNode* left;  \r\n    struct TNode* right; \r\n    TNode(int x)\r\n    {\r\n        data=x;\r\n        left=right=NULL;\r\n    }\r\n}; \r\n\r\nvoid preOrder(TNode* node)  \r\n{  \r\n    if (node == NULL)  \r\n        return;  \r\n    cout<<node->data<<\" \";  \r\n    preOrder(node->left);  \r\n    preOrder(node->right);  \r\n} \r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\n\r\n//User function Template for C++\r\n\r\n/* \r\n//Linked List\r\nstruct LNode\r\n{\r\n    int data;\r\n    struct LNode* next;\r\n    \r\n    LNode(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n//Tree\r\nstruct TNode  \r\n{  \r\n    \r\n    int data;  \r\n    struct TNode* left;  \r\n    struct TNode* right; \r\n    TNode(int x)\r\n    {\r\n        data=x;\r\n        left=right=NULL;\r\n    }\r\n}; */\r\nclass Solution{\r\n  public:\r\n  \r\n    int getSize(LNode* head)\r\n    {\r\n        int count=0;\r\n        LNode* temp = head;\r\n        while(temp)\r\n        {\r\n            count++;\r\n            temp=temp->next;\r\n        }\r\n        return count;\r\n    }\r\n  \r\n    TNode* solver(LNode* &head,int n)\r\n    {\r\n        if(head==NULL || n<=0)\r\n        return NULL;\r\n        \r\n        TNode* leftAns = solver(head,n/2);\r\n        \r\n        TNode* root = new TNode(head->data);\r\n        root->left=leftAns;\r\n        head=head->next;\r\n        \r\n        TNode* rightAns = solver(head,n-n/2-1);\r\n        root->right=rightAns;\r\n        \r\n        return root;\r\n    }\r\n  \r\n    TNode* sortedListToBST(LNode *head) {\r\n        //code here\r\n        int n = getSize(head);\r\n        return solver(head,n);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() \r\n{ \r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;\r\n        cin>>n;\r\n\r\n        int data;\r\n        cin>>data;\r\n        LNode *head = new LNode(data);\r\n        LNode *tail = head;\r\n        for (int i = 0; i < n-1; ++i)\r\n        {\r\n            cin>>data;\r\n            tail->next = new LNode(data);\r\n            tail = tail->next;\r\n        }\r\n        Solution ob;\r\n        TNode* Thead = ob.sortedListToBST(head);\r\n        preOrder(Thead);\r\n        cout<<\"\\n\";\r\n        \r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\n\r\n//User function Template for C++\r\n\r\n/* \r\n//Linked List\r\nstruct LNode\r\n{\r\n    int data;\r\n    struct LNode* next;\r\n    \r\n    LNode(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n//Tree\r\nstruct TNode  \r\n{  \r\n    \r\n    int data;  \r\n    struct TNode* left;  \r\n    struct TNode* right; \r\n    TNode(int x)\r\n    {\r\n        data=x;\r\n        left=right=NULL;\r\n    }\r\n}; */\r\nclass Solution{\r\n  public:\r\n  \r\n    int getSize(LNode* head)\r\n    {\r\n        int count=0;\r\n        LNode* temp = head;\r\n        while(temp)\r\n        {\r\n            count++;\r\n            temp=temp->next;\r\n        }\r\n        return count;\r\n    }\r\n  \r\n    TNode* solver(LNode* &head,int n)\r\n    {\r\n        if(head==NULL || n<=0)\r\n        return NULL;\r\n        \r\n        TNode* leftAns = solver(head,n/2);\r\n        \r\n        TNode* root = new TNode(head->data);\r\n        root->left=leftAns;\r\n        head=head->next;\r\n        \r\n        TNode* rightAns = solver(head,n-n/2-1);\r\n        root->right=rightAns;\r\n        \r\n        return root;\r\n    }\r\n  \r\n    TNode* sortedListToBST(LNode *head) {\r\n        //code here\r\n        int n = getSize(head);\r\n        return solver(head,n);\r\n    }\r\n};\r\n"
}