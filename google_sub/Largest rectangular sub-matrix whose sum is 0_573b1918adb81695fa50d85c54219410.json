{
  "code": "\r\n\r\nfrom typing import List\r\n\r\n\r\nclass Solution:\r\n    def max_sub_sum(self,arr):\r\n        n=len(arr)\r\n        prefix_sum={0:-1}\r\n        _sum=0\r\n        s,e=0,0\r\n        max_len=-float(\"inf\")\r\n        curr_len=0\r\n        for i in range(n):\r\n            _sum+=arr[i]\r\n            if _sum in prefix_sum:\r\n                curr_len=i-prefix_sum[_sum]\r\n                if curr_len>max_len:\r\n                    max_len=curr_len\r\n                    e=i\r\n                    s=prefix_sum[_sum]+1\r\n            else:\r\n                prefix_sum[_sum]=i\r\n        return (s,e,max_len)\r\n        \r\n    def sumZeroMatrix(self, a):\r\n        n,m=len(a),len(a[0])\r\n        r1,r2,c1,c2,max_area=None,None,None,None,-float(\"inf\")\r\n        for i in range(m):\r\n            arr=[0]*n\r\n            for j in range(i,m):\r\n                for k in range(n):\r\n                    arr[k]+=a[k][j]\r\n                s,e,length=self.max_sub_sum(arr)\r\n                area=(e-s+1)*(j-i+1)\r\n                if length>0 and area>max_area:\r\n                    max_area=area\r\n                    r1,r2,c1,c2=s,e,i,j\r\n        result=[]\r\n        for i in range(r1,r2+1):\r\n            row_i=[]\r\n            for j in range(c1,c2+1):\r\n                row_i.append(a[i][j])\r\n            result.append(row_i)\r\n        return result\r\n        \r\n\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n\r\nclass IntArray:\r\n    def __init__(self) -> None:\r\n        pass\r\n    def Input(self,n):\r\n        arr=[int(i) for i in input().strip().split()]#array input\r\n        return arr\r\n    def Print(self,arr):\r\n        for i in arr:\r\n            print(i,end=\" \")\r\n        print()\r\n\r\n\r\n\r\nclass IntMatrix:\r\n    def __init__(self) -> None:\r\n        pass\r\n    def Input(self,n,m):\r\n        matrix=[]\r\n        #matrix input\r\n        for _ in range(n):\r\n            matrix.append([int(i) for i in input().strip().split()])\r\n        return matrix\r\n    def Print(self,arr):\r\n        for i in arr:\r\n            for j in i:\r\n                print(j,end=\" \")\r\n            print()\r\n\r\n\r\nif __name__==\"__main__\":\r\n    t = int(input())\r\n    for _ in range(t):\r\n        \r\n        nm=IntArray().Input(2)\r\n        \r\n        \r\n        a=IntMatrix().Input(nm[0], nm[1])\r\n        \r\n        obj = Solution()\r\n        res = obj.sumZeroMatrix(a)\r\n        if len(res) == 0:\r\n            print(-1)\r\n        else:\r\n            IntMatrix().Print(res)\r\n        \r\n\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "from typing import List\r\n\r\n\r\nfrom typing import List\r\n\r\n\r\nclass Solution:\r\n    def max_sub_sum(self,arr):\r\n        n=len(arr)\r\n        prefix_sum={0:-1}\r\n        _sum=0\r\n        s,e=0,0\r\n        max_len=-float(\"inf\")\r\n        curr_len=0\r\n        for i in range(n):\r\n            _sum+=arr[i]\r\n            if _sum in prefix_sum:\r\n                curr_len=i-prefix_sum[_sum]\r\n                if curr_len>max_len:\r\n                    max_len=curr_len\r\n                    e=i\r\n                    s=prefix_sum[_sum]+1\r\n            else:\r\n                prefix_sum[_sum]=i\r\n        return (s,e,max_len)\r\n        \r\n    def sumZeroMatrix(self, a):\r\n        n,m=len(a),len(a[0])\r\n        r1,r2,c1,c2,max_area=None,None,None,None,-float(\"inf\")\r\n        for i in range(m):\r\n            arr=[0]*n\r\n            for j in range(i,m):\r\n                for k in range(n):\r\n                    arr[k]+=a[k][j]\r\n                s,e,length=self.max_sub_sum(arr)\r\n                area=(e-s+1)*(j-i+1)\r\n                if length>0 and area>max_area:\r\n                    max_area=area\r\n                    r1,r2,c1,c2=s,e,i,j\r\n        result=[]\r\n        for i in range(r1,r2+1):\r\n            row_i=[]\r\n            for j in range(c1,c2+1):\r\n                row_i.append(a[i][j])\r\n            result.append(row_i)\r\n        return result\r\n        \r\n\r\n\r\n\r\n"
}