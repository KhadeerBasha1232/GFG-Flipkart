{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int solve(int N,vector<vector<int>> Matrix,int i,int j,vector<vector<int>>& dp)\r\n    {\r\n        if(i==0 || i>N || j==0 || j>N) return 0;\r\n        if(dp[i][j]!=-1) return dp[i][j];\r\n        int take=0,left=0,right=0;\r\n        if(i-1>=0 && j>=0) take = solve(N,Matrix,i-1,j,dp);\r\n        if(i-1>=0 && j-1>=0) left = solve(N,Matrix,i-1,j-1,dp);\r\n        if(i-1>=0 && j+1>=0) right = solve(N,Matrix,i-1,j+1,dp);\r\n        return dp[i][j]=Matrix[i-1][j-1]+max(take,max(left,right));\r\n    }\r\n    int maximumPath(int N, vector<vector<int>> Matrix)\r\n    {\r\n        // code here\r\n        int maxval=INT_MIN;\r\n        vector<vector<int>> dp(N+1,vector<int>(N+1,0));\r\n        // for(int j=N;j>=0;j--)\r\n        // {\r\n        //     maxval=max(maxval,solve(N,Matrix,N,j,dp));\r\n        // }\r\n        // return maxval;\r\n        for(int i=0;i<=N;i++)\r\n        {\r\n            dp[0][i]=0;\r\n            dp[i][0]=0;\r\n        }\r\n        \r\n        for(int i=1;i<=N;i++)\r\n        {\r\n            for(int j=1;j<=N;j++)\r\n            {\r\n                int take=0,left=0,right=0;\r\n                if(i>0) take = dp[i-1][j];\r\n                if(i>0 && j>0) left = dp[i-1][j-1];\r\n                if(i>0 && j+1<=N) right = dp[i-1][j+1];\r\n                dp[i][j]=Matrix[i-1][j-1]+max(take,max(left,right));\r\n            }\r\n        }\r\n        for(int j=N;j>=0;j--)\r\n        {\r\n            maxval=max(maxval,dp[N][j]);\r\n        }\r\n        \r\n        return maxval;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N;\r\n        cin>>N;\r\n        vector<vector<int>> Matrix(N, vector<int>(N, 0));\r\n        for(int i = 0;i < N*N;i++)\r\n            cin>>Matrix[(i/N)][i%N];\r\n        \r\n        Solution ob;\r\n        cout<<ob.maximumPath(N, Matrix)<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int solve(int N,vector<vector<int>> Matrix,int i,int j,vector<vector<int>>& dp)\r\n    {\r\n        if(i==0 || i>N || j==0 || j>N) return 0;\r\n        if(dp[i][j]!=-1) return dp[i][j];\r\n        int take=0,left=0,right=0;\r\n        if(i-1>=0 && j>=0) take = solve(N,Matrix,i-1,j,dp);\r\n        if(i-1>=0 && j-1>=0) left = solve(N,Matrix,i-1,j-1,dp);\r\n        if(i-1>=0 && j+1>=0) right = solve(N,Matrix,i-1,j+1,dp);\r\n        return dp[i][j]=Matrix[i-1][j-1]+max(take,max(left,right));\r\n    }\r\n    int maximumPath(int N, vector<vector<int>> Matrix)\r\n    {\r\n        // code here\r\n        int maxval=INT_MIN;\r\n        vector<vector<int>> dp(N+1,vector<int>(N+1,0));\r\n        // for(int j=N;j>=0;j--)\r\n        // {\r\n        //     maxval=max(maxval,solve(N,Matrix,N,j,dp));\r\n        // }\r\n        // return maxval;\r\n        for(int i=0;i<=N;i++)\r\n        {\r\n            dp[0][i]=0;\r\n            dp[i][0]=0;\r\n        }\r\n        \r\n        for(int i=1;i<=N;i++)\r\n        {\r\n            for(int j=1;j<=N;j++)\r\n            {\r\n                int take=0,left=0,right=0;\r\n                if(i>0) take = dp[i-1][j];\r\n                if(i>0 && j>0) left = dp[i-1][j-1];\r\n                if(i>0 && j+1<=N) right = dp[i-1][j+1];\r\n                dp[i][j]=Matrix[i-1][j-1]+max(take,max(left,right));\r\n            }\r\n        }\r\n        for(int j=N;j>=0;j--)\r\n        {\r\n            maxval=max(maxval,dp[N][j]);\r\n        }\r\n        \r\n        return maxval;\r\n    }\r\n};\r\n"
}