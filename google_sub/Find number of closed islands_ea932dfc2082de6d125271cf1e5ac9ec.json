{
  "code": "//Initial Template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\n    public:\r\n    int n;\r\n    int m;\r\n    int arr[4]={-1,1,0,0};\r\n    int brr[4]={0,0,1,-1};\r\n    \r\n    int dfs(int i,int j,vector<vector<int>>&matrix)\r\n    {   if(i>=n || i<0 ||j>=m || j<0)\r\n         {\r\n        return 0;\r\n        }\r\n        if(matrix[i][j]==0)\r\n        {\r\n            return 1;\r\n        }\r\n        matrix[i][j]=0;\r\n        int ans=1;\r\n        for(int k=0;k<4;k++)\r\n        {\r\n           ans=ans&dfs(i+arr[k],j+brr[k],matrix); \r\n        }\r\n        return ans;\r\n    }\r\n    int closedIslands(vector<vector<int>>& matrix, int N, int M) {\r\n        // Code here\r\n        n=N;\r\n        m=M;\r\n        int count=0;\r\n        for(int i=0;i<N;i++)\r\n        {\r\n            for(int j=0;j<M;j++)\r\n            {\r\n                if(matrix[i][j])\r\n                {\r\n                    if(dfs(i,j,matrix))\r\n                    {\r\n                        ++count;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n        int N, M;\r\n        cin >> N >> M;\r\n        vector<vector<int>>matrix(N, vector<int>(M, 0));\r\n        for(int i=0; i<N; i++)\r\n            for(int j=0; j<M; j++)\r\n                cin >> matrix[i][j];\r\n                \r\n        Solution obj;\r\n        int ans = obj.closedIslands(matrix, N, M);\r\n        cout << ans << \"\\n\";\r\n    }\r\n\t\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\n    public:\r\n    int n;\r\n    int m;\r\n    int arr[4]={-1,1,0,0};\r\n    int brr[4]={0,0,1,-1};\r\n    \r\n    int dfs(int i,int j,vector<vector<int>>&matrix)\r\n    {   if(i>=n || i<0 ||j>=m || j<0)\r\n         {\r\n        return 0;\r\n        }\r\n        if(matrix[i][j]==0)\r\n        {\r\n            return 1;\r\n        }\r\n        matrix[i][j]=0;\r\n        int ans=1;\r\n        for(int k=0;k<4;k++)\r\n        {\r\n           ans=ans&dfs(i+arr[k],j+brr[k],matrix); \r\n        }\r\n        return ans;\r\n    }\r\n    int closedIslands(vector<vector<int>>& matrix, int N, int M) {\r\n        // Code here\r\n        n=N;\r\n        m=M;\r\n        int count=0;\r\n        for(int i=0;i<N;i++)\r\n        {\r\n            for(int j=0;j<M;j++)\r\n            {\r\n                if(matrix[i][j])\r\n                {\r\n                    if(dfs(i,j,matrix))\r\n                    {\r\n                        ++count;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n};\r\n"
}