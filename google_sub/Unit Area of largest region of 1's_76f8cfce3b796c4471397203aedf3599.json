{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    private:\r\n    void dfs(int i, int j, vector<vector<bool>> &vis, vector<vector<int>> &grid, int &cnt) {\r\n        int n=grid.size();\r\n        int m=grid[0].size();\r\n        vis[i][j]=true;\r\n        cnt++;\r\n        for(int x=-1; x<=1; x++) {\r\n            for(int y=-1; y<=1; y++) {\r\n                int ni=i+x;\r\n                int nj=j+y;\r\n                if(ni>=0 && nj>=0 && ni<n && nj<m && grid[ni][nj]==1 && !vis[ni][nj]) {\r\n                    dfs(ni,nj,vis,grid,cnt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public:\r\n    //Function to find unit area of the largest region of 1s.\r\n    int findMaxArea(vector<vector<int>>& grid) {\r\n        // Code here\r\n        int n=grid.size();\r\n        int m=grid[0].size();\r\n        int ans=0;\r\n        vector<vector<bool>> vis(n,vector<bool>(m,false));\r\n        for(int i=0; i<n; i++) {\r\n            for(int j=0; j<m; j++) {\r\n                if(grid[i][j]==1 && !vis[i][j]) {\r\n                    int cnt=0;\r\n                    dfs(i,j,vis,grid,cnt);\r\n                    ans=max(ans,cnt);\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint n, m;\r\n\t\tcin >> n >> m;\r\n\t\tvector<vector<int>>grid(n, vector<int>(m, -1));\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tfor(int j = 0; j < m; j++){\r\n\t\t\t\tcin >> grid[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tSolution obj;\r\n\t\tint ans = obj.findMaxArea(grid);\r\n\t\tcout << ans << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    private:\r\n    void dfs(int i, int j, vector<vector<bool>> &vis, vector<vector<int>> &grid, int &cnt) {\r\n        int n=grid.size();\r\n        int m=grid[0].size();\r\n        vis[i][j]=true;\r\n        cnt++;\r\n        for(int x=-1; x<=1; x++) {\r\n            for(int y=-1; y<=1; y++) {\r\n                int ni=i+x;\r\n                int nj=j+y;\r\n                if(ni>=0 && nj>=0 && ni<n && nj<m && grid[ni][nj]==1 && !vis[ni][nj]) {\r\n                    dfs(ni,nj,vis,grid,cnt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public:\r\n    //Function to find unit area of the largest region of 1s.\r\n    int findMaxArea(vector<vector<int>>& grid) {\r\n        // Code here\r\n        int n=grid.size();\r\n        int m=grid[0].size();\r\n        int ans=0;\r\n        vector<vector<bool>> vis(n,vector<bool>(m,false));\r\n        for(int i=0; i<n; i++) {\r\n            for(int j=0; j<m; j++) {\r\n                if(grid[i][j]==1 && !vis[i][j]) {\r\n                    int cnt=0;\r\n                    dfs(i,j,vis,grid,cnt);\r\n                    ans=max(ans,cnt);\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n"
}