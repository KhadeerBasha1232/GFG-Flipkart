{
  "code": "//Initial Template for C++\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n\r\n\r\n    void find(vector<string> &w, map<string,vector<int>> &hash, vector<vector<string>> &ans, vector<string> &res, int n,int i){\r\n        if(i==n){\r\n            ans.push_back(res);\r\n            return;\r\n        }\r\n        \r\n        string x=\"\";\r\n        for(int j=0;j<i;j++){\r\n            x+=res[j][i];\r\n        }\r\n        \r\n        for(int j=0;j<hash[x].size();j++){\r\n            res.push_back(w[hash[x][j]]);\r\n            find(w,hash,ans,res,n,i+1);\r\n            res.pop_back();\r\n        }\r\n        return;\r\n    }\r\n    \r\n    vector<vector<string>> wordSquares(vector<string>& words) {\r\n        vector<vector<string>> ans;\r\n        vector<string> res;\r\n        string s=\"\";\r\n        map<string,vector<int>> hash;\r\n        for(int i=0;i<words.size();i++){\r\n            string x=\"\";\r\n            for(int j=0;j<=words[i].size();j++){\r\n                x+=words[i][j];\r\n                hash[x].push_back(i);\r\n            }\r\n        }\r\n        for(int i=0;i<words.size();i++){\r\n            res.push_back(words[i]);\r\n            find(words,hash, ans, res,words[i].size(),1);\r\n            res.pop_back();\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n        int n;\r\n        cin >> n;\r\n        vector<string>words(n);\r\n        for(auto &i: words)cin >> i;\r\n        Solution obj;\r\n        vector<vector<string>>ans = obj.wordSquares(words);\r\n        sort(ans.begin(), ans.end());\r\n        for(auto i: ans){\r\n            string st = \"[\\\"\";\r\n            string ed = \"\\\"]\";\r\n            cout << st;\r\n            for(int j = 0; j < i.size(); j++){\r\n                if(j != i.size() - 1)cout << i[j] << \", \";\r\n                else cout << i[j];\r\n            }\r\n            cout << ed << \"\\n\";\r\n        }\r\n    }\r\n\t\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n\r\n\r\n    void find(vector<string> &w, map<string,vector<int>> &hash, vector<vector<string>> &ans, vector<string> &res, int n,int i){\r\n        if(i==n){\r\n            ans.push_back(res);\r\n            return;\r\n        }\r\n        \r\n        string x=\"\";\r\n        for(int j=0;j<i;j++){\r\n            x+=res[j][i];\r\n        }\r\n        \r\n        for(int j=0;j<hash[x].size();j++){\r\n            res.push_back(w[hash[x][j]]);\r\n            find(w,hash,ans,res,n,i+1);\r\n            res.pop_back();\r\n        }\r\n        return;\r\n    }\r\n    \r\n    vector<vector<string>> wordSquares(vector<string>& words) {\r\n        vector<vector<string>> ans;\r\n        vector<string> res;\r\n        string s=\"\";\r\n        map<string,vector<int>> hash;\r\n        for(int i=0;i<words.size();i++){\r\n            string x=\"\";\r\n            for(int j=0;j<=words[i].size();j++){\r\n                x+=words[i][j];\r\n                hash[x].push_back(i);\r\n            }\r\n        }\r\n        for(int i=0;i<words.size();i++){\r\n            res.push_back(words[i]);\r\n            find(words,hash, ans, res,words[i].size(),1);\r\n            res.pop_back();\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n"
}