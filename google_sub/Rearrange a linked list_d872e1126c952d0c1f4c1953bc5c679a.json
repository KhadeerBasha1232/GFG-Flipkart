{
  "code": "import java.util.*;\r\nimport java.io.*;\r\n\r\nclass Node{\r\n    int data;\r\n    Node next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = null;\r\n    }\r\n    \r\n}\r\nclass GFG{\r\n\tstatic void printList(Node node) \r\n\t{ \r\n\t\twhile (node != null) \r\n\t\t{ \r\n\t\t\tSystem.out.print(node.data + \" \"); \r\n\t\t\tnode = node.next; \r\n\t\t} \r\n\t\tSystem.out.println(); \r\n\t}\r\n    public static void main(String args[]) throws IOException { \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        while(t > 0){\r\n        \tint n = sc.nextInt();\r\n            Node head = new Node(sc.nextInt());\r\n            Node tail = head;\r\n            for(int i=0; i<n-1; i++)\r\n            {\r\n                tail.next = new Node(sc.nextInt());\r\n                tail = tail.next;\r\n            }\r\n            new Solution().rearrangeEvenOdd(head);\r\n            printList(head); \r\n            t--;\r\n        }\r\n    } \r\n} \r\n\r\n// } Driver Code Ends\r\n\r\n\r\n/*\r\n\r\nclass Node {\r\n\r\n    int data;\r\n    Node next;\r\n\r\n    Node(int d) {\r\n        data = d;\r\n        next = null;\r\n    }\r\n}\r\nThis is method only submission.\r\nYou only need to complete the below method.\r\n*/\r\nclass Solution\r\n{\r\n\r\n   // Should rearrange given linked list such that all even\r\n   // positioned Nodes are before odd positioned.\r\n   // Returns nothing\r\n    void rearrangeEvenOdd(Node head)\r\n    {\r\n          //  The task is to complete this method\r\n           if(head==null || head.next==null){\r\n              return;\r\n          }\r\n          Node o=head;\r\n          Node c=head.next.next;\r\n          Node e=head.next;\r\n          Node x=e;\r\n          int i=3;\r\n          while(c!=null){\r\n              if(i%2!=0){\r\n                  o.next=new Node(c.data);\r\n                  o=o.next;\r\n              }\r\n              else{\r\n                 x.next=new Node(c.data);\r\n                 x=x.next;\r\n              }\r\n              c=c.next;\r\n              i++;\r\n          }\r\n          x.next=null;\r\n          o.next=e;\r\n     }\r\n}\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*\r\n\r\nclass Node {\r\n\r\n    int data;\r\n    Node next;\r\n\r\n    Node(int d) {\r\n        data = d;\r\n        next = null;\r\n    }\r\n}\r\nThis is method only submission.\r\nYou only need to complete the below method.\r\n*/\r\nclass Solution\r\n{\r\n\r\n   // Should rearrange given linked list such that all even\r\n   // positioned Nodes are before odd positioned.\r\n   // Returns nothing\r\n    void rearrangeEvenOdd(Node head)\r\n    {\r\n          //  The task is to complete this method\r\n           if(head==null || head.next==null){\r\n              return;\r\n          }\r\n          Node o=head;\r\n          Node c=head.next.next;\r\n          Node e=head.next;\r\n          Node x=e;\r\n          int i=3;\r\n          while(c!=null){\r\n              if(i%2!=0){\r\n                  o.next=new Node(c.data);\r\n                  o=o.next;\r\n              }\r\n              else{\r\n                 x.next=new Node(c.data);\r\n                 x=x.next;\r\n              }\r\n              c=c.next;\r\n              i++;\r\n          }\r\n          x.next=null;\r\n          o.next=e;\r\n     }\r\n}\r\n"
}