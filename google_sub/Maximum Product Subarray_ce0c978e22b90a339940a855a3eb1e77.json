{
  "code": "import java.io.*;\r\nimport java.util.*;\r\n\r\n  public class Main {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        BufferedReader br =\r\n            new BufferedReader(new InputStreamReader(System.in));\r\n        int tc = Integer.parseInt(br.readLine());\r\n        while (tc-- > 0) {\r\n            int n = Integer.parseInt(br.readLine());\r\n            int[] arr = new int[n];\r\n            String[] inputLine = br.readLine().split(\" \");\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = Integer.parseInt(inputLine[i]);\r\n            }\r\n\r\n            System.out.println(new Solution().maxProduct(arr, n));\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n\r\nclass Solution {\r\n    // Function to find maximum product subarray\r\n    long maxProduct(int[] arr, int n) \r\n    {\r\n         long minVal = arr[0];\r\n        long maxVal = arr[0];\r\n\r\n        long maxProduct = arr[0];\r\n\r\n        for (int i = 1; i < n; i++) {\r\n\r\n            // When multiplied by -ve number,\r\n            // maxVal becomes minVal\r\n            // and minVal becomes maxVal.\r\n            if (arr[i] < 0) {\r\n                long temp = maxVal;\r\n                maxVal = minVal;\r\n                minVal = temp;\r\n            }\r\n\r\n            // maxVal and minVal stores the\r\n            // product of subarray ending at arr[i].\r\n            maxVal = Math.max(arr[i], maxVal * arr[i]);\r\n            minVal = Math.min(arr[i], minVal * arr[i]);\r\n\r\n            // Max Product of array.\r\n            maxProduct = Math.max(maxProduct, maxVal);\r\n        }\r\n\r\n        // Return maximum product found in array.\r\n        return maxProduct;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\nclass Solution {\r\n    // Function to find maximum product subarray\r\n    long maxProduct(int[] arr, int n) \r\n    {\r\n         long minVal = arr[0];\r\n        long maxVal = arr[0];\r\n\r\n        long maxProduct = arr[0];\r\n\r\n        for (int i = 1; i < n; i++) {\r\n\r\n            // When multiplied by -ve number,\r\n            // maxVal becomes minVal\r\n            // and minVal becomes maxVal.\r\n            if (arr[i] < 0) {\r\n                long temp = maxVal;\r\n                maxVal = minVal;\r\n                minVal = temp;\r\n            }\r\n\r\n            // maxVal and minVal stores the\r\n            // product of subarray ending at arr[i].\r\n            maxVal = Math.max(arr[i], maxVal * arr[i]);\r\n            minVal = Math.min(arr[i], minVal * arr[i]);\r\n\r\n            // Max Product of array.\r\n            maxProduct = Math.max(maxProduct, maxVal);\r\n        }\r\n\r\n        // Return maximum product found in array.\r\n        return maxProduct;\r\n    }\r\n}"
}