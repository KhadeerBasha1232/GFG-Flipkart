{
  "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//Back-end complete function template for C++\r\n\r\nclass Solution{\r\npublic:\r\n\tvector<int> lexicalOrder(int N)\r\n\t{\r\n\t    \r\n\t    vector<string> ans;\r\n\t    for(int i=1;i<=N;i++)\r\n\t    ans.push_back(to_string(i));\r\n\t    \r\n\t    sort(ans.begin(),ans.end());\r\n\t    \r\n\t    vector<int> v;\r\n\t    for(auto it:ans)\r\n\t    v.push_back(stoi(it));\r\n\t    \r\n\t    return v;\r\n\t}\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\n// Driver program\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int N;\r\n        cin>>N;\r\n        Solution ob;\r\n        vector<int>ans = ob.lexicalOrder(N);\r\n        for(auto it: ans){\r\n            cout << it <<\" \";\r\n        }\r\n        cout<<endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//Back-end complete function template for C++\r\n\r\nclass Solution{\r\npublic:\r\n\tvector<int> lexicalOrder(int N)\r\n\t{\r\n\t    \r\n\t    vector<string> ans;\r\n\t    for(int i=1;i<=N;i++)\r\n\t    ans.push_back(to_string(i));\r\n\t    \r\n\t    sort(ans.begin(),ans.end());\r\n\t    \r\n\t    vector<int> v;\r\n\t    for(auto it:ans)\r\n\t    v.push_back(stoi(it));\r\n\t    \r\n\t    return v;\r\n\t}\r\n};\r\n\r\n"
}