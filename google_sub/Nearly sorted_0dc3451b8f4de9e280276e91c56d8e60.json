{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to return the sorted array.\r\n    priority_queue<int,vector<int>,greater<int>>minh;\r\n    vector <int> nearlySorted(int arr[], int num, int K){\r\n        // Your code here\r\n        vector<int>result;\r\n            for(int i=0;i<num;i++)\r\n            {\r\n                minh.push(arr[i]);\r\n                if(minh.size()>K)\r\n                {\r\n                    int element=minh.top();\r\n                    minh.pop();\r\n                    result.push_back(element);\r\n                }\r\n            }\r\n            while(!minh.empty())\r\n            {\r\n                int element=minh.top();\r\n                minh.pop();\r\n                result.push_back(element);\r\n            }\r\n            return result;\r\n        }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n {\r\n\tint T;\r\n\tcin>> T;\r\n\t\r\n\twhile (T--)\r\n\t{\r\n\t    int num, K;\r\n\t    cin>>num>>K;\r\n\t    \r\n\t    int arr[num];\r\n\t    for(int i = 0; i<num; ++i){\r\n\t        cin>>arr[i];\r\n\t    }\r\n\t    Solution ob;\r\n\t    vector <int> res = ob.nearlySorted(arr, num, K);\r\n\t    for (int i = 0; i < res.size (); i++)\r\n\t        cout << res[i] << \" \";\r\n\t        \r\n\t    cout<<endl;\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    //Function to return the sorted array.\r\n    priority_queue<int,vector<int>,greater<int>>minh;\r\n    vector <int> nearlySorted(int arr[], int num, int K){\r\n        // Your code here\r\n        vector<int>result;\r\n            for(int i=0;i<num;i++)\r\n            {\r\n                minh.push(arr[i]);\r\n                if(minh.size()>K)\r\n                {\r\n                    int element=minh.top();\r\n                    minh.pop();\r\n                    result.push_back(element);\r\n                }\r\n            }\r\n            while(!minh.empty())\r\n            {\r\n                int element=minh.top();\r\n                minh.pop();\r\n                result.push_back(element);\r\n            }\r\n            return result;\r\n        }\r\n};\r\n"
}