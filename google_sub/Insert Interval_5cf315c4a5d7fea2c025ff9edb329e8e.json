{
  "code": "//Initial Template for Java\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> insertInterval(vector<vector<int>>& intervals, vector<int> nI) {\r\n        //Code Here\r\n        vector<vector<int>>res;\r\n        int i=0,n=intervals.size();\r\n        while(i<n && intervals[i][1]<nI[0]){\r\n            \r\n            res.push_back(intervals[i]);\r\n            i++;\r\n        }\r\n        while(i<n && intervals[i][0]<=nI[1]){\r\n            nI[0]=min(nI[0],intervals[i][0]);\r\n            nI[1]=max(nI[1],intervals[i][1]);\r\n            i++;\r\n        }\r\n        res.push_back(nI);\r\n        while(i<n){\r\n            res.push_back(intervals[i]);\r\n            i++;\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n        int N;\r\n        cin >> N;\r\n        vector<vector<int>>intervals(N, vector<int>(2, 0));\r\n        for (int i = 0; i < N; i++) {\r\n            for (int j = 0; j < 2; j++) {\r\n                cin >> intervals[i][j];\r\n            }\r\n        }\r\n        vector<int>newInterval(2);\r\n        for (int i = 0; i < 2; i++)cin >> newInterval[i];\r\n        Solution obj;\r\n        vector<vector<int>>ans = obj.insertInterval(intervals, newInterval);\r\n        for (int i = 0; i < ans.size(); i++) {\r\n            for (int j = 0; j < 2; j++) {\r\n                cout << ans[i][j] << \" \";\r\n            }\r\n            cout << endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> insertInterval(vector<vector<int>>& intervals, vector<int> nI) {\r\n        //Code Here\r\n        vector<vector<int>>res;\r\n        int i=0,n=intervals.size();\r\n        while(i<n && intervals[i][1]<nI[0]){\r\n            \r\n            res.push_back(intervals[i]);\r\n            i++;\r\n        }\r\n        while(i<n && intervals[i][0]<=nI[1]){\r\n            nI[0]=min(nI[0],intervals[i][0]);\r\n            nI[1]=max(nI[1],intervals[i][1]);\r\n            i++;\r\n        }\r\n        res.push_back(nI);\r\n        while(i<n){\r\n            res.push_back(intervals[i]);\r\n            i++;\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};\r\n"
}