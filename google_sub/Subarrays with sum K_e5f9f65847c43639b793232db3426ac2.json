{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        while(t-- > 0)\r\n        {\r\n            int N = Integer.parseInt(read.readLine());\r\n            String input_line[] = read.readLine().trim().split(\"\\\\s+\");\r\n            int Arr[]= new int[N];\r\n            for(int i = 0; i < N; i++)\r\n                Arr[i] = Integer.parseInt(input_line[i]);\r\n            int k = Integer.parseInt(read.readLine());\r\n            \r\n            Solution ob = new Solution();\r\n            System.out.println(ob.findSubArraySum(Arr, N, k));\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    static int findSubArraySum(int Arr[], int N, int k)\r\n    {\r\n        // map<sum, freq>\r\n        HashMap<Integer, Integer> map = new HashMap<>();\r\n        int count = 0;\r\n        int sum = 0;\r\n        map.put(0, 1);\r\n        for(int i=0; i<N; i++) {\r\n            sum = sum + Arr[i];\r\n            if(map.containsKey(sum - k)) {\r\n                count = count + map.get(sum - k);\r\n            }\r\n            map.put(sum, map.getOrDefault(sum, 0) + 1);\r\n        }\r\n        return count;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    static int findSubArraySum(int Arr[], int N, int k)\r\n    {\r\n        // map<sum, freq>\r\n        HashMap<Integer, Integer> map = new HashMap<>();\r\n        int count = 0;\r\n        int sum = 0;\r\n        map.put(0, 1);\r\n        for(int i=0; i<N; i++) {\r\n            sum = sum + Arr[i];\r\n            if(map.containsKey(sum - k)) {\r\n                count = count + map.get(sum - k);\r\n            }\r\n            map.put(sum, map.getOrDefault(sum, 0) + 1);\r\n        }\r\n        return count;\r\n    }\r\n}"
}