{
  "code": "//Initial Template for JAVA\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG {\r\n    static class FastReader{ \r\n\t\tBufferedReader br; \r\n\t\tStringTokenizer st; \r\n  \r\n\t\tpublic FastReader(){ \r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in)); \r\n\t\t} \r\n  \r\n\t\tString next(){ \r\n\t\t\twhile (st == null || !st.hasMoreElements()){ \r\n\t\t\t\ttry{ st = new StringTokenizer(br.readLine()); } catch (IOException  e){ e.printStackTrace(); } \r\n\t\t\t} \r\n\t\t\treturn st.nextToken(); \r\n\t\t} \r\n  \r\n\t\tString nextLine(){ \r\n\t\t\tString str = \"\"; \r\n\t\t\ttry{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } \r\n\t\t\treturn str; \r\n\t\t} \r\n\t}\r\n\t\r\n    public static void main(String args[]) throws IOException {\r\n        FastReader sc = new FastReader();\r\n        PrintWriter out = new PrintWriter(System.out);\r\n        int t = Integer.parseInt(sc.next());\r\n        while (t-- > 0) {\r\n            int n = Integer.parseInt(sc.next());\r\n            int m = Integer.parseInt(sc.next());\r\n            \r\n            ArrayList<ArrayList<Integer>> mat = new ArrayList<ArrayList<Integer>>();\r\n            \r\n            for(int i=0; i<n; i++)\r\n            {\r\n                ArrayList<Integer> row = new ArrayList<>();\r\n                for(int j=0; j<m; j++)\r\n                    row.add(Integer.parseInt(sc.next()));\r\n                mat.add(row);\r\n            }\r\n\r\n            Solution ob = new Solution();\r\n            out.println(ob.zeroSumSubMatrices(mat,n,m));\r\n        }\r\n        out.flush();\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\nclass Solution {\r\n    \r\n    public int numSubmatrixSumTarget(int[][] matrix, int target) {\r\n        int m = matrix.length,n=matrix[0].length;\r\n        \r\n        for(int row =0;row<m;row++){\r\n            for(int col=1;col<n;col++){\r\n                matrix[row][col]+=matrix[row][col-1];\r\n            }\r\n        }\r\n        int count=0;\r\n        \r\n        for(int i=0;i<n;i++){\r\n            for(int j=i;j<n;j++){\r\n                Map<Integer,Integer> map = new HashMap<>();\r\n                map.put(0,1);\r\n                int sum=0;\r\n                \r\n                for(int row=0;row<m;row++){\r\n                    sum += matrix[row][j] - (i>0 ? matrix[row][i-1] : 0);\r\n                    count += map.getOrDefault(sum-target,0);\r\n                    map.put(sum,map.getOrDefault(sum,0)+1);\r\n                }\r\n                \r\n            }\r\n        }\r\n        \r\n        return count;\r\n    }\r\n    int zeroSumSubMatrices(ArrayList<ArrayList<Integer>> mat, int n, int m) {\r\n        int[][] my=new int[mat.size()][mat.get(0).size()];\r\n        for(int i=0;i<my.length;i++){\r\n            for(int j=0;j<my[0].length;j++){\r\n                my[i][j]=mat.get(i).get(j);\r\n            }\r\n        }\r\n        \r\n        return numSubmatrixSumTarget(my,0);\r\n    }\r\n};\r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\nclass Solution {\r\n    \r\n    public int numSubmatrixSumTarget(int[][] matrix, int target) {\r\n        int m = matrix.length,n=matrix[0].length;\r\n        \r\n        for(int row =0;row<m;row++){\r\n            for(int col=1;col<n;col++){\r\n                matrix[row][col]+=matrix[row][col-1];\r\n            }\r\n        }\r\n        int count=0;\r\n        \r\n        for(int i=0;i<n;i++){\r\n            for(int j=i;j<n;j++){\r\n                Map<Integer,Integer> map = new HashMap<>();\r\n                map.put(0,1);\r\n                int sum=0;\r\n                \r\n                for(int row=0;row<m;row++){\r\n                    sum += matrix[row][j] - (i>0 ? matrix[row][i-1] : 0);\r\n                    count += map.getOrDefault(sum-target,0);\r\n                    map.put(sum,map.getOrDefault(sum,0)+1);\r\n                }\r\n                \r\n            }\r\n        }\r\n        \r\n        return count;\r\n    }\r\n    int zeroSumSubMatrices(ArrayList<ArrayList<Integer>> mat, int n, int m) {\r\n        int[][] my=new int[mat.size()][mat.get(0).size()];\r\n        for(int i=0;i<my.length;i++){\r\n            for(int j=0;j<my[0].length;j++){\r\n                my[i][j]=mat.get(i).get(j);\r\n            }\r\n        }\r\n        \r\n        return numSubmatrixSumTarget(my,0);\r\n    }\r\n};\r\n\r\n"
}