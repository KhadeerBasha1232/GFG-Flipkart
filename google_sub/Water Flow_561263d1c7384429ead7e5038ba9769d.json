{
  "code": "/* Driver program to test above function */\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//Back-end complete function Template for C++\r\n\r\nclass Solution\r\n{\r\n   private:\r\n   void bfs(int n,int m,queue<pair<int,int>> &q,vector<vector<int>> &vis,\r\n            vector<vector<int>> grid)\r\n   {\r\n       int delrow[] = {-1,0,+1,0};\r\n       int delcol[] = {0,+1,0,-1};\r\n       while(!q.empty())\r\n       {\r\n           int row = q.front().first;\r\n           int col = q.front().second;\r\n           q.pop();\r\n           \r\n           for(int i = 0; i<4; i++){\r\n               int nrow = row + delrow[i];\r\n               int ncol = col + delcol[i];\r\n               \r\n               if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m \r\n                 && !vis[nrow][ncol] && grid[row][col] <= grid[nrow][ncol])\r\n                 {\r\n                     vis[nrow][ncol] = 1;\r\n                     q.push({nrow,ncol});\r\n                 }\r\n           }\r\n           \r\n       }\r\n   }\r\n   public:\r\n    int countCells(vector<vector<int>>A, int n, int m) \r\n    {\r\n         queue<pair<int,int>> blue;\r\n         queue<pair<int,int>> red;\r\n         vector<vector<int>> visB(n,vector<int>(m,0));\r\n         vector<vector<int>> visR(n,vector<int>(m,0));\r\n         \r\n         for(int i = 0; i<m; i++){\r\n             visB[0][i] = 1;\r\n             blue.push({0,i});\r\n             visR[n-1][i] = 1;\r\n             red.push({n-1,i});\r\n         }\r\n         \r\n         for(int i = 0; i<n; i++){\r\n             visB[i][0] = 1;\r\n             blue.push({i,0});\r\n             visR[i][m-1] = 1;\r\n             red.push({i,m-1});\r\n         }\r\n         \r\n         bfs(n,m,blue,visB,A);\r\n         bfs(n,m,red,visR,A);\r\n         \r\n         int cnt = 0;\r\n         \r\n         for(int i = 0; i<n; i++){\r\n             for(int j = 0; j<m; j++){\r\n                 if(visR[i][j] && visB[i][j]){\r\n                     cnt++;\r\n                 }\r\n             }\r\n         }\r\n         \r\n         return cnt;\r\n         \r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t    int n,m;\r\n\t    cin>>n>>m;\r\n\t    vector<vector<int>>v(n,vector<int>(m,0));\r\n\t    for(int i=0;i<n;i++){\r\n\t        for(int j=0;j<m;j++){\r\n\t            cin>>v[i][j];\r\n\t        }\r\n\t    }\r\n\t    Solution ob;\r\n\t    int ans=ob.countCells(v, n, m);\r\n\t    cout<<ans;\r\n\t    cout<<\"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//Back-end complete function Template for C++\r\n\r\nclass Solution\r\n{\r\n   private:\r\n   void bfs(int n,int m,queue<pair<int,int>> &q,vector<vector<int>> &vis,\r\n            vector<vector<int>> grid)\r\n   {\r\n       int delrow[] = {-1,0,+1,0};\r\n       int delcol[] = {0,+1,0,-1};\r\n       while(!q.empty())\r\n       {\r\n           int row = q.front().first;\r\n           int col = q.front().second;\r\n           q.pop();\r\n           \r\n           for(int i = 0; i<4; i++){\r\n               int nrow = row + delrow[i];\r\n               int ncol = col + delcol[i];\r\n               \r\n               if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m \r\n                 && !vis[nrow][ncol] && grid[row][col] <= grid[nrow][ncol])\r\n                 {\r\n                     vis[nrow][ncol] = 1;\r\n                     q.push({nrow,ncol});\r\n                 }\r\n           }\r\n           \r\n       }\r\n   }\r\n   public:\r\n    int countCells(vector<vector<int>>A, int n, int m) \r\n    {\r\n         queue<pair<int,int>> blue;\r\n         queue<pair<int,int>> red;\r\n         vector<vector<int>> visB(n,vector<int>(m,0));\r\n         vector<vector<int>> visR(n,vector<int>(m,0));\r\n         \r\n         for(int i = 0; i<m; i++){\r\n             visB[0][i] = 1;\r\n             blue.push({0,i});\r\n             visR[n-1][i] = 1;\r\n             red.push({n-1,i});\r\n         }\r\n         \r\n         for(int i = 0; i<n; i++){\r\n             visB[i][0] = 1;\r\n             blue.push({i,0});\r\n             visR[i][m-1] = 1;\r\n             red.push({i,m-1});\r\n         }\r\n         \r\n         bfs(n,m,blue,visB,A);\r\n         bfs(n,m,red,visR,A);\r\n         \r\n         int cnt = 0;\r\n         \r\n         for(int i = 0; i<n; i++){\r\n             for(int j = 0; j<m; j++){\r\n                 if(visR[i][j] && visB[i][j]){\r\n                     cnt++;\r\n                 }\r\n             }\r\n         }\r\n         \r\n         return cnt;\r\n         \r\n    }\r\n};\r\n"
}