{
  "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\nclass Solution{\r\n    \r\n    \r\n    \r\n    void call( int a[],int n,std::vector<int>&ans,int i){\r\n        \r\n        if(i>=n){\r\n            return ;\r\n        }\r\n        int j=i;\r\n        int sum=0;\r\n        while( i<n && a[i]>=0){\r\n            sum =sum+a[i];\r\n            i++;\r\n        }\r\n        \r\n         \r\n         \r\n         if(ans[1]<sum || (ans[1]==sum && ((i-j) > (ans[2]-ans[0])))  ){\r\n             ans[0]=j;\r\n             ans[1]=sum;\r\n             ans[2]=i;\r\n         }\r\n         call(a,n,ans,i+1);\r\n         return  ;\r\n    }\r\npublic:\r\n\tvector<int> findSubarray(int a[], int n) {\r\n\t   \r\n\t   \r\n\t   std::vector<int>ans{-1,-1,-1};\r\n\t   \r\n\t   call(a,n,ans,0);\r\n\t   \r\n\t   if(ans[0]==-1){\r\n\t       return {-1}; \r\n\t   }\r\n\t   \r\n\t   std::vector<int>c;\r\n\t   for(int i = ans[0] ;i<ans[2];i++){\r\n\t       c.push_back(a[i]);\r\n\t   }\r\n\t   \r\n\t  return c;\r\n\t}\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nvoid printAns(vector<int> &ans) {\r\n    for (auto &x : ans) {\r\n        cout << x << \" \";\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n, i;\r\n        cin >> n;\r\n        int a[n];\r\n        for (i = 0; i < n; i++) {\r\n            cin >> a[i];\r\n        }\r\n        Solution ob;\r\n        auto ans = ob.findSubarray(a, n);\r\n        printAns(ans);\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\nclass Solution{\r\n    \r\n    \r\n    \r\n    void call( int a[],int n,std::vector<int>&ans,int i){\r\n        \r\n        if(i>=n){\r\n            return ;\r\n        }\r\n        int j=i;\r\n        int sum=0;\r\n        while( i<n && a[i]>=0){\r\n            sum =sum+a[i];\r\n            i++;\r\n        }\r\n        \r\n         \r\n         \r\n         if(ans[1]<sum || (ans[1]==sum && ((i-j) > (ans[2]-ans[0])))  ){\r\n             ans[0]=j;\r\n             ans[1]=sum;\r\n             ans[2]=i;\r\n         }\r\n         call(a,n,ans,i+1);\r\n         return  ;\r\n    }\r\npublic:\r\n\tvector<int> findSubarray(int a[], int n) {\r\n\t   \r\n\t   \r\n\t   std::vector<int>ans{-1,-1,-1};\r\n\t   \r\n\t   call(a,n,ans,0);\r\n\t   \r\n\t   if(ans[0]==-1){\r\n\t       return {-1}; \r\n\t   }\r\n\t   \r\n\t   std::vector<int>c;\r\n\t   for(int i = ans[0] ;i<ans[2];i++){\r\n\t       c.push_back(a[i]);\r\n\t   }\r\n\t   \r\n\t  return c;\r\n\t}\r\n};\r\n"
}