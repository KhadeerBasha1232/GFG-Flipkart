{
  "code": "// Initial template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template in C++\r\n\r\nclass Solution \r\n{\r\n    public:\r\n    //Function to find minimum number of pages.\r\n    bool check(int A[], int n, int m,int mid){\r\n        int sum=0;\r\n        int cnt=1;\r\n        for(int i=0;i<n;i++){\r\n            if(sum+A[i]<=mid){\r\n                sum+=A[i];\r\n            }\r\n            else{\r\n                cnt++;\r\n                sum=A[i];\r\n            }\r\n        }\r\n        return (cnt>m);\r\n    }\r\n    int findPages(int A[], int n, int m) \r\n    {\r\n        if(m>n){\r\n            return -1;\r\n        }\r\n        int low=0;\r\n        int high=0;\r\n        for(int i=0;i<n;i++){\r\n            low=max(low,A[i]);\r\n            high+=A[i];\r\n        }\r\n        int ans=low;\r\n        while(low<=high){\r\n            int mid=(low+high)/2;\r\n            if(check(A,n,m,mid)){\r\n                low=mid+1;\r\n                ans=low;\r\n            }\r\n            else{\r\n                high=mid-1;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int n;\r\n        cin>>n;\r\n        int A[n];\r\n        for(int i=0;i<n;i++){\r\n            cin>>A[i];\r\n        }\r\n        int m;\r\n        cin>>m;\r\n        Solution ob;\r\n        cout << ob.findPages(A, n, m) << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template in C++\r\n\r\nclass Solution \r\n{\r\n    public:\r\n    //Function to find minimum number of pages.\r\n    bool check(int A[], int n, int m,int mid){\r\n        int sum=0;\r\n        int cnt=1;\r\n        for(int i=0;i<n;i++){\r\n            if(sum+A[i]<=mid){\r\n                sum+=A[i];\r\n            }\r\n            else{\r\n                cnt++;\r\n                sum=A[i];\r\n            }\r\n        }\r\n        return (cnt>m);\r\n    }\r\n    int findPages(int A[], int n, int m) \r\n    {\r\n        if(m>n){\r\n            return -1;\r\n        }\r\n        int low=0;\r\n        int high=0;\r\n        for(int i=0;i<n;i++){\r\n            low=max(low,A[i]);\r\n            high+=A[i];\r\n        }\r\n        int ans=low;\r\n        while(low<=high){\r\n            int mid=(low+high)/2;\r\n            if(check(A,n,m,mid)){\r\n                low=mid+1;\r\n                ans=low;\r\n            }\r\n            else{\r\n                high=mid-1;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n"
}