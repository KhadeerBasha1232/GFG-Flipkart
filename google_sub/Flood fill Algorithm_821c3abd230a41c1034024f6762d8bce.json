{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\npublic:\r\n     vector<int>row{-1,0,1,0};\r\n     vector<int>col{0,1,0,-1};\r\n     \r\n    void dfs(vector<vector<int>>&image,int sr, int sc, int currColor,int newColor)\r\n    {\r\n      // first color your cell\r\n      image[sr][sc]=newColor;\r\n      for(int i=0;i<4;i++)\r\n      {\r\n          int nrow = sr + row[i];\r\n          int ncol = sc + col[i];\r\n          \r\n          if(nrow>=0 and nrow<image.size() and ncol>=0 and ncol<image[0].size() and image[nrow][ncol]==currColor\r\n          and image[nrow][ncol]!=newColor)\r\n          {\r\n              dfs(image,nrow,ncol,currColor,newColor);\r\n          }\r\n      }\r\n     \r\n        \r\n        \r\n    }\r\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\r\n        \r\n        vector<vector<int>>dupImage = image;\r\n        \r\n        int currColor = image[sr][sc];\r\n        \r\n        dfs(dupImage,sr,sc,currColor, newColor);\r\n        \r\n        return dupImage;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint n, m;\r\n\t\tcin >> n >> m;\r\n\t\tvector<vector<int>>image(n, vector<int>(m,0));\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tfor(int j = 0; j < m; j++)\r\n\t\t\t\tcin >> image[i][j];\r\n\t\t}\r\n\t\tint sr, sc, newColor;\r\n\t\tcin >> sr >> sc >> newColor;\r\n\t\tSolution obj;\r\n\t\tvector<vector<int>> ans = obj.floodFill(image, sr, sc, newColor);\r\n\t\tfor(auto i: ans){\r\n\t\t\tfor(auto j: i)\r\n\t\t\t\tcout << j << \" \";\r\n\t\t\tcout << \"\\n\";\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\npublic:\r\n     vector<int>row{-1,0,1,0};\r\n     vector<int>col{0,1,0,-1};\r\n     \r\n    void dfs(vector<vector<int>>&image,int sr, int sc, int currColor,int newColor)\r\n    {\r\n      // first color your cell\r\n      image[sr][sc]=newColor;\r\n      for(int i=0;i<4;i++)\r\n      {\r\n          int nrow = sr + row[i];\r\n          int ncol = sc + col[i];\r\n          \r\n          if(nrow>=0 and nrow<image.size() and ncol>=0 and ncol<image[0].size() and image[nrow][ncol]==currColor\r\n          and image[nrow][ncol]!=newColor)\r\n          {\r\n              dfs(image,nrow,ncol,currColor,newColor);\r\n          }\r\n      }\r\n     \r\n        \r\n        \r\n    }\r\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\r\n        \r\n        vector<vector<int>>dupImage = image;\r\n        \r\n        int currColor = image[sr][sc];\r\n        \r\n        dfs(dupImage,sr,sc,currColor, newColor);\r\n        \r\n        return dupImage;\r\n    }\r\n};\r\n"
}