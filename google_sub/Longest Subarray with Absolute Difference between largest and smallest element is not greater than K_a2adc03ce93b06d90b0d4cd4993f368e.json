{
  "code": "//Initial Template for Java\r\n\r\n\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int tc = Integer.parseInt(br.readLine().trim());\r\n        while (tc-- > 0) {\r\n            String[] inputLine;\r\n            inputLine = br.readLine().trim().split(\" \");\r\n            int n = Integer.parseInt(inputLine[0]);\r\n            int k = Integer.parseInt(inputLine[1]);\r\n            int[] arr = new int[n];\r\n            inputLine = br.readLine().trim().split(\" \");\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = Integer.parseInt(inputLine[i]);\r\n            }\r\n\r\n            int ans = new Solution().LongestSubarray(arr, n, k);\r\n            System.out.println(ans);\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\nclass Solution {\r\n   int LongestSubarray(int[] arr, int n, int k) {\r\n        // code here\r\n        Deque<Integer>max=new LinkedList<>();\r\n        Deque<Integer>min=new LinkedList<>();\r\n        int j=0;\r\n        int ans=0;\r\n        for(int i=0;i<n;i++){\r\n            while(!max.isEmpty() && arr[max.peekLast()] <= arr[i]){\r\n                max.pollLast();\r\n            }\r\n            while(!min.isEmpty() && arr[min.peekLast()] >= arr[i]){\r\n                min.pollLast();\r\n            }\r\n            boolean mx=false;\r\n            boolean mn=false;\r\n            if(max.size()==0){\r\n                mx=true;\r\n            }if(min.size()==0){\r\n                mn=true;\r\n            }\r\n            max.addLast(i);\r\n            min.addLast(i);\r\n            while(arr[max.peekFirst()] - arr[min.peekFirst()] >k){\r\n                if(mx){\r\n                    j=min.pollFirst()+1;\r\n                }else{\r\n                    j=max.pollFirst()+1;\r\n                }\r\n            }\r\n            // System.out.println(i+\" \"+j+\" prev \"+ans);\r\n            ans=Math.max(ans ,i-j+1);\r\n        }\r\n        return ans;\r\n   }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\nclass Solution {\r\n   int LongestSubarray(int[] arr, int n, int k) {\r\n        // code here\r\n        Deque<Integer>max=new LinkedList<>();\r\n        Deque<Integer>min=new LinkedList<>();\r\n        int j=0;\r\n        int ans=0;\r\n        for(int i=0;i<n;i++){\r\n            while(!max.isEmpty() && arr[max.peekLast()] <= arr[i]){\r\n                max.pollLast();\r\n            }\r\n            while(!min.isEmpty() && arr[min.peekLast()] >= arr[i]){\r\n                min.pollLast();\r\n            }\r\n            boolean mx=false;\r\n            boolean mn=false;\r\n            if(max.size()==0){\r\n                mx=true;\r\n            }if(min.size()==0){\r\n                mn=true;\r\n            }\r\n            max.addLast(i);\r\n            min.addLast(i);\r\n            while(arr[max.peekFirst()] - arr[min.peekFirst()] >k){\r\n                if(mx){\r\n                    j=min.pollFirst()+1;\r\n                }else{\r\n                    j=max.pollFirst()+1;\r\n                }\r\n            }\r\n            // System.out.println(i+\" \"+j+\" prev \"+ans);\r\n            ans=Math.max(ans ,i-j+1);\r\n        }\r\n        return ans;\r\n   }\r\n}"
}