{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n\tvoid solve (string s,vector<string>&ritesh,int index){\r\n        if(index>=s.size() ){\r\n            ritesh.push_back(s);\r\n            return;\r\n        }\r\n        for(int i=index;i<s.size();i++){\r\n            swap(s[index],s[i]);\r\n            solve(s,ritesh,index+1);\r\n            swap(s[index],s[i]);\r\n        }\r\n    }\r\npublic:\r\nvector<string>find_permutation(string s)\r\n{\r\n \r\n    vector<string>ritesh;\r\n    int index=0;\r\n    solve(s,ritesh,index);\r\n    sort(ritesh.begin(),ritesh.end());\r\n       ritesh.erase(unique(ritesh.begin(),ritesh.end()),ritesh.end());\r\n \r\n    \r\n    return ritesh;\r\n}\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n    int t;\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n\t    string S;\r\n\t    cin >> S;\r\n\t    Solution ob;\r\n\t    vector<string> ans = ob.find_permutation(S);\r\n\t    sort(ans.begin(),ans.end());\r\n\t    for(auto i: ans)\r\n\t    {\r\n\t    \tcout<<i<<\" \";\r\n\t    }\r\n\t    cout<<\"\\n\";\r\n    }\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n\tvoid solve (string s,vector<string>&ritesh,int index){\r\n        if(index>=s.size() ){\r\n            ritesh.push_back(s);\r\n            return;\r\n        }\r\n        for(int i=index;i<s.size();i++){\r\n            swap(s[index],s[i]);\r\n            solve(s,ritesh,index+1);\r\n            swap(s[index],s[i]);\r\n        }\r\n    }\r\npublic:\r\nvector<string>find_permutation(string s)\r\n{\r\n \r\n    vector<string>ritesh;\r\n    int index=0;\r\n    solve(s,ritesh,index);\r\n    sort(ritesh.begin(),ritesh.end());\r\n       ritesh.erase(unique(ritesh.begin(),ritesh.end()),ritesh.end());\r\n \r\n    \r\n    return ritesh;\r\n}\r\n};\r\n\r\n\r\n"
}