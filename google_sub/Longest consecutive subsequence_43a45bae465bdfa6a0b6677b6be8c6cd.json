{
  "code": "//Initial Template for Java\r\n\r\nimport java.math.*;\r\nimport java.util.*;\r\nimport java.io.*;\r\n\r\nclass Driverclass\r\n{\r\n    // Driver Code\r\n    static class FastReader{ \r\n        BufferedReader br; \r\n        StringTokenizer st; \r\n  \r\n        public FastReader(){ \r\n            br = new BufferedReader(new InputStreamReader(System.in)); \r\n        } \r\n  \r\n        String next(){ \r\n            while (st == null || !st.hasMoreElements()){ \r\n                try{ st = new StringTokenizer(br.readLine()); } catch (IOException  e){ e.printStackTrace(); } \r\n            } \r\n            return st.nextToken(); \r\n        } \r\n  \r\n        String nextLine(){ \r\n            String str = \"\"; \r\n            try{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } \r\n            return str; \r\n        } \r\n\r\n        Integer nextInt(){\r\n            return Integer.parseInt(next());\r\n        }\r\n    }\r\n    \r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tFastReader sc = new FastReader();\r\n\t\tPrintWriter out = new PrintWriter(System.out);\r\n\t\tint t = sc.nextInt();\r\n\t\t\r\n\t\twhile(t>0)\r\n\t\t{\r\n\t\t\tint n = sc.nextInt();\r\n\t\t\tint a[] = new int[n];\r\n\t\t\t\r\n\t\t\tfor(int i=0; i<n; i++)\r\n\t\t\t\ta[i] = sc.nextInt();\r\n\t\t    out.println(new Solution().findLongestConseqSubseq(a, n));\r\n\t\t    t--;\r\n\t\t}\r\n\t\tout.close();\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{   \r\n    // arr[] : the input array\r\n    // N : size of the array arr[]\r\n    \r\n    //Function to return length of longest subsequence of consecutive integers.\r\n\tstatic int findLongestConseqSubseq(int arr[], int n)\r\n\t{\r\n\t   // add your code here\r\n\t    // add your code here\r\n       int max=arr[0],min=arr[0];\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(arr[i]>max)\r\n            max=arr[i];\r\n           if(arr[i]<min)\r\n            min=arr[i];\r\n       }\r\n       HashSet<Integer>hs=new HashSet<>();\r\n       for(int x:arr)\r\n       {\r\n           hs.add(x);\r\n       }\r\n       int cnt=0,msf=0;\r\n       for(int i=min;i<=max;i++)\r\n       {\r\n           if(hs.contains(i))\r\n                cnt++;\r\n                else\r\n                    cnt=0;\r\n           msf=Math.max(msf,cnt);         \r\n       }\r\n       return msf;\r\n\t}\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{   \r\n    // arr[] : the input array\r\n    // N : size of the array arr[]\r\n    \r\n    //Function to return length of longest subsequence of consecutive integers.\r\n\tstatic int findLongestConseqSubseq(int arr[], int n)\r\n\t{\r\n\t   // add your code here\r\n\t    // add your code here\r\n       int max=arr[0],min=arr[0];\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(arr[i]>max)\r\n            max=arr[i];\r\n           if(arr[i]<min)\r\n            min=arr[i];\r\n       }\r\n       HashSet<Integer>hs=new HashSet<>();\r\n       for(int x:arr)\r\n       {\r\n           hs.add(x);\r\n       }\r\n       int cnt=0,msf=0;\r\n       for(int i=min;i<=max;i++)\r\n       {\r\n           if(hs.contains(i))\r\n                cnt++;\r\n                else\r\n                    cnt=0;\r\n           msf=Math.max(msf,cnt);         \r\n       }\r\n       return msf;\r\n\t}\r\n}"
}