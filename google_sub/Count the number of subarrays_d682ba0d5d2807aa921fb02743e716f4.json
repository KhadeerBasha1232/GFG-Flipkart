{
  "code": "//Initial Template for Java\r\nimport java.io.*;\r\nimport java.util.*; \r\nclass GFG{\r\n    public static void main(String args[]) throws IOException { \r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        \r\n        while(t-- > 0){\r\n            String input_line[] = read.readLine().trim().split(\"\\\\s+\");\r\n            int N = Integer.parseInt(input_line[0]);\r\n            long L = Long.parseLong(input_line[1]); \r\n            long R = Long.parseLong(input_line[2]); \r\n            input_line = read.readLine().trim().split(\"\\\\s+\");\r\n            int A[]= new int[N];\r\n            for(int i = 0; i < N; i++)\r\n                A[i] = Integer.parseInt(input_line[i]);\r\n            Solution ob = new Solution();\r\n            long ans = ob.countSubarray(N, A, L, R); \r\n            System.out.println(ans);\r\n        }\r\n    } \r\n} \r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    long count(int n, int arr[], long k) {\r\n        long ans = 0;\r\n        long sum = 0;\r\n        int start = 0, end = 0;\r\n        while (end < n) {\r\n            sum += arr[end];\r\n            while (sum > k) {\r\n                sum -= arr[start];\r\n                start++;\r\n            }\r\n            ans += end - start + 1;\r\n            end++;\r\n        }\r\n        return ans;\r\n    }\r\n    long countSubarray(int N,int A[],long L,long R) {\r\n        // code here\r\n        long ans1 = count(N, A, L-1);\r\n        long ans2 = count(N, A, R);\r\n        \r\n        return ans2 - ans1;\r\n    }\r\n} ",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    long count(int n, int arr[], long k) {\r\n        long ans = 0;\r\n        long sum = 0;\r\n        int start = 0, end = 0;\r\n        while (end < n) {\r\n            sum += arr[end];\r\n            while (sum > k) {\r\n                sum -= arr[start];\r\n                start++;\r\n            }\r\n            ans += end - start + 1;\r\n            end++;\r\n        }\r\n        return ans;\r\n    }\r\n    long countSubarray(int N,int A[],long L,long R) {\r\n        // code here\r\n        long ans1 = count(N, A, L-1);\r\n        long ans2 = count(N, A, R);\r\n        \r\n        return ans2 - ans1;\r\n    }\r\n} "
}