{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t    \r\n\t    //Taking input using class Scanner\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\t\r\n\t\t//Taking total count of testcases\r\n\t\tint t=sc.nextInt();\r\n\t\tsc.nextLine();\r\n\t\twhile(t-->0)\r\n\t\t{\r\n\t\t    \r\n\t\t    int N,M,X;\r\n\t\t    \r\n\t\t    //taking size of array a\r\n\t\t    N=sc.nextInt();\r\n\t\t    \r\n\t\t    //taking size of array b\r\n\t\t    M=sc.nextInt();\r\n\t\t    \r\n\t\t    //Creating 2 array of size n and m\r\n\t\t    int pizzas[]=new int[N];\r\n\t\t    int toppings[]=new int[M];\r\n\t\t    \r\n\t\t    //inserting elements to array a\r\n\t\t    for(int i=0;i<N;i++)\r\n\t\t    {\r\n\t\t        pizzas[i]=sc.nextInt();\r\n\t\t    }\r\n\t\t    \r\n\t\t    //inserting elements to array b\r\n\t\t    for(int i=0;i<M;i++)\r\n\t\t    {\r\n\t\t        toppings[i]=sc.nextInt();\r\n\t\t    }\r\n\t\t    X=sc.nextInt();\r\n\t\t    Solution ob=new Solution();\r\n\t\t    //calling doUnion method and printing the results\r\n\t\t    System.out.println(ob.findMinCost(pizzas,N,toppings,M, X));\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\nclass Solution{\r\n    public static int findMinCost(int pizzas[], int n, int t[],\r\n    int m, int x) \r\n    {\r\n        //Your code here\r\n        int ans=0;\r\n        Arrays.sort(t);\r\n        for(int i=0; i<n; i++){\r\n            int y=x-pizzas[i];\r\n            if(y<=0){\r\n                if(Math.abs(ans-x)>Math.abs(y))ans=pizzas[i];\r\n                else if(Math.abs(ans-x)==Math.abs(y))ans=(pizzas[i]<ans)\r\n                ?pizzas[i]:ans;\r\n            }\r\n            else{\r\n                if(Math.abs(ans-x)>y)ans=pizzas[i];\r\n                else if(Math.abs(ans-x)==y)ans=(pizzas[i]<ans)\r\n                ?pizzas[i]:ans;\r\n                for(int j=0; j<m; j++){\r\n                    if(Math.abs(ans-x)>Math.abs(y-t[j])){\r\n                        ans=pizzas[i]+t[j];\r\n                    }\r\n                    else if(Math.abs(ans-x)==Math.abs(y-t[j])){\r\n                        ans=(pizzas[i]+t[j]<ans)\r\n                        ?pizzas[i]+t[j]:ans;\r\n                    }\r\n                }\r\n                int result=Integer.MAX_VALUE;\r\n                int a=0;\r\n                int b=m-1;\r\n                while(a<b){\r\n                    if(Math.abs(y-t[a]-t[b])<Math.abs(y-result)){\r\n                        result=t[a]+t[b];\r\n                    }\r\n                    else if(Math.abs(y-t[a]-t[b])==Math.abs(y-result)){\r\n                        result=(result<t[a]+t[b])?result:t[a]+t[b];\r\n                    }\r\n                    if(t[a]+t[b]>y)b--;\r\n                    else if(t[a]+t[b]==y){\r\n                        result=t[a]+t[b];\r\n                        break;\r\n                    }\r\n                    else a++;\r\n                }\r\n                if(Math.abs(ans-x)>Math.abs(result+pizzas[i]-x)){\r\n                    ans=pizzas[i]+result;\r\n                }\r\n                else if(Math.abs(ans-x)==Math.abs(result+pizzas[i]-x)){\r\n                    ans=(pizzas[i]+result<ans)\r\n                    ?pizzas[i]+result:ans;\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n    \r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\nclass Solution{\r\n    public static int findMinCost(int pizzas[], int n, int t[],\r\n    int m, int x) \r\n    {\r\n        //Your code here\r\n        int ans=0;\r\n        Arrays.sort(t);\r\n        for(int i=0; i<n; i++){\r\n            int y=x-pizzas[i];\r\n            if(y<=0){\r\n                if(Math.abs(ans-x)>Math.abs(y))ans=pizzas[i];\r\n                else if(Math.abs(ans-x)==Math.abs(y))ans=(pizzas[i]<ans)\r\n                ?pizzas[i]:ans;\r\n            }\r\n            else{\r\n                if(Math.abs(ans-x)>y)ans=pizzas[i];\r\n                else if(Math.abs(ans-x)==y)ans=(pizzas[i]<ans)\r\n                ?pizzas[i]:ans;\r\n                for(int j=0; j<m; j++){\r\n                    if(Math.abs(ans-x)>Math.abs(y-t[j])){\r\n                        ans=pizzas[i]+t[j];\r\n                    }\r\n                    else if(Math.abs(ans-x)==Math.abs(y-t[j])){\r\n                        ans=(pizzas[i]+t[j]<ans)\r\n                        ?pizzas[i]+t[j]:ans;\r\n                    }\r\n                }\r\n                int result=Integer.MAX_VALUE;\r\n                int a=0;\r\n                int b=m-1;\r\n                while(a<b){\r\n                    if(Math.abs(y-t[a]-t[b])<Math.abs(y-result)){\r\n                        result=t[a]+t[b];\r\n                    }\r\n                    else if(Math.abs(y-t[a]-t[b])==Math.abs(y-result)){\r\n                        result=(result<t[a]+t[b])?result:t[a]+t[b];\r\n                    }\r\n                    if(t[a]+t[b]>y)b--;\r\n                    else if(t[a]+t[b]==y){\r\n                        result=t[a]+t[b];\r\n                        break;\r\n                    }\r\n                    else a++;\r\n                }\r\n                if(Math.abs(ans-x)>Math.abs(result+pizzas[i]-x)){\r\n                    ans=pizzas[i]+result;\r\n                }\r\n                else if(Math.abs(ans-x)==Math.abs(result+pizzas[i]-x)){\r\n                    ans=(pizzas[i]+result<ans)\r\n                    ?pizzas[i]+result:ans;\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n    \r\n}"
}