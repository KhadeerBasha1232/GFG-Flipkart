{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n\r\n// } Driver Code Ends\r\n/*You are required to complete this method*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    const long long mod = 1e9+7;\r\n    int subsequenceCount(string s, string t)\r\n    {\r\n        int n = s.size();\r\n        int m = t.size();\r\n\r\n        vector<vector<double> > dp(n+1, vector<double>(m+1, 0));\r\n\r\n        for(int i=0; i<=n; i++) dp[i][0] = 1;\r\n\r\n        for(int i=1; i<=n; i++){\r\n            for(int j=1; j<=m; j++){\r\n                if(s[i-1] == t[j-1]){\r\n                    dp[i][j] = (int)(dp[i-1][j-1] + dp[i-1][j]) % mod;\r\n                }\r\n                else{\r\n                    dp[i][j] = (int)(dp[i-1][j]) % mod;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (int)dp[n][m];\r\n      \r\n    }\r\n};\r\n \r\n\r\n\r\n//{ Driver Code Starts. \r\n\r\n//  Driver code to check above method\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tstring s;\r\n\t\tstring tt;\r\n\t\tcin>>s;\r\n\t\tcin>>tt;\r\n\t\t\r\n\t\tSolution ob;\r\n\t\tcout<<ob.subsequenceCount(s,tt)<<endl;\r\n\t\t\r\n\t\t\r\n\t}\r\n  \r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*You are required to complete this method*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    const long long mod = 1e9+7;\r\n    int subsequenceCount(string s, string t)\r\n    {\r\n        int n = s.size();\r\n        int m = t.size();\r\n\r\n        vector<vector<double> > dp(n+1, vector<double>(m+1, 0));\r\n\r\n        for(int i=0; i<=n; i++) dp[i][0] = 1;\r\n\r\n        for(int i=1; i<=n; i++){\r\n            for(int j=1; j<=m; j++){\r\n                if(s[i-1] == t[j-1]){\r\n                    dp[i][j] = (int)(dp[i-1][j-1] + dp[i-1][j]) % mod;\r\n                }\r\n                else{\r\n                    dp[i][j] = (int)(dp[i-1][j]) % mod;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (int)dp[n][m];\r\n      \r\n    }\r\n};\r\n \r\n\r\n"
}