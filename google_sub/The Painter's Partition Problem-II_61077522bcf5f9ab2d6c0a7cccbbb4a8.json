{
  "code": "// driver code\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n\r\nclass Solution\r\n{\r\n    int getCount(int arr[], int n, long long maxBoards) {\r\n        int painters = 1;\r\n        long long board = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            if (board+arr[i] > maxBoards) {\r\n                painters++;\r\n                board = arr[i];\r\n            } else {\r\n                board += arr[i];\r\n            }\r\n        }\r\n        return painters;\r\n    }\r\n  public:\r\n    long long minTime(int arr[], int n, int k)\r\n    {\r\n        long long low = INT_MIN;\r\n        long long high = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            high += arr[i];\r\n            low = max(low, (long long)arr[i]);\r\n        }\r\n        while (low <= high) {\r\n            long long mid = low + (high - low)/2;\r\n            int count = getCount(arr, n, mid);\r\n            if (count > k) low = mid+1;\r\n            else high = mid-1;\r\n        }\r\n        return low;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tint k,n;\r\n\t\tcin>>k>>n;\r\n\t\t\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t    cin>>arr[i];\r\n\t\tSolution obj;\r\n\t\tcout << obj.minTime(arr, n, k) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n\r\nclass Solution\r\n{\r\n    int getCount(int arr[], int n, long long maxBoards) {\r\n        int painters = 1;\r\n        long long board = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            if (board+arr[i] > maxBoards) {\r\n                painters++;\r\n                board = arr[i];\r\n            } else {\r\n                board += arr[i];\r\n            }\r\n        }\r\n        return painters;\r\n    }\r\n  public:\r\n    long long minTime(int arr[], int n, int k)\r\n    {\r\n        long long low = INT_MIN;\r\n        long long high = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            high += arr[i];\r\n            low = max(low, (long long)arr[i]);\r\n        }\r\n        while (low <= high) {\r\n            long long mid = low + (high - low)/2;\r\n            int count = getCount(arr, n, mid);\r\n            if (count > k) low = mid+1;\r\n            else high = mid-1;\r\n        }\r\n        return low;\r\n    }\r\n};\r\n"
}