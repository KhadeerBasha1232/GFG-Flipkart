{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nclass pair{\r\n    int first;\r\n    int second;\r\n    pair(int first,int second)\r\n        {\r\n            this.first = first;\r\n            this.second = second;\r\n        }\r\n}\r\nclass GfG\r\n{\r\n    public static void main(String args[])throws IOException\r\n        {\r\n            \r\n            Scanner sc = new Scanner(System.in);\r\n            int t = sc.nextInt();\r\n            while(t-->0)\r\n                {\r\n                    int n , k;\r\n                    n=sc.nextInt();\r\n                    k=sc.nextInt();\r\n                    ArrayList<ArrayList<Integer>> p = new ArrayList<ArrayList<Integer>>();\r\n                    ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();\r\n                    for(int i = 0 ; i < n ; ++ i )\r\n                    {\r\n                        ArrayList<Integer> vec = new ArrayList<Integer>(2);\r\n                        int x  = sc.nextInt();\r\n                        int y = sc.nextInt();\r\n                        vec.add(0,x);\r\n                        vec.add(1,y);\r\n                        p.add(vec);\r\n\r\n                    }\r\n                    Solution obj = new Solution();\r\n                    res = obj.kClosest(p, k);\r\n                \r\n                    for(int i = 0 ; i < k ; ++ i )\r\n                        System.out.print(res.get(i).get(0) + \" \" + res.get(i).get(1) + \" \" );\r\n                    System.out.println();\r\n    \r\n                }\r\n        }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n\r\n{\r\n\r\n    public static ArrayList<ArrayList<Integer>> kClosest(ArrayList<ArrayList<Integer>> points, int K)\r\n\r\n    {\r\n\r\n        //code here.\r\n\r\n        \r\n\r\n        ArrayList<ArrayList<Integer>> list = new ArrayList<>();\r\n\r\n        \r\n\r\n        PriorityQueue<ArrayList<Integer>> q = new PriorityQueue<>(new Comparator<ArrayList<Integer>>()\r\n\r\n        {\r\n\r\n            public int compare(ArrayList<Integer> a, ArrayList<Integer> b)\r\n\r\n            {\r\n\r\n                int s1 = a.get(1)*a.get(1) + a.get(0)*a.get(0);\r\n\r\n                int s2 = b.get(1)*b.get(1) + b.get(0)*b.get(0);\r\n\r\n                \r\n\r\n                if(s1 == s2)\r\n\r\n                {\r\n\r\n                    return a.get(0).equals(b.get(0)) ? a.get(1) - b.get(1):a.get(0) - b.get(0);\r\n\r\n                }\r\n\r\n                else\r\n\r\n                {\r\n\r\n                    return s1 - s2;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        \r\n\r\n        for(ArrayList<Integer> point : points)\r\n\r\n        {\r\n\r\n            q.add(point);\r\n\r\n        }\r\n\r\n        int size =0;\r\n\r\n        while( size <K &&  !q.isEmpty())\r\n\r\n        {\r\n\r\n            list.add(q.remove());\r\n\r\n            size++;\r\n\r\n        }\r\n\r\n        \r\n\r\n        return list;\r\n\r\n    }\r\n\r\n \r\n\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n\r\n{\r\n\r\n    public static ArrayList<ArrayList<Integer>> kClosest(ArrayList<ArrayList<Integer>> points, int K)\r\n\r\n    {\r\n\r\n        //code here.\r\n\r\n        \r\n\r\n        ArrayList<ArrayList<Integer>> list = new ArrayList<>();\r\n\r\n        \r\n\r\n        PriorityQueue<ArrayList<Integer>> q = new PriorityQueue<>(new Comparator<ArrayList<Integer>>()\r\n\r\n        {\r\n\r\n            public int compare(ArrayList<Integer> a, ArrayList<Integer> b)\r\n\r\n            {\r\n\r\n                int s1 = a.get(1)*a.get(1) + a.get(0)*a.get(0);\r\n\r\n                int s2 = b.get(1)*b.get(1) + b.get(0)*b.get(0);\r\n\r\n                \r\n\r\n                if(s1 == s2)\r\n\r\n                {\r\n\r\n                    return a.get(0).equals(b.get(0)) ? a.get(1) - b.get(1):a.get(0) - b.get(0);\r\n\r\n                }\r\n\r\n                else\r\n\r\n                {\r\n\r\n                    return s1 - s2;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        \r\n\r\n        for(ArrayList<Integer> point : points)\r\n\r\n        {\r\n\r\n            q.add(point);\r\n\r\n        }\r\n\r\n        int size =0;\r\n\r\n        while( size <K &&  !q.isEmpty())\r\n\r\n        {\r\n\r\n            list.add(q.remove());\r\n\r\n            size++;\r\n\r\n        }\r\n\r\n        \r\n\r\n        return list;\r\n\r\n    }\r\n\r\n \r\n\r\n}"
}