{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\n  public:\r\n\r\n    void dfs(pair<int,int>s,vector<vector<char>>&grid ,vector<vector<int>>&visited,int &n,int &m){\r\n        int i =s.first;\r\n        int j = s.second;\r\n        for(int x=-1;x<=1;x++){\r\n            for(int y =-1;y<=1;y++){\r\n                int ni = i+x;\r\n                int nj = j+y;\r\n                if(ni>=0 && nj>=0 && ni<n && nj<m && grid[ni][nj]=='1' && visited[ni][nj]==0 )\r\n                { \r\n                    visited[ni][nj]=1;\r\n                    dfs({ni,nj},grid,visited,n,m);\r\n                   \r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    int numIslands(vector<vector<char>>& grid) {\r\n        int n =grid.size();\r\n        int m =grid[0].size();\r\n        vector<vector<int>>visited(n,vector<int>(m,0));\r\n        int c=0;\r\n        for(int i=0;i<n;i++){\r\n            for(int j =0;j<m;j++){\r\n                if(visited[i][j]==0 && grid[i][j]=='1'){\r\n                    dfs({i,j},grid,visited,n,m);\r\n                    c++;\r\n                }\r\n            }\r\n        }        \r\n        return c;\r\n    }\r\n\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int tc;\r\n    cin >> tc;\r\n    while (tc--) {\r\n        int n, m;\r\n        cin >> n >> m;\r\n        vector<vector<char>> grid(n, vector<char>(m, '#'));\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = 0; j < m; j++) {\r\n                cin >> grid[i][j];\r\n            }\r\n        }\r\n        Solution obj;\r\n        int ans = obj.numIslands(grid);\r\n        cout << ans << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\n  public:\r\n\r\n    void dfs(pair<int,int>s,vector<vector<char>>&grid ,vector<vector<int>>&visited,int &n,int &m){\r\n        int i =s.first;\r\n        int j = s.second;\r\n        for(int x=-1;x<=1;x++){\r\n            for(int y =-1;y<=1;y++){\r\n                int ni = i+x;\r\n                int nj = j+y;\r\n                if(ni>=0 && nj>=0 && ni<n && nj<m && grid[ni][nj]=='1' && visited[ni][nj]==0 )\r\n                { \r\n                    visited[ni][nj]=1;\r\n                    dfs({ni,nj},grid,visited,n,m);\r\n                   \r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    int numIslands(vector<vector<char>>& grid) {\r\n        int n =grid.size();\r\n        int m =grid[0].size();\r\n        vector<vector<int>>visited(n,vector<int>(m,0));\r\n        int c=0;\r\n        for(int i=0;i<n;i++){\r\n            for(int j =0;j<m;j++){\r\n                if(visited[i][j]==0 && grid[i][j]=='1'){\r\n                    dfs({i,j},grid,visited,n,m);\r\n                    c++;\r\n                }\r\n            }\r\n        }        \r\n        return c;\r\n    }\r\n\r\n};\r\n"
}