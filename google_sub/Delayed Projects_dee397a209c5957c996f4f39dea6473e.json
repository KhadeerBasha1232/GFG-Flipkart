{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    vector<int> find_delayed_projects(int N, int numDependencies, \r\n    vector<vector<int>> & depend, int numDelayed, vector<int> &delayed)\r\n    {\r\n        vector<int> adj[N+1];\r\n        set<int> delayedSet(delayed.begin(), delayed.end());\r\n        \r\n        // create adj list\r\n        for(auto it : depend)\r\n        {\r\n            adj[it[1]].push_back(it[0]);\r\n        }\r\n        \r\n        for(int node : delayed)\r\n            dfs(node, adj, delayedSet);\r\n            \r\n        vector<int> res(delayedSet.begin(), delayedSet.end());\r\n        return res;\r\n    }\r\nprivate:\r\n\r\n    void dfs(int node, vector<int> adj[], set<int>& delayedSet)\r\n    {\r\n        delayedSet.insert(node);\r\n        for(int child : adj[node])\r\n        {\r\n            if(delayedSet.count(child) == 0)\r\n                dfs(child, adj, delayedSet);\r\n        }\r\n    }\r\n   \r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int N, M, K;\r\n        vector<vector<int>>L;\r\n        vector<int>D;\r\n        cin >> N >> M;\r\n        for (int i = 0; i < M; ++i)\r\n        {\r\n            vector<int>g;\r\n            int u, v;\r\n            cin >> u >> v;\r\n            g.push_back(u);\r\n            g.push_back(v);\r\n            L.push_back(g);\r\n        }\r\n        cin >> K;\r\n        for (int i = 0; i < K; ++i)\r\n        {\r\n            int x;\r\n            cin >> x;\r\n            D.push_back(x);\r\n        }\r\n        Solution ob;\r\n        vector<int>ans = ob.find_delayed_projects(N, M, L, K, D);\r\n        int ln = ans.size();\r\n        sort(ans.begin(), ans.end());\r\n        for (int i = 0; i < ln; ++i)\r\n        {\r\n            cout << ans[i] << \" \";\r\n        }\r\n        cout<<\"\\n\";\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    vector<int> find_delayed_projects(int N, int numDependencies, \r\n    vector<vector<int>> & depend, int numDelayed, vector<int> &delayed)\r\n    {\r\n        vector<int> adj[N+1];\r\n        set<int> delayedSet(delayed.begin(), delayed.end());\r\n        \r\n        // create adj list\r\n        for(auto it : depend)\r\n        {\r\n            adj[it[1]].push_back(it[0]);\r\n        }\r\n        \r\n        for(int node : delayed)\r\n            dfs(node, adj, delayedSet);\r\n            \r\n        vector<int> res(delayedSet.begin(), delayedSet.end());\r\n        return res;\r\n    }\r\nprivate:\r\n\r\n    void dfs(int node, vector<int> adj[], set<int>& delayedSet)\r\n    {\r\n        delayedSet.insert(node);\r\n        for(int child : adj[node])\r\n        {\r\n            if(delayedSet.count(child) == 0)\r\n                dfs(child, adj, delayedSet);\r\n        }\r\n    }\r\n   \r\n};\r\n"
}