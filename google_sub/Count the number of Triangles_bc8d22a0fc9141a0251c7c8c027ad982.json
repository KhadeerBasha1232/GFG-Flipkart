{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{\r\n  public:\r\n    int countTriangles(int n,int m,vector<vector<int>> edges)\r\n    {\r\n        //adjacency matrix\r\n        int mat[n+1][n+1] = {0};\r\n        for(int i = 0 ; i < m ; i++){\r\n            int u = edges[i][0];\r\n            int v = edges[i][1];\r\n            mat[u][v] = 1;\r\n            mat[v][u] = 1;\r\n        }\r\n        \r\n        //computing A^3  for finding path of length-3\r\n        int res[n+1][n+1] = {0};\r\n        for(int i = 1; i <= n; ++i)\r\n        for(int j = 1; j <= n; ++j)\r\n            for(int k = 1; k <= n; ++k)\r\n            {\r\n                res[i][j] += mat[i][k] * mat[k][j];\r\n            }\r\n        \r\n        int res1[n+1][n+1] = {0};\r\n        for(int i = 1; i <= n; ++i)\r\n        for(int j = 1; j <= n; ++j)\r\n            for(int k = 1; k <= n; ++k)\r\n            {\r\n                res1[i][j] += mat[i][k] * res[k][j];\r\n            }\r\n        \r\n        int ans = 0;\r\n        for(int i = 1 ; i <= n ; i++){\r\n            for(int j = 1 ; j <= n ; j++){\r\n                // cout << res1[i][j] << \" \";\r\n                if(i==j){\r\n                    ans += (res1[i][j]);\r\n                }\r\n            }\r\n            // cout << endl;\r\n        }\r\n        return ans/6;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N,M,x,y;\r\n        cin>>N>>M;\r\n        vector<vector<int>> Edges;\r\n        for(int i=0;i<M;i++){\r\n            cin>>x>>y;\r\n            Edges.push_back({x,y});\r\n        }\r\n        Solution obj;\r\n        cout<<obj.countTriangles(N,M,Edges)<<endl;;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{\r\n  public:\r\n    int countTriangles(int n,int m,vector<vector<int>> edges)\r\n    {\r\n        //adjacency matrix\r\n        int mat[n+1][n+1] = {0};\r\n        for(int i = 0 ; i < m ; i++){\r\n            int u = edges[i][0];\r\n            int v = edges[i][1];\r\n            mat[u][v] = 1;\r\n            mat[v][u] = 1;\r\n        }\r\n        \r\n        //computing A^3  for finding path of length-3\r\n        int res[n+1][n+1] = {0};\r\n        for(int i = 1; i <= n; ++i)\r\n        for(int j = 1; j <= n; ++j)\r\n            for(int k = 1; k <= n; ++k)\r\n            {\r\n                res[i][j] += mat[i][k] * mat[k][j];\r\n            }\r\n        \r\n        int res1[n+1][n+1] = {0};\r\n        for(int i = 1; i <= n; ++i)\r\n        for(int j = 1; j <= n; ++j)\r\n            for(int k = 1; k <= n; ++k)\r\n            {\r\n                res1[i][j] += mat[i][k] * res[k][j];\r\n            }\r\n        \r\n        int ans = 0;\r\n        for(int i = 1 ; i <= n ; i++){\r\n            for(int j = 1 ; j <= n ; j++){\r\n                // cout << res1[i][j] << \" \";\r\n                if(i==j){\r\n                    ans += (res1[i][j]);\r\n                }\r\n            }\r\n            // cout << endl;\r\n        }\r\n        return ans/6;\r\n    }\r\n};\r\n"
}