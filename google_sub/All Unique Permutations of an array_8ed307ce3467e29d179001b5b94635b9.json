{
  "code": "//Initial Template for JAVA\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG {\r\n    public static void main(String args[]) throws IOException {\r\n        BufferedReader read =\r\n            new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        while (t-- > 0) {\r\n            int n = Integer.parseInt(read.readLine());\r\n            \r\n            String S[] = read.readLine().split(\" \");\r\n            \r\n            ArrayList<Integer> arr = new ArrayList<>();\r\n            \r\n            for(int i=0; i<n; i++)\r\n                arr.add(Integer.parseInt(S[i]));\r\n\r\n            Solution ob = new Solution();\r\n            ArrayList<ArrayList<Integer>> res = ob.uniquePerms(arr,n);\r\n            for(int i=0; i<res.size(); i++)\r\n            {\r\n                for(int j=0; j<n; j++)\r\n                {\r\n                    System.out.print(res.get(i).get(j) + \" \");\r\n                }\r\n                System.out.println();\r\n            }\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    static ArrayList<ArrayList<Integer>> uniquePerms(ArrayList<Integer> arr , int n) {\r\n      Collections.sort(arr);\r\n        return findPerms(arr, n);\r\n    }\r\n        static ArrayList<ArrayList<Integer>> findPerms(ArrayList<Integer> arr, int n) {\r\n        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();\r\n        if (n == 1) {\r\n            ArrayList<Integer> temp = new ArrayList<>();\r\n            temp.add(arr.get(0));\r\n            ans.add(temp);\r\n            return ans;\r\n        }\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            if (i > 0 && arr.get(i - 1) == arr.get(i))\r\n                continue;\r\n\r\n            int removedElement = arr.remove(i);\r\n            ArrayList<ArrayList<Integer>> permsNext = findPerms(arr, n - 1);\r\n            for (int j = 0; j < permsNext.size(); j++) {\r\n                permsNext.get(j).add(0, removedElement);\r\n                ans.add(permsNext.get(j));\r\n            }\r\n            arr.add(i, removedElement);\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    static ArrayList<ArrayList<Integer>> uniquePerms(ArrayList<Integer> arr , int n) {\r\n      Collections.sort(arr);\r\n        return findPerms(arr, n);\r\n    }\r\n        static ArrayList<ArrayList<Integer>> findPerms(ArrayList<Integer> arr, int n) {\r\n        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();\r\n        if (n == 1) {\r\n            ArrayList<Integer> temp = new ArrayList<>();\r\n            temp.add(arr.get(0));\r\n            ans.add(temp);\r\n            return ans;\r\n        }\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            if (i > 0 && arr.get(i - 1) == arr.get(i))\r\n                continue;\r\n\r\n            int removedElement = arr.remove(i);\r\n            ArrayList<ArrayList<Integer>> permsNext = findPerms(arr, n - 1);\r\n            for (int j = 0; j < permsNext.size(); j++) {\r\n                permsNext.get(j).add(0, removedElement);\r\n                ans.add(permsNext.get(j));\r\n            }\r\n            arr.add(i, removedElement);\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};"
}