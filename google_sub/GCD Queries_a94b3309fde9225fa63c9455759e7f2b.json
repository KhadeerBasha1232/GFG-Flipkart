{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nimport java.math.*;\r\n\r\n\r\nclass GFG{\r\n    static class FastReader{ \r\n        BufferedReader br; \r\n        StringTokenizer st; \r\n  \r\n        public FastReader(){ \r\n            br = new BufferedReader(new InputStreamReader(System.in)); \r\n        } \r\n  \r\n        String next(){ \r\n            while (st == null || !st.hasMoreElements()){ \r\n                try{ st = new StringTokenizer(br.readLine()); } catch (IOException  e){ e.printStackTrace(); } \r\n            } \r\n            return st.nextToken(); \r\n        } \r\n  \r\n        String nextLine(){ \r\n            String str = \"\"; \r\n            try{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } \r\n            return str; \r\n        } \r\n\r\n        Integer nextInt(){\r\n            return Integer.parseInt(next());\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException{\r\n        FastReader sc = new FastReader();\r\n        PrintWriter out = new PrintWriter(System.out);\r\n        int t = 1;\r\n        while(t-- > 0){\r\n            int n = sc.nextInt();\r\n            int a[][] = new int[n][n];\r\n            for(int i = 0; i < n; i++){\r\n                for(int j = 0; j < n; j++)\r\n                    a[i][j] = sc.nextInt();\r\n            }\r\n\r\n            Solution ob = new Solution(a);\r\n            int q = sc.nextInt();\r\n            while(q-- > 0){\r\n                int r1 = sc.nextInt(), c1 = sc.nextInt(), r2 = sc.nextInt(), c2 = sc.nextInt();\r\n                int ans = ob.query(r1, c1, r2, c2);\r\n                out.println(ans);\r\n            }\r\n        }\r\n        out.flush();\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    private long lcm;\r\n    private int n,m;\r\n    private int[][] arr;\r\n    private long[][] seg;\r\n    \r\n    private long gcd(long a,long b){\r\n        if(b==0) return a;\r\n        return gcd(b,a%b);\r\n    }\r\n    \r\n    private void buildy(int nodex,int startx,int endx,int nodey,int starty,int endy){\r\n        if(starty==endy){\r\n            if(startx==endx){\r\n                seg[nodex][nodey] = arr[startx][starty];\r\n            }else{\r\n                seg[nodex][nodey] = gcd(seg[nodex*2][nodey],seg[nodex*2+1][nodey]);\r\n            }\r\n        }else{\r\n            int mid = starty+((endy-starty)>>1);\r\n            buildy(nodex,startx,endx,2*nodey,starty,mid);\r\n            buildy(nodex,startx,endx,2*nodey+1,mid+1,endy);\r\n            seg[nodex][nodey] = gcd(seg[nodex][nodey*2],seg[nodex][nodey*2+1]);\r\n        }\r\n    }\r\n    \r\n    private void buildx(int nodex,int startx,int endx){\r\n        if(startx==endx){\r\n            buildy(nodex,startx,endx,1,1,arr[0].length-1);\r\n        }else{\r\n            int mid = startx+((endx-startx)>>1);\r\n            buildx(2*nodex,startx,mid);\r\n            buildx(2*nodex+1,mid+1,endx);\r\n            \r\n            buildy(nodex,startx,endx,1,1,arr[0].length-1);\r\n        }\r\n    }\r\n\r\n    private long queryy(int nodex,int nodey,int starty,int endy,int y1,int y2){\r\n        //out of range\r\n        if(endy<y1 || y2<starty) return lcm;\r\n        \r\n        if(starty==endy){\r\n            return seg[nodex][nodey];\r\n        }else if(y1<=starty && endy<=y2){\r\n            return seg[nodex][nodey];\r\n        }else{\r\n            int mid = starty +((endy-starty)>>1);\r\n            long la = queryy(nodex,2*nodey,starty,mid,y1,y2); \r\n            long ra = queryy(nodex,2*nodey+1,mid+1,endy,y1,y2);\r\n            \r\n            return gcd(la,ra);\r\n        }\r\n    }\r\n    \r\n    private long queryx(int nodex,int startx,int endx,int x1,int x2,int y1,int y2){\r\n        //out of range\r\n        if(endx<x1 || x2<startx) return lcm;\r\n        \r\n        if(startx==endx){\r\n            return queryy(nodex,1,1,arr[0].length-1,y1,y2);\r\n        }else if(x1<=startx && endx<=x2){\r\n            return queryy(nodex,1,1,arr[0].length-1,y1,y2);\r\n        }else{\r\n            int mid = startx+((endx-startx)>>1);\r\n            long la = queryx(2*nodex,startx,mid,x1,x2,y1,y2);\r\n            long ra = queryx(2*nodex+1,mid+1,endx,x1,x2,y1,y2);\r\n            return gcd(la,ra);\r\n        }\r\n    }\r\n\r\n    \r\n    public Solution(int a[][]){\r\n        lcm=1;\r\n        n = a.length;\r\n        m = a[0].length;\r\n        \r\n        this.arr = new int[n+1][m+1];\r\n        this.seg = new long[4*n+1][4*m+1];\r\n        \r\n        for(int i=0;i<n;i++){\r\n            for(int j=0;j<m;j++){\r\n                arr[i+1][j+1] = a[i][j];\r\n                lcm*=a[i][j];\r\n            }\r\n        }\r\n        buildx(1,1,n);\r\n    }\r\n\r\n    int query(int r1, int c1, int r2, int c2){\r\n        long res = queryx(1,1,n,r1+1,r2+1,c1+1,c2+1);\r\n        return (int)res;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    private long lcm;\r\n    private int n,m;\r\n    private int[][] arr;\r\n    private long[][] seg;\r\n    \r\n    private long gcd(long a,long b){\r\n        if(b==0) return a;\r\n        return gcd(b,a%b);\r\n    }\r\n    \r\n    private void buildy(int nodex,int startx,int endx,int nodey,int starty,int endy){\r\n        if(starty==endy){\r\n            if(startx==endx){\r\n                seg[nodex][nodey] = arr[startx][starty];\r\n            }else{\r\n                seg[nodex][nodey] = gcd(seg[nodex*2][nodey],seg[nodex*2+1][nodey]);\r\n            }\r\n        }else{\r\n            int mid = starty+((endy-starty)>>1);\r\n            buildy(nodex,startx,endx,2*nodey,starty,mid);\r\n            buildy(nodex,startx,endx,2*nodey+1,mid+1,endy);\r\n            seg[nodex][nodey] = gcd(seg[nodex][nodey*2],seg[nodex][nodey*2+1]);\r\n        }\r\n    }\r\n    \r\n    private void buildx(int nodex,int startx,int endx){\r\n        if(startx==endx){\r\n            buildy(nodex,startx,endx,1,1,arr[0].length-1);\r\n        }else{\r\n            int mid = startx+((endx-startx)>>1);\r\n            buildx(2*nodex,startx,mid);\r\n            buildx(2*nodex+1,mid+1,endx);\r\n            \r\n            buildy(nodex,startx,endx,1,1,arr[0].length-1);\r\n        }\r\n    }\r\n\r\n    private long queryy(int nodex,int nodey,int starty,int endy,int y1,int y2){\r\n        //out of range\r\n        if(endy<y1 || y2<starty) return lcm;\r\n        \r\n        if(starty==endy){\r\n            return seg[nodex][nodey];\r\n        }else if(y1<=starty && endy<=y2){\r\n            return seg[nodex][nodey];\r\n        }else{\r\n            int mid = starty +((endy-starty)>>1);\r\n            long la = queryy(nodex,2*nodey,starty,mid,y1,y2); \r\n            long ra = queryy(nodex,2*nodey+1,mid+1,endy,y1,y2);\r\n            \r\n            return gcd(la,ra);\r\n        }\r\n    }\r\n    \r\n    private long queryx(int nodex,int startx,int endx,int x1,int x2,int y1,int y2){\r\n        //out of range\r\n        if(endx<x1 || x2<startx) return lcm;\r\n        \r\n        if(startx==endx){\r\n            return queryy(nodex,1,1,arr[0].length-1,y1,y2);\r\n        }else if(x1<=startx && endx<=x2){\r\n            return queryy(nodex,1,1,arr[0].length-1,y1,y2);\r\n        }else{\r\n            int mid = startx+((endx-startx)>>1);\r\n            long la = queryx(2*nodex,startx,mid,x1,x2,y1,y2);\r\n            long ra = queryx(2*nodex+1,mid+1,endx,x1,x2,y1,y2);\r\n            return gcd(la,ra);\r\n        }\r\n    }\r\n\r\n    \r\n    public Solution(int a[][]){\r\n        lcm=1;\r\n        n = a.length;\r\n        m = a[0].length;\r\n        \r\n        this.arr = new int[n+1][m+1];\r\n        this.seg = new long[4*n+1][4*m+1];\r\n        \r\n        for(int i=0;i<n;i++){\r\n            for(int j=0;j<m;j++){\r\n                arr[i+1][j+1] = a[i][j];\r\n                lcm*=a[i][j];\r\n            }\r\n        }\r\n        buildx(1,1,n);\r\n    }\r\n\r\n    int query(int r1, int c1, int r2, int c2){\r\n        long res = queryx(1,1,n,r1+1,r2+1,c1+1,c2+1);\r\n        return (int)res;\r\n    }\r\n}"
}