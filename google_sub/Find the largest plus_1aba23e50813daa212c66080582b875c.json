{
  "code": "//Initial Template for Java\r\nimport java.io.*;\r\nimport java.util.*; \r\nclass GFG{\r\n    public static void main(String args[]) throws IOException { \r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(read.readLine());\r\n            int mat[][] = new int[N][N];\r\n            for(int i = 0; i < N; i++){\r\n                String input_line[] = read.readLine().trim().split(\"\\\\s+\");\r\n                for(int j = 0; j < N; j++){\r\n                    mat[i][j] = Integer.parseInt(input_line[j]);\r\n                }\r\n            }\r\n            Solution ob = new Solution();\r\n            int ans = ob.findLargestPlus(mat, N); \r\n            System.out.println(ans);\r\n        }\r\n    } \r\n} \r\n\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    int n;\r\n    void buildLeft(int mat[][], int right[][])\r\n    {\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            right[i][n-1] = mat[i][n-1];\r\n        }\r\n        \r\n        for(int j = n-2; j>=0; j--)\r\n        {\r\n            for(int i = 0; i<n; i++)\r\n            {\r\n                right[i][j] = mat[i][j] == 0 ? 0 : mat[i][j] + right[i][j+1];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void buildRight(int mat[][], int right[][])\r\n    {\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            right[i][0] = mat[i][0];\r\n        }\r\n        for(int j = 1; j<n; j++)\r\n        {\r\n            for(int i = 0; i<n; i++)\r\n            {\r\n                right[i][j] = mat[i][j] == 0 ? 0 : mat[i][j] + right[i][j-1];\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    void buildBottom(int mat[][], int bottom[][])\r\n    {\r\n        bottom[n-1] = mat[n-1].clone();\r\n        for(int i = n-2;i>=0; i--)\r\n        {\r\n            bottom[i] = mat[i].clone();\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 0)\r\n                    bottom[i][j] = 0;\r\n                else\r\n                    bottom[i][j] += bottom[i+1][j];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void buildTop(int mat[][], int bottom[][])\r\n    {\r\n        bottom[0] = mat[0].clone();\r\n        for(int i = 1;i<n; i++)\r\n        {\r\n            bottom[i] = mat[i].clone();\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 0)\r\n                    bottom[i][j] = 0;\r\n                else\r\n                    bottom[i][j] += bottom[i-1][j];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void print(int mat[][])\r\n    {\r\n        for(int i =0; i<n; i++)\r\n        {\r\n            for(int j = 0; j<n; j++)\r\n                System.out.print(mat[i][j]+\" \");\r\n            System.out.println();    \r\n        }\r\n    }\r\n    \r\n    int findLargestPlus(int mat[][], int N)\r\n    {\r\n        n = N;\r\n        int left[][] = new int[n][n];\r\n        int right[][] = new int[n][n];\r\n        int top[][] = new int[n][n];\r\n        int bottom[][] = new int[n][n];\r\n        \r\n        buildLeft(mat,left);\r\n        buildRight(mat,right);\r\n        buildTop(mat,top);\r\n        buildBottom(mat,bottom);\r\n        \r\n        //print(right);\r\n        \r\n        int cnt = 0, maxi = 0;\r\n        \r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 1)\r\n                {\r\n                    int min = Math.min(left[i][j], right[i][j]);\r\n                    min = Math.min(min, Math.min(top[i][j], bottom[i][j]));\r\n                    cnt = 4*min - 3;\r\n                    maxi = Math.max(maxi, cnt);\r\n                    if(maxi == 0)\r\n                        maxi = 1;\r\n                }\r\n            }\r\n        }\r\n        return maxi;\r\n    }\r\n}  ",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    int n;\r\n    void buildLeft(int mat[][], int right[][])\r\n    {\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            right[i][n-1] = mat[i][n-1];\r\n        }\r\n        \r\n        for(int j = n-2; j>=0; j--)\r\n        {\r\n            for(int i = 0; i<n; i++)\r\n            {\r\n                right[i][j] = mat[i][j] == 0 ? 0 : mat[i][j] + right[i][j+1];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void buildRight(int mat[][], int right[][])\r\n    {\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            right[i][0] = mat[i][0];\r\n        }\r\n        for(int j = 1; j<n; j++)\r\n        {\r\n            for(int i = 0; i<n; i++)\r\n            {\r\n                right[i][j] = mat[i][j] == 0 ? 0 : mat[i][j] + right[i][j-1];\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    void buildBottom(int mat[][], int bottom[][])\r\n    {\r\n        bottom[n-1] = mat[n-1].clone();\r\n        for(int i = n-2;i>=0; i--)\r\n        {\r\n            bottom[i] = mat[i].clone();\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 0)\r\n                    bottom[i][j] = 0;\r\n                else\r\n                    bottom[i][j] += bottom[i+1][j];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void buildTop(int mat[][], int bottom[][])\r\n    {\r\n        bottom[0] = mat[0].clone();\r\n        for(int i = 1;i<n; i++)\r\n        {\r\n            bottom[i] = mat[i].clone();\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 0)\r\n                    bottom[i][j] = 0;\r\n                else\r\n                    bottom[i][j] += bottom[i-1][j];\r\n            }\r\n        }\r\n    }\r\n    \r\n    void print(int mat[][])\r\n    {\r\n        for(int i =0; i<n; i++)\r\n        {\r\n            for(int j = 0; j<n; j++)\r\n                System.out.print(mat[i][j]+\" \");\r\n            System.out.println();    \r\n        }\r\n    }\r\n    \r\n    int findLargestPlus(int mat[][], int N)\r\n    {\r\n        n = N;\r\n        int left[][] = new int[n][n];\r\n        int right[][] = new int[n][n];\r\n        int top[][] = new int[n][n];\r\n        int bottom[][] = new int[n][n];\r\n        \r\n        buildLeft(mat,left);\r\n        buildRight(mat,right);\r\n        buildTop(mat,top);\r\n        buildBottom(mat,bottom);\r\n        \r\n        //print(right);\r\n        \r\n        int cnt = 0, maxi = 0;\r\n        \r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(mat[i][j] == 1)\r\n                {\r\n                    int min = Math.min(left[i][j], right[i][j]);\r\n                    min = Math.min(min, Math.min(top[i][j], bottom[i][j]));\r\n                    cnt = 4*min - 3;\r\n                    maxi = Math.max(maxi, cnt);\r\n                    if(maxi == 0)\r\n                        maxi = 1;\r\n                }\r\n            }\r\n        }\r\n        return maxi;\r\n    }\r\n}  "
}