{
  "code": "#include<iostream>\r\nusing namespace std;\r\n\r\n/* Link list Node */\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node *next;\r\n    \r\n    Node(int x)\r\n    {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\nNode* sortedMerge(struct Node* a, struct Node* b);\r\n\r\n/* Function to print Nodes in a given linked list */\r\nvoid printList(struct Node *n)\r\n{\r\n    while (n!=NULL)\r\n    {\r\n        cout << n->data << \" \";\r\n        n = n->next;\r\n    }\r\n    cout << endl;\r\n}\r\n\r\n/* Driver program to test above function*/\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n,m;\r\n        cin>>n>>m;\r\n\r\n        int data;\r\n        cin>>data;\r\n        struct Node *head1 = new Node(data);\r\n        struct Node *tail1 = head1;\r\n        for (int i = 1; i < n; ++i)\r\n        {\r\n            cin>>data;\r\n            tail1->next = new Node(data);\r\n            tail1 = tail1->next;\r\n        }\r\n\r\n        cin>>data;\r\n        struct Node *head2 = new Node(data);\r\n        struct Node *tail2 = head2;\r\n        for(int i=1; i<m; i++)\r\n        {\r\n            cin>>data;\r\n            tail2->next = new Node(data);\r\n            tail2 = tail2->next;\r\n        }\r\n\r\n        Node *head = sortedMerge(head1, head2);\r\n        printList(head);\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n \r\n\r\n/* Link list Node\r\nstruct Node {\r\n  int data;\r\n  struct Node *next;\r\n  \r\n  Node(int x) {\r\n    data = x;\r\n    next = NULL;\r\n  }\r\n};\r\n*/\r\n//Function to merge two sorted linked list.\r\nNode* sortedMerge(Node* head1, Node* head2)  \r\n{  \r\n    // code here\r\n    Node *result=NULL;\r\n    if(head1==NULL)\r\n    {\r\n        return head2;\r\n    }\r\n    else if(head2==NULL)\r\n    {\r\n        return head1;\r\n    }\r\n    if(head1->data<head2->data)\r\n    {\r\n        result=head1;\r\n        result->next=sortedMerge(head1->next,head2);\r\n    }\r\n    else\r\n    {\r\n        result=head2;\r\n        result->next=sortedMerge(head1,head2->next);\r\n    }\r\n    \r\n    return result;\r\n    \r\n}  ",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n\r\n \r\n\r\n/* Link list Node\r\nstruct Node {\r\n  int data;\r\n  struct Node *next;\r\n  \r\n  Node(int x) {\r\n    data = x;\r\n    next = NULL;\r\n  }\r\n};\r\n*/\r\n//Function to merge two sorted linked list.\r\nNode* sortedMerge(Node* head1, Node* head2)  \r\n{  \r\n    // code here\r\n    Node *result=NULL;\r\n    if(head1==NULL)\r\n    {\r\n        return head2;\r\n    }\r\n    else if(head2==NULL)\r\n    {\r\n        return head1;\r\n    }\r\n    if(head1->data<head2->data)\r\n    {\r\n        result=head1;\r\n        result->next=sortedMerge(head1->next,head2);\r\n    }\r\n    else\r\n    {\r\n        result=head2;\r\n        result->next=sortedMerge(head1,head2->next);\r\n    }\r\n    \r\n    return result;\r\n    \r\n}  "
}