{
  "code": "//Initial Template for Java\r\n\r\nimport java.math.BigInteger;\r\nimport java.util.*;\r\nimport java.io.*;\r\n\r\nclass GfG\r\n{\r\n    public static void main(String[] args) throws Exception\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n        int T = sc.nextInt();\r\n        while(T>0)\r\n        {\r\n            long n = sc.nextLong();\r\n            long k = sc.nextLong();\r\n            long x = sc.nextLong();\r\n            long arr[] = new long[(int)(n + 1)];\r\n            for(int i = 1;i <= n;i++){\r\n                arr[i] = sc.nextLong();\r\n            }\r\n            \r\n            Compute obj =  new Compute();\r\n            System.out.println( obj.getAnswer( arr, n, k, x) );\r\n            T--;\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Compute\r\n{\r\n   static long mod = (long)1E9 + 7;\r\n   static long fac[];\r\n   static long invfac[];\r\n   static long modpow(long n,long k)\r\n   {\r\n       long den = invfac[(int)(k)]*invfac[(int)(n - k)] % mod;\r\n       return den * fac[(int)(n)] % mod;\r\n   }\r\n       \r\n   public static long getAnswer(long arr[], long n, long k, long x){\r\n       \r\n       Arrays.sort(arr);  \r\n       int left = 1;\r\n       long ans = 0;\r\n       fac = new long[1000000 + 5];\r\n       fac[1] = fac[0] = 1;\r\n       \r\n       for (int i = 2; i < fac.length; i++){\r\n           fac[i] = i*fac[i - 1];\r\n           fac[i] %= mod;\r\n       }\r\n       invfac = new long[1000000 + 5];\r\n       invfac[fac.length - 1] = BigInteger.valueOf(fac[fac.length - 1]).modInverse(BigInteger.valueOf(mod)).longValue();\r\n       \r\n       for(int i = fac.length - 2;i >= 0;i--){\r\n           invfac[i] = invfac[i + 1]*(i + 1) % mod;\r\n       }\r\n       \r\n       for(int i = 1;i <= n;i++)\r\n       {\r\n           while(arr[i] - arr[left] > x) ++left;\r\n           if(i - left < k - 1) continue;\r\n           ans += modpow(i - left, k - 1);\r\n       }\r\n       \r\n       return (ans%mod);\r\n   }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Compute\r\n{\r\n   static long mod = (long)1E9 + 7;\r\n   static long fac[];\r\n   static long invfac[];\r\n   static long modpow(long n,long k)\r\n   {\r\n       long den = invfac[(int)(k)]*invfac[(int)(n - k)] % mod;\r\n       return den * fac[(int)(n)] % mod;\r\n   }\r\n       \r\n   public static long getAnswer(long arr[], long n, long k, long x){\r\n       \r\n       Arrays.sort(arr);  \r\n       int left = 1;\r\n       long ans = 0;\r\n       fac = new long[1000000 + 5];\r\n       fac[1] = fac[0] = 1;\r\n       \r\n       for (int i = 2; i < fac.length; i++){\r\n           fac[i] = i*fac[i - 1];\r\n           fac[i] %= mod;\r\n       }\r\n       invfac = new long[1000000 + 5];\r\n       invfac[fac.length - 1] = BigInteger.valueOf(fac[fac.length - 1]).modInverse(BigInteger.valueOf(mod)).longValue();\r\n       \r\n       for(int i = fac.length - 2;i >= 0;i--){\r\n           invfac[i] = invfac[i + 1]*(i + 1) % mod;\r\n       }\r\n       \r\n       for(int i = 1;i <= n;i++)\r\n       {\r\n           while(arr[i] - arr[left] > x) ++left;\r\n           if(i - left < k - 1) continue;\r\n           ans += modpow(i - left, k - 1);\r\n       }\r\n       \r\n       return (ans%mod);\r\n   }\r\n}"
}