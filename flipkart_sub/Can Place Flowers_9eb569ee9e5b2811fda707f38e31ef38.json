{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nimport java.lang.*;\r\n\r\nclass GFG{\r\n\tpublic static void main(String [] args) throws IOException {\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(br.readLine());\r\n\t\twhile(test-- > 0) {\r\n\t\t\tint N = Integer.parseInt(br.readLine());\r\n\t\t\tint [] flowerbed = new int[N];\r\n\t\t\tString [] str = br.readLine().trim().split(\" \");\r\n\t\t\tfor(int i = 0; i < N; i++)\r\n\t\t\t\tflowerbed[i] = Integer.parseInt(str[i]);\r\n\t\t\tint n = Integer.parseInt(br.readLine());\r\n\t\t\tSolution obj = new Solution();\r\n\t\t\tint ans = obj.canPlaceFlowers(flowerbed, n);\r\n\t\t\tSystem.out.println(ans);\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\nclass Solution{\r\n    public int canPlaceFlowers(int [] flowerbed, int n) {\r\n        int p=0;\r\n        int k=0;\r\n    for (int i = 0; i < flowerbed.length; i++) {\r\n            if ((i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.length - 1 || flowerbed[i + 1] == 0) && flowerbed[i] == 0) {\r\n                \r\n                p++;\r\n                i++;  \r\n            }\r\n        }\r\n        if(p>=n)\r\n        return 1;\r\n        else\r\n        return 0;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\nclass Solution{\r\n    public int canPlaceFlowers(int [] flowerbed, int n) {\r\n        int p=0;\r\n        int k=0;\r\n    for (int i = 0; i < flowerbed.length; i++) {\r\n            if ((i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.length - 1 || flowerbed[i + 1] == 0) && flowerbed[i] == 0) {\r\n                \r\n                p++;\r\n                i++;  \r\n            }\r\n        }\r\n        if(p>=n)\r\n        return 1;\r\n        else\r\n        return 0;\r\n    }\r\n}"
}