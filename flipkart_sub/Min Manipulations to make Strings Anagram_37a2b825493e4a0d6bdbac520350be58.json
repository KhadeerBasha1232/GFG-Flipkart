{
  "code": "//Initial Template for Java\r\nimport java.io.*;\r\nimport java.util.*; \r\nclass GFG{\r\n    public static void main(String args[]) throws IOException { \r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        \r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(read.readLine().trim());\r\n            String []input_line = read.readLine().trim().split(\"\\\\s+\");\r\n            String S1 = input_line[0];\r\n            String S2 = input_line[1];\r\n            Solution obj = new Solution();\r\n            int ans = obj.minManipulation(N, S1, S2); \r\n            System.out.println(ans);\r\n        }\r\n    } \r\n} \r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    int minManipulation(int N, String S1, String S2) \r\n    {\r\n        // code here\r\n        int r[] = new int[26];\r\n        int s[] = new int[26];\r\n        for(char c : S1.toCharArray())\r\n        {\r\n            r[c - 'a']++;\r\n        }\r\n         for(char c : S2.toCharArray())\r\n        {\r\n            s[c - 'a']++;\r\n        }\r\n        int rahee = 0;\r\n        for(int i = 0; i < s.length; i++)\r\n        {\r\n            rahee += Math.abs(r[i] - s[i]);\r\n        }\r\n        return rahee/2;\r\n    }\r\n} \r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\nclass Solution \r\n{ \r\n    int minManipulation(int N, String S1, String S2) \r\n    {\r\n        // code here\r\n        int r[] = new int[26];\r\n        int s[] = new int[26];\r\n        for(char c : S1.toCharArray())\r\n        {\r\n            r[c - 'a']++;\r\n        }\r\n         for(char c : S2.toCharArray())\r\n        {\r\n            s[c - 'a']++;\r\n        }\r\n        int rahee = 0;\r\n        for(int i = 0; i < s.length; i++)\r\n        {\r\n            rahee += Math.abs(r[i] - s[i]);\r\n        }\r\n        return rahee/2;\r\n    }\r\n} \r\n\r\n"
}