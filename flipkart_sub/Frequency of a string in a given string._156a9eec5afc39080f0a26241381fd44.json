{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    \r\n    public static void genlps(int []lps,int m,String s){\r\n        int i=1,len=0;\r\n        lps[0]=0;\r\n        while(i<m){\r\n            if(s.charAt(len)==s.charAt(i)){\r\n                len++;\r\n                lps[i++]=len;\r\n            }\r\n            else{\r\n                if(len!=0){\r\n                    len=lps[len-1];\r\n                }\r\n                else{\r\n                    lps[i]=0;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public static int frequencyOfSubstring(String s, String t)\r\n    {\r\n        int cnt=0;\r\n        int n=s.length();\r\n        int m=t.length();\r\n        \r\n        int i=0,j=0;\r\n        \r\n        int lps[]=new int[m];\r\n        genlps(lps,m,t);\r\n        \r\n        while((n-i)>=(m-j)){\r\n            if(s.charAt(i)==t.charAt(j)){\r\n                i++;j++;\r\n            }\r\n            \r\n            if(j==m){\r\n                cnt++;\r\n                j=lps[j-1];\r\n            }\r\n            else if(n>i && s.charAt(i)!=t.charAt(j)){\r\n                if(j!=0){\r\n                    j=lps[j-1];\r\n                }\r\n                else{\r\n                    i++;\r\n                }\r\n            }\r\n          \r\n        }\r\n          return cnt;\r\n    }\r\n}\r\n\r\n//{ Driver Code Starts.\r\n\r\nclass GFG {\r\n\tpublic static void main(String[] args) throws IOException\r\n\t{\r\n\t    var sc = new FastReader();\r\n\t    int test = sc.nextInt();\r\n\t    while(test-->0){\r\n    \t\tString s = sc.nextString();\r\n    \t\tString t = sc.nextString();\r\n    \t\t\r\n    \t\tSystem.out.println(Solution.frequencyOfSubstring(s, t));\r\n\t    }\r\n\t}\r\n    \r\n    public static class FastReader\r\n\t{\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic FastReader()\r\n\t\t{\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\tst = new StringTokenizer(\"\");\r\n\t\t}\r\n\r\n\t\tprivate void read() throws IOException\r\n\t\t{\r\n\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t}\r\n\r\n\t\tpublic String nextString() throws IOException\r\n\t\t{\r\n\t\t\twhile(!st.hasMoreTokens())\r\n\t\t\t\tread();\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tpublic int nextInt() throws IOException\r\n\t\t{\r\n\t\t\treturn Integer.parseInt(nextString());\r\n\t\t}\r\n\r\n\t\tpublic long nextLong() throws IOException\r\n\t\t{\r\n\t\t\treturn Long.parseLong(nextString());\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    \r\n    public static void genlps(int []lps,int m,String s){\r\n        int i=1,len=0;\r\n        lps[0]=0;\r\n        while(i<m){\r\n            if(s.charAt(len)==s.charAt(i)){\r\n                len++;\r\n                lps[i++]=len;\r\n            }\r\n            else{\r\n                if(len!=0){\r\n                    len=lps[len-1];\r\n                }\r\n                else{\r\n                    lps[i]=0;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public static int frequencyOfSubstring(String s, String t)\r\n    {\r\n        int cnt=0;\r\n        int n=s.length();\r\n        int m=t.length();\r\n        \r\n        int i=0,j=0;\r\n        \r\n        int lps[]=new int[m];\r\n        genlps(lps,m,t);\r\n        \r\n        while((n-i)>=(m-j)){\r\n            if(s.charAt(i)==t.charAt(j)){\r\n                i++;j++;\r\n            }\r\n            \r\n            if(j==m){\r\n                cnt++;\r\n                j=lps[j-1];\r\n            }\r\n            else if(n>i && s.charAt(i)!=t.charAt(j)){\r\n                if(j!=0){\r\n                    j=lps[j-1];\r\n                }\r\n                else{\r\n                    i++;\r\n                }\r\n            }\r\n          \r\n        }\r\n          return cnt;\r\n    }\r\n}\r\n"
}