{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\n    public:\r\n    int programmer(string S){\r\n        \r\n        int n = S.length();\r\n\t\tint numIndices = 0;\r\n\t\tint l;\r\n\r\n\t\tstring pattern = \"programmer\";\r\n\t\tint patLength = pattern.length();\r\n\t\tint patternIndex = 0;\r\n\t\tl = 0;\r\n\r\n\t\twhile(l < n - 1 && patternIndex < patLength)\r\n\t\t{\r\n\t\t\tif(S[l] == pattern[patternIndex])\r\n\t\t\t{\r\n\t\t\t\tpatternIndex++;\r\n\t\t\t}\r\n\t\t\tl++;\r\n\t\t}\r\n\r\n\r\n\t\tif(patternIndex == patLength)\r\n\t\t{\r\n\t\t\tpatternIndex--;\r\n\t\t\tint r = n - 1;\r\n\r\n\t\t\twhile(r > l && patternIndex >= 0)\r\n\t\t\t{\r\n\t\t\t\tif(S[r] == pattern[patternIndex])\r\n\t\t\t\t{\r\n\t\t\t\t\tpatternIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tr--;\r\n\t\t\t}\r\n\t\t\tnumIndices = 0;\r\n\t\t\tif(r > l)\r\n\t\t\t{\t\r\n\t\t\t\tnumIndices = r - l + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn numIndices;\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int T;\r\n    cin >> T;\r\n    while(T--){\r\n        string S;\r\n        cin >> S;\r\n        Solution obj;\r\n        cout << obj.programmer(S) << \"\\n\";\r\n    }\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\n    public:\r\n    int programmer(string S){\r\n        \r\n        int n = S.length();\r\n\t\tint numIndices = 0;\r\n\t\tint l;\r\n\r\n\t\tstring pattern = \"programmer\";\r\n\t\tint patLength = pattern.length();\r\n\t\tint patternIndex = 0;\r\n\t\tl = 0;\r\n\r\n\t\twhile(l < n - 1 && patternIndex < patLength)\r\n\t\t{\r\n\t\t\tif(S[l] == pattern[patternIndex])\r\n\t\t\t{\r\n\t\t\t\tpatternIndex++;\r\n\t\t\t}\r\n\t\t\tl++;\r\n\t\t}\r\n\r\n\r\n\t\tif(patternIndex == patLength)\r\n\t\t{\r\n\t\t\tpatternIndex--;\r\n\t\t\tint r = n - 1;\r\n\r\n\t\t\twhile(r > l && patternIndex >= 0)\r\n\t\t\t{\r\n\t\t\t\tif(S[r] == pattern[patternIndex])\r\n\t\t\t\t{\r\n\t\t\t\t\tpatternIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tr--;\r\n\t\t\t}\r\n\t\t\tnumIndices = 0;\r\n\t\t\tif(r > l)\r\n\t\t\t{\t\r\n\t\t\t\tnumIndices = r - l + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn numIndices;\r\n        \r\n    }\r\n};\r\n\r\n\r\n"
}