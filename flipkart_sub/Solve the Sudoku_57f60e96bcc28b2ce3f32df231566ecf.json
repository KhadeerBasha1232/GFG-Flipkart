{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass Driver_class\r\n{\r\n    public static void main(String args[])\r\n    {\r\n        \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while(t-- > 0)\r\n        {\r\n            int grid[][] = new int[9][9];\r\n            for(int i = 0; i < 9; i++)\r\n            {\r\n                for(int j = 0; j < 9; j++)\r\n                grid[i][j] = sc.nextInt();\r\n            }\r\n            \r\n            Solution ob = new Solution();\r\n            \r\n            if(ob.SolveSudoku(grid) == true)\r\n                ob.printGrid(grid);\r\n            else\r\n                System.out.print(\"NO solution exists\");\r\n            System.out.println();\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to find a solved Sudoku. \r\n    static boolean SolveSudoku(int grid[][])\r\n    {\r\n        int m=grid.length;\r\n        int p=-1;\r\n        int d=-1;\r\n        boolean isEmpty=true;\r\n        for(int j=0;j<m;j++){\r\n            for(int k=0;k<m;k++){\r\n                if(grid[j][k]==0){\r\n                    p=j;\r\n                    d=k;\r\n                    isEmpty=false;\r\n                    break;\r\n                }\r\n            }\r\n            if(!isEmpty){\r\n                break;\r\n            }\r\n        }\r\n       \r\n    if(isEmpty){\r\n        return true;\r\n    }\r\n    for(int num=1;num<=m;num++){\r\n        if(Sudoku(grid,p,d,num)){\r\n            grid[p][d]=num;\r\n            if(SolveSudoku(grid)){\r\n                return true;\r\n            }\r\n            else{\r\n                grid[p][d]=0;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nstatic boolean Sudoku(int[][] grid,int p,int d,int num){\r\n    for(int y=0;y<grid.length;y++){\r\n        if(grid[p][y]==num || grid[y][d]==num){\r\n            return false;\r\n        }\r\n    }\r\n    int sqrt=(int)Math.sqrt(grid.length);\r\n    int s=p-p%sqrt;\r\n    int ss=d-d%sqrt;\r\n    for(int j=s;j<s+sqrt;j++){\r\n        for(int k=ss;k<ss+sqrt;k++){\r\n            if(grid[j][k]==num){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n    \r\n    //Function to print grids of the Sudoku.\r\n    static void printGrid (int grid[][])\r\n    {\r\n        int m=grid.length;\r\n        for(int l=0;l<m;l++){\r\n            for(int c=0;c<m;c++){\r\n                System.out.print(grid[l][c]);\r\n                System.out.print(\" \");\r\n            }\r\n            if((l+1)%(int) Math.sqrt(m)==0){\r\n                System.out.print(\"\");\r\n            }\r\n        }\r\n        // add your code here\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to find a solved Sudoku. \r\n    static boolean SolveSudoku(int grid[][])\r\n    {\r\n        int m=grid.length;\r\n        int p=-1;\r\n        int d=-1;\r\n        boolean isEmpty=true;\r\n        for(int j=0;j<m;j++){\r\n            for(int k=0;k<m;k++){\r\n                if(grid[j][k]==0){\r\n                    p=j;\r\n                    d=k;\r\n                    isEmpty=false;\r\n                    break;\r\n                }\r\n            }\r\n            if(!isEmpty){\r\n                break;\r\n            }\r\n        }\r\n       \r\n    if(isEmpty){\r\n        return true;\r\n    }\r\n    for(int num=1;num<=m;num++){\r\n        if(Sudoku(grid,p,d,num)){\r\n            grid[p][d]=num;\r\n            if(SolveSudoku(grid)){\r\n                return true;\r\n            }\r\n            else{\r\n                grid[p][d]=0;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nstatic boolean Sudoku(int[][] grid,int p,int d,int num){\r\n    for(int y=0;y<grid.length;y++){\r\n        if(grid[p][y]==num || grid[y][d]==num){\r\n            return false;\r\n        }\r\n    }\r\n    int sqrt=(int)Math.sqrt(grid.length);\r\n    int s=p-p%sqrt;\r\n    int ss=d-d%sqrt;\r\n    for(int j=s;j<s+sqrt;j++){\r\n        for(int k=ss;k<ss+sqrt;k++){\r\n            if(grid[j][k]==num){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n    \r\n    //Function to print grids of the Sudoku.\r\n    static void printGrid (int grid[][])\r\n    {\r\n        int m=grid.length;\r\n        for(int l=0;l<m;l++){\r\n            for(int c=0;c<m;c++){\r\n                System.out.print(grid[l][c]);\r\n                System.out.print(\" \");\r\n            }\r\n            if((l+1)%(int) Math.sqrt(m)==0){\r\n                System.out.print(\"\");\r\n            }\r\n        }\r\n        // add your code here\r\n    }\r\n}"
}