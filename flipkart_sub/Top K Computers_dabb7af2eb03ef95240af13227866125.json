{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\npublic class GFG {\r\n\tpublic static void main(String[] args) throws IOException {\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(br.readLine());\r\n\t\twhile(test -- > 0) {\r\n\t\t\tString str [] = br.readLine().trim().split(\" \");\r\n\t\t\tint N = Integer.parseInt(str[0]);\r\n\t\t\tint K = Integer.parseInt(str[1]);\r\n\t\t\tComputer [] computers = new Computer[N];\r\n\t\t\tfor(int i = 0; i < N; i++) {\r\n\t\t\t\tstr = br.readLine().trim().split(\" \");\r\n\t\t\t\tint ram = Integer.parseInt(str[0]);\r\n\t\t\t\tint rom = Integer.parseInt(str[1]);\r\n\t\t\t\tfloat processor = Float.parseFloat(str[2]);\r\n\t\t\t\tComputer c = new Computer(i+1, ram, rom, processor);\r\n\t\t\t\tcomputers[i] = c;\r\n\t\t\t}\r\n\t\t\tSolution obj = new Solution();\r\n\t\t\tComputer [] ans = obj.topKComputers(computers, K);\r\n\t\t\tfor(Computer c: ans) {\r\n\t\t\t\tSystem.out.print(c.name+\" \");\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\n\r\n/*\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\n*/\r\nclass Solution{\r\n\tpublic Computer[] topKComputers(Computer [] computers, int K){\r\n\t\t//Write your code here\r\n\t\t\r\n\t\tint numComputers = computers.length;\r\n        \r\n        for(int i = 0 ; i < K ; i++)\r\n        {\r\n            Computer C1 = computers[i];\r\n            int max_pos = i;\r\n\r\n            for(int j = i + 1 ; j < numComputers ; j++)\r\n            {\r\n                Computer C2 = computers[j];\r\n                int result = 0;\r\n                \r\n                if(C1.RAM != C2.RAM)\r\n                {\r\n                    result = -(Integer.signum(C1.RAM - C2.RAM));\r\n                }\r\n                else\r\n                {\r\n                    if(C1.ROM != C2.ROM)\r\n                    {\r\n                        result = -(Integer.signum(C1.ROM - C2.ROM));\r\n                    }\r\n                    else\r\n                    {\r\n                        result = 0;\r\n                        if(C1.processor < C2.processor)\r\n                        {\r\n                            result = 1;\r\n                        }\r\n                        else if(C1.processor > C2.processor)\r\n                        {\r\n                            result = -1;\r\n                        }\r\n                    }\r\n                    if(result == 0)\r\n                    {\r\n                        String S1 = C1.name.substring(1);\r\n                        String S2 = C2.name.substring(1);\r\n                        int c1 = Integer.parseInt(S1);\r\n                        int c2 = Integer.parseInt(S2);\r\n                        result = Integer.signum(c2 - c1);\r\n                    }\r\n                }\r\n                if(result == 1)\r\n                {\r\n                    C1 = C2;\r\n                    max_pos = j;\r\n                }\r\n            }\r\n            \r\n            Computer t = computers[i];\r\n            computers[i] = computers[max_pos];\r\n            computers[max_pos] = t;\r\n        }\r\n        \r\n        Computer[] topComputers = new Computer[K];\r\n        \r\n        for(int i = 0 ; i < K ; i++)\r\n        {\r\n            topComputers[i] = computers[i];\r\n        }\r\n        \r\n        return topComputers;\r\n\t\t\r\n\t}\r\n}\r\n\r\n//{ Driver Code Starts.\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\n\r\n/*\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\n*/\r\nclass Solution{\r\n\tpublic Computer[] topKComputers(Computer [] computers, int K){\r\n\t\t//Write your code here\r\n\t\t\r\n\t\tint numComputers = computers.length;\r\n        \r\n        for(int i = 0 ; i < K ; i++)\r\n        {\r\n            Computer C1 = computers[i];\r\n            int max_pos = i;\r\n\r\n            for(int j = i + 1 ; j < numComputers ; j++)\r\n            {\r\n                Computer C2 = computers[j];\r\n                int result = 0;\r\n                \r\n                if(C1.RAM != C2.RAM)\r\n                {\r\n                    result = -(Integer.signum(C1.RAM - C2.RAM));\r\n                }\r\n                else\r\n                {\r\n                    if(C1.ROM != C2.ROM)\r\n                    {\r\n                        result = -(Integer.signum(C1.ROM - C2.ROM));\r\n                    }\r\n                    else\r\n                    {\r\n                        result = 0;\r\n                        if(C1.processor < C2.processor)\r\n                        {\r\n                            result = 1;\r\n                        }\r\n                        else if(C1.processor > C2.processor)\r\n                        {\r\n                            result = -1;\r\n                        }\r\n                    }\r\n                    if(result == 0)\r\n                    {\r\n                        String S1 = C1.name.substring(1);\r\n                        String S2 = C2.name.substring(1);\r\n                        int c1 = Integer.parseInt(S1);\r\n                        int c2 = Integer.parseInt(S2);\r\n                        result = Integer.signum(c2 - c1);\r\n                    }\r\n                }\r\n                if(result == 1)\r\n                {\r\n                    C1 = C2;\r\n                    max_pos = j;\r\n                }\r\n            }\r\n            \r\n            Computer t = computers[i];\r\n            computers[i] = computers[max_pos];\r\n            computers[max_pos] = t;\r\n        }\r\n        \r\n        Computer[] topComputers = new Computer[K];\r\n        \r\n        for(int i = 0 ; i < K ; i++)\r\n        {\r\n            topComputers[i] = computers[i];\r\n        }\r\n        \r\n        return topComputers;\r\n\t\t\r\n\t}\r\n}\r\n"
}