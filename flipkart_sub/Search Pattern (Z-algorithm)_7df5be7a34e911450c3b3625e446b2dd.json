{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n//https://youtu.be/CpZh4eF8QBw?t=804\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    \r\n        vector<int> zFunction(string concat, int n){\r\n            vector<int> Z(concat.size());\r\n            \r\n            int l = 0;\r\n            int r = 0;\r\n            \r\n            for(int k=1; k<n; k++){\r\n                if(k>r){\r\n                    l = r = k;\r\n                    while(concat[r] == concat[r-l] && r<n){\r\n                        r++;\r\n                    }\r\n                    \r\n                    Z[k] = r-l;\r\n                    r--;\r\n                }\r\n                else{ //means we are inside the box\r\n                    int k1 = k-l;\r\n                    \r\n                    if(Z[k1] < r-k+1){ //checking if within right bound\r\n                        Z[k] = Z[k1];\r\n                    }\r\n                    else{ //creating a box again, starting from the current index\r\n                        l = k;\r\n                        while(r<n && concat[r-l] == concat[r]){\r\n                            r++;\r\n                        }\r\n                        \r\n                        Z[k] = r-l;\r\n                        r--;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return Z;\r\n        }\r\n\r\n        vector <int> search(string pat, string txt){\r\n            string concat = pat + \"$\" + txt;\r\n            int l = concat.size();\r\n            \r\n            vector<int> zArray = zFunction(concat, l);\r\n            \r\n            int n = pat.size();\r\n            \r\n            vector<int> ans;\r\n            \r\n            for(int i=0; i<l; i++){\r\n                if(zArray[i] == n){\r\n                    ans.push_back(i-n);\r\n                }\r\n            }\r\n            \r\n            return ans;\r\n            \r\n        }\r\n     \r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        string S, pat;\r\n        cin >> S >> pat;\r\n        Solution ob;\r\n        vector <int> res = ob.search(pat, S);\r\n        if(res.size()==0)\r\n            cout<<\"-1 \";\r\n        else\r\n            for (int i : res)\r\n                cout << i << \" \";\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n//https://youtu.be/CpZh4eF8QBw?t=804\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    \r\n        vector<int> zFunction(string concat, int n){\r\n            vector<int> Z(concat.size());\r\n            \r\n            int l = 0;\r\n            int r = 0;\r\n            \r\n            for(int k=1; k<n; k++){\r\n                if(k>r){\r\n                    l = r = k;\r\n                    while(concat[r] == concat[r-l] && r<n){\r\n                        r++;\r\n                    }\r\n                    \r\n                    Z[k] = r-l;\r\n                    r--;\r\n                }\r\n                else{ //means we are inside the box\r\n                    int k1 = k-l;\r\n                    \r\n                    if(Z[k1] < r-k+1){ //checking if within right bound\r\n                        Z[k] = Z[k1];\r\n                    }\r\n                    else{ //creating a box again, starting from the current index\r\n                        l = k;\r\n                        while(r<n && concat[r-l] == concat[r]){\r\n                            r++;\r\n                        }\r\n                        \r\n                        Z[k] = r-l;\r\n                        r--;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return Z;\r\n        }\r\n\r\n        vector <int> search(string pat, string txt){\r\n            string concat = pat + \"$\" + txt;\r\n            int l = concat.size();\r\n            \r\n            vector<int> zArray = zFunction(concat, l);\r\n            \r\n            int n = pat.size();\r\n            \r\n            vector<int> ans;\r\n            \r\n            for(int i=0; i<l; i++){\r\n                if(zArray[i] == n){\r\n                    ans.push_back(i-n);\r\n                }\r\n            }\r\n            \r\n            return ans;\r\n            \r\n        }\r\n     \r\n};\r\n"
}