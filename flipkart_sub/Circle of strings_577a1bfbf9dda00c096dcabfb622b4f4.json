{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    void dfs(int i, vector<int> adj[], int vis[]){\r\n        vis[i]=1;\r\n        for(auto nbr : adj[i]) \r\n            if(!vis[nbr]) dfs(nbr, adj , vis);\r\n      \r\n    } \r\n    int isCircle(int N, vector<string> A)\r\n    {\r\n        vector<int> adjList[26]; \r\n        int vis[26]={0};\r\n        int l;\r\n        for(auto s : A)\r\n        {\r\n            int x = s[0] - 'a';\r\n            int y = s[s.size() - 1] - 'a';\r\n           \r\n            adjList[x].push_back(y);\r\n            adjList[y].push_back(x);\r\n             l=x;\r\n        }\r\n       \r\n        dfs(l,adjList,vis);\r\n        for(int j=0; j<26 ; j++){\r\n            if(adjList[j].size()>0 && !vis[j]) return 0;\r\n            if( adjList[j].size()%2==1) return 0;\r\n        }\r\n             \r\n        return 1;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N;\r\n        cin>>N;\r\n        vector<string> A;\r\n        string s;\r\n        \r\n        for(int i = 0;i < N; i++)\r\n        {\r\n            cin>>s;\r\n            A.push_back(s);\r\n        }\r\n        \r\n        Solution ob;\r\n        cout<<ob.isCircle(N, A)<<endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    void dfs(int i, vector<int> adj[], int vis[]){\r\n        vis[i]=1;\r\n        for(auto nbr : adj[i]) \r\n            if(!vis[nbr]) dfs(nbr, adj , vis);\r\n      \r\n    } \r\n    int isCircle(int N, vector<string> A)\r\n    {\r\n        vector<int> adjList[26]; \r\n        int vis[26]={0};\r\n        int l;\r\n        for(auto s : A)\r\n        {\r\n            int x = s[0] - 'a';\r\n            int y = s[s.size() - 1] - 'a';\r\n           \r\n            adjList[x].push_back(y);\r\n            adjList[y].push_back(x);\r\n             l=x;\r\n        }\r\n       \r\n        dfs(l,adjList,vis);\r\n        for(int j=0; j<26 ; j++){\r\n            if(adjList[j].size()>0 && !vis[j]) return 0;\r\n            if( adjList[j].size()%2==1) return 0;\r\n        }\r\n             \r\n        return 1;\r\n    }\r\n};\r\n"
}