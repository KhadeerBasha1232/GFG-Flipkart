{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\npublic class GFG {\r\n\tpublic static void main(String[] args) throws IOException {\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(br.readLine());\r\n\t\twhile(test -- > 0) {\r\n\t\t\tString str [] = br.readLine().trim().split(\" \");\r\n\t\t\tint N = Integer.parseInt(str[0]);\r\n\t\t\tint K = Integer.parseInt(str[1]);\r\n\t\t\tComputer [] computers = new Computer[N];\r\n\t\t\tfor(int i = 0; i < N; i++) {\r\n\t\t\t\tstr = br.readLine().trim().split(\" \");\r\n\t\t\t\tint ram = Integer.parseInt(str[0]);\r\n\t\t\t\tint rom = Integer.parseInt(str[1]);\r\n\t\t\t\tfloat processor = Float.parseFloat(str[2]);\r\n\t\t\t\tComputer c = new Computer(i+1, ram, rom, processor);\r\n\t\t\t\tcomputers[i] = c;\r\n\t\t\t}\r\n\t\t\tSolution obj = new Solution();\r\n\t\t\tComputer [] ans = obj.topKComputers(computers, K);\r\n\t\t\tfor(Computer c: ans) {\r\n\t\t\t\tSystem.out.print(c.name+\" \");\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\n\r\n/*\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\n*/\r\nclass Solution{\r\n\tpublic Computer[] topKComputers(Computer [] computers, int k)\r\n\t{\r\n\t\tArrays.sort(computers,(c1,c2)->\r\n\t\t{\r\n\t\t    if(c1.RAM==c2.RAM)\r\n\t\t    {\r\n\t\t        if(c1.ROM==c2.ROM)\r\n\t\t        {\r\n\t\t            if(c1.processor>c2.processor) return -1;\r\n\t\t            else if(c2.processor>c1.processor) return 1;\r\n\t\t            return 0;\r\n\t\t        }\r\n\t\t        else return c2.ROM-c1.ROM;\r\n\t\t    }\r\n\t\t    else\r\n\t\t    {\r\n\t\t        return c2.RAM-c1.RAM;\r\n\t\t    }\r\n\t\t});\r\n\t\t\r\n\t\tComputer[] ans = new Computer[k];\r\n\t\tfor(int i=0;i<k;i++)\r\n\t\t{\r\n\t\t   ans[i]=computers[i];\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n}\r\n\r\n//{ Driver Code Starts.\r\n// } Driver Code Ends",
  "status": "0",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\n\r\n/*\r\nclass Computer{\r\n\tString name;\r\n\tint RAM;\r\n\tint ROM;\r\n\tfloat processor;\r\n\tComputer(int count, int RAM, int ROM, float processor){\r\n\t\tthis.RAM = RAM;\r\n\t\tthis.ROM = ROM;\r\n\t\tthis.processor = processor;\r\n\t\tthis.name = \"C\"+count;\r\n\t}\r\n}\r\n*/\r\nclass Solution{\r\n\tpublic Computer[] topKComputers(Computer [] computers, int k)\r\n\t{\r\n\t\tArrays.sort(computers,(c1,c2)->\r\n\t\t{\r\n\t\t    if(c1.RAM==c2.RAM)\r\n\t\t    {\r\n\t\t        if(c1.ROM==c2.ROM)\r\n\t\t        {\r\n\t\t            if(c1.processor>c2.processor) return -1;\r\n\t\t            else if(c2.processor>c1.processor) return 1;\r\n\t\t            return 0;\r\n\t\t        }\r\n\t\t        else return c2.ROM-c1.ROM;\r\n\t\t    }\r\n\t\t    else\r\n\t\t    {\r\n\t\t        return c2.RAM-c1.RAM;\r\n\t\t    }\r\n\t\t});\r\n\t\t\r\n\t\tComputer[] ans = new Computer[k];\r\n\t\tfor(int i=0;i<k;i++)\r\n\t\t{\r\n\t\t   ans[i]=computers[i];\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n}\r\n"
}