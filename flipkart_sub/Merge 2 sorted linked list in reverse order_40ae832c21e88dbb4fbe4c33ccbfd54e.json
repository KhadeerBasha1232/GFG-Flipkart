{
  "code": "import java.util.*;\r\nimport java.io.*;\r\n\r\nclass Node\r\n{\r\n    int data;\r\n    Node next;\r\n\r\n    Node(int d)\r\n    {\r\n        data = d;\r\n        next = null;\r\n    }\r\n}\r\n\r\n\r\npublic class MainClass {\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int t=scanner.nextInt();\r\n        while(t-->0)\r\n        {\r\n            int N = scanner.nextInt();\r\n            int M = scanner.nextInt();\r\n\r\n            Node node1 = null;\r\n            Node temp1 = null;\r\n            for (int i = 0; i < N; i++) {\r\n                int value = scanner.nextInt();\r\n                Node newNode = new Node(value);\r\n                if (node1 == null) {\r\n                    node1 = newNode;\r\n                    temp1 = node1;\r\n                } else {\r\n                    temp1.next = newNode;\r\n                    temp1 = temp1.next;\r\n                }\r\n            }\r\n    \r\n            Node node2 = null;\r\n            Node temp2 = null;\r\n            for (int i = 0; i < M; i++) {\r\n                int value = scanner.nextInt();\r\n                Node newNode = new Node(value);\r\n                if (node2 == null) {\r\n                    node2 = newNode;\r\n                    temp2 = node2;\r\n                } else {\r\n                    temp2.next = newNode;\r\n                    temp2 = temp2.next;\r\n                }\r\n            }\r\n    \r\n            GfG gfg = new GfG();\r\n            Node result = gfg.mergeResult(node1, node2);\r\n    \r\n            printList(result);\r\n        }\r\n    }\r\n\r\n    static void printList(Node node) {\r\n        while (node != null) {\r\n            System.out.print(node.data + \" \");\r\n            node = node.next;\r\n        }\r\n        System.out.println();\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n/* Structure of the node*/\r\n/* class Node\r\n{\r\n\tint data;\r\n\tNode next;\r\n\t\r\n\tNode(int d)\r\n\t{\r\n\t\tdata = d;\r\n\t\tnext = null;\r\n\t}\r\n} */\r\n\r\nclass GfG\r\n{\r\n    Node mergeResult(Node node1, Node node2)\r\n    {\r\n        ArrayList<Node> arr1 = new ArrayList<>();\r\n        ArrayList<Node> arr2 = new ArrayList<>();\r\n        while(node1!=null){\r\n            arr1.add(node1);\r\n            node1= node1.next;\r\n        }\r\n        while(node2!=null){\r\n            arr2.add(node2);\r\n            node2 = node2.next;\r\n        }\r\n        int ptr1 = arr1.size()-1;\r\n        int ptr2 = arr2.size()-1;\r\n        Node ans = new Node(-1);\r\n        Node temp = ans;\r\n        while(ptr1 >= 0 && ptr2 >=0){\r\n            if(arr1.get(ptr1).data>arr2.get(ptr2).data){\r\n                temp.next = arr1.get(ptr1);\r\n                ptr1--;\r\n                temp = temp.next;\r\n            }\r\n            else{\r\n                temp.next = arr2.get(ptr2);\r\n                ptr2--;\r\n                temp = temp.next;\r\n            }\r\n        }\r\n        while(ptr1>=0){\r\n            temp.next = arr1.get(ptr1);\r\n            ptr1--;\r\n            temp = temp.next;\r\n        }\r\n        while(ptr2>=0){\r\n            temp.next = arr2.get(ptr2);\r\n            ptr2--;\r\n            temp = temp.next;\r\n        }\r\n        temp.next = null;\r\n        return ans.next;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/* Structure of the node*/\r\n/* class Node\r\n{\r\n\tint data;\r\n\tNode next;\r\n\t\r\n\tNode(int d)\r\n\t{\r\n\t\tdata = d;\r\n\t\tnext = null;\r\n\t}\r\n} */\r\n\r\nclass GfG\r\n{\r\n    Node mergeResult(Node node1, Node node2)\r\n    {\r\n        ArrayList<Node> arr1 = new ArrayList<>();\r\n        ArrayList<Node> arr2 = new ArrayList<>();\r\n        while(node1!=null){\r\n            arr1.add(node1);\r\n            node1= node1.next;\r\n        }\r\n        while(node2!=null){\r\n            arr2.add(node2);\r\n            node2 = node2.next;\r\n        }\r\n        int ptr1 = arr1.size()-1;\r\n        int ptr2 = arr2.size()-1;\r\n        Node ans = new Node(-1);\r\n        Node temp = ans;\r\n        while(ptr1 >= 0 && ptr2 >=0){\r\n            if(arr1.get(ptr1).data>arr2.get(ptr2).data){\r\n                temp.next = arr1.get(ptr1);\r\n                ptr1--;\r\n                temp = temp.next;\r\n            }\r\n            else{\r\n                temp.next = arr2.get(ptr2);\r\n                ptr2--;\r\n                temp = temp.next;\r\n            }\r\n        }\r\n        while(ptr1>=0){\r\n            temp.next = arr1.get(ptr1);\r\n            ptr1--;\r\n            temp = temp.next;\r\n        }\r\n        while(ptr2>=0){\r\n            temp.next = arr2.get(ptr2);\r\n            ptr2--;\r\n            temp = temp.next;\r\n        }\r\n        temp.next = null;\r\n        return ans.next;\r\n    }\r\n}"
}