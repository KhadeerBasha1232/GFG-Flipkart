{
  "code": "//Initial Template for Java\r\nimport java.io.*;\r\nimport java.util.*;\r\nclass GfG\r\n{\r\n    public static void main (String[] args)\r\n    {\r\n        \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while(t-- > 0)\r\n        {\r\n            int l = sc.nextInt();\r\n            int n = sc.nextInt();\r\n            \r\n            int arr[] =  new int[l];\r\n            \r\n            for(int i = 0;i<l;i++)\r\n                arr[i] = sc.nextInt();\r\n            \r\n            Solution ob = new Solution();\r\n                \r\n            if(ob.findPair(arr, l, n)==true)\r\n                System.out.println(1);\r\n                \r\n            else\r\n                System.out.println(-1);    \r\n                \r\n        }\r\n        \r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    private static int binarySearch(int[] arr, int low, int high, int target) {\r\n        while (low <= high) {\r\n            int mid = (low + high) / 2;\r\n\r\n            if (arr[mid] == target) {\r\n                return mid;\r\n            } else if (arr[mid] < target) {\r\n                low = mid + 1;\r\n            } else {\r\n                high = mid - 1;\r\n            }\r\n        }\r\n\r\n        // Not found\r\n        return -1;\r\n    }\r\n\r\n    public boolean findPair(int arr[], int size, int n)\r\n    {\r\n        //code here.\r\n        \r\n        Arrays.sort(arr);\r\n\r\n        // Iterate over the array from the beginning\r\n        for (int i = 0; i < arr.length - 1; i++) {\r\n            int target = arr[i] + n;\r\n\r\n            // Use binary search to find the complement\r\n            int index = binarySearch(arr, i + 1, arr.length - 1, target);\r\n\r\n            // If found, return true\r\n            if (index != -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // No pair found\r\n        return false;\r\n    }\r\n    \r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    private static int binarySearch(int[] arr, int low, int high, int target) {\r\n        while (low <= high) {\r\n            int mid = (low + high) / 2;\r\n\r\n            if (arr[mid] == target) {\r\n                return mid;\r\n            } else if (arr[mid] < target) {\r\n                low = mid + 1;\r\n            } else {\r\n                high = mid - 1;\r\n            }\r\n        }\r\n\r\n        // Not found\r\n        return -1;\r\n    }\r\n\r\n    public boolean findPair(int arr[], int size, int n)\r\n    {\r\n        //code here.\r\n        \r\n        Arrays.sort(arr);\r\n\r\n        // Iterate over the array from the beginning\r\n        for (int i = 0; i < arr.length - 1; i++) {\r\n            int target = arr[i] + n;\r\n\r\n            // Use binary search to find the complement\r\n            int index = binarySearch(arr, i + 1, arr.length - 1, target);\r\n\r\n            // If found, return true\r\n            if (index != -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // No pair found\r\n        return false;\r\n    }\r\n    \r\n}"
}