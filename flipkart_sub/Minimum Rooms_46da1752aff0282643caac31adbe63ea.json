{
  "code": "import heapq\r\n\r\nclass Solution:\r\n    def findRooms(self,start_time,end_time,n):\r\n        #code here\r\n        start_time.sort()\r\n        end_time.sort()\r\n        pq=[]\r\n        ans=0\r\n        for i in range(n):\r\n            if(pq and start_time[i] > pq[0]):\r\n                heapq.heappop(pq)\r\n            heapq.heappush(pq,end_time[i])\r\n            ans = max(ans,len(pq))\r\n        return ans\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\nif __name__==\"__main__\":\r\n    for _ in range(int(input())):\r\n        n=int(input())\r\n        start_time=[i for i in input().strip().split()]\r\n        end_time=[i for i in input().strip().split()]\r\n        obj=Solution()\r\n        print(obj.findRooms(start_time,end_time,n))\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\nimport heapq\r\n\r\nclass Solution:\r\n    def findRooms(self,start_time,end_time,n):\r\n        #code here\r\n        start_time.sort()\r\n        end_time.sort()\r\n        pq=[]\r\n        ans=0\r\n        for i in range(n):\r\n            if(pq and start_time[i] > pq[0]):\r\n                heapq.heappop(pq)\r\n            heapq.heappush(pq,end_time[i])\r\n            ans = max(ans,len(pq))\r\n        return ans\r\n\r\n"
}