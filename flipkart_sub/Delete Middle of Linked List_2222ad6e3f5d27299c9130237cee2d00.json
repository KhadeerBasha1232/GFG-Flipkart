{
  "code": "import java.util.*;\r\nimport java.io.*;\r\n\r\nclass Node{\r\n    int data;\r\n    Node next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = null;\r\n    }\r\n    \r\n}\r\nclass GFG{\r\n\tstatic void printList(Node node) \r\n\t{ \r\n\t\twhile (node != null) \r\n\t\t{ \r\n\t\t\tSystem.out.print(node.data + \" \"); \r\n\t\t\tnode = node.next; \r\n\t\t} \r\n\t\tSystem.out.println(); \r\n\t}\r\n    public static void main(String args[]) throws IOException { \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        while(t > 0){\r\n        \tint n = sc.nextInt();\r\n            Node head = new Node(sc.nextInt());\r\n            Node tail = head;\r\n            for(int i=0; i<n-1; i++)\r\n            {\r\n                tail.next = new Node(sc.nextInt());\r\n                tail = tail.next;\r\n            }\r\n            Solution g = new Solution();\r\n            head = g.deleteMid(head);\r\n            printList(head); \r\n            t--;\r\n        }\r\n    } \r\n} \r\n   \r\n\r\n// } Driver Code Ends\r\n\r\n\r\n/*\r\nclass Node {\r\n    int data;\r\n    Node next;\r\n    Node(int d)  { data = d;  next = null; }\r\n}\r\n*/\r\n\r\nclass Solution {\r\n    Node deleteMid(Node head) {\r\n         if (head == null || head.next == null) {\r\n            return null;\r\n        }\r\n        \r\n        Node prev = head;\r\n        Node slow = head;\r\n        Node fast = head;\r\n        while (fast != null && fast.next != null) {\r\n            fast = fast.next.next;\r\n            prev = slow;\r\n            slow = slow.next;\r\n        }\r\n        \r\n        prev.next = slow.next;\r\n        \r\n        return head;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*\r\nclass Node {\r\n    int data;\r\n    Node next;\r\n    Node(int d)  { data = d;  next = null; }\r\n}\r\n*/\r\n\r\nclass Solution {\r\n    Node deleteMid(Node head) {\r\n         if (head == null || head.next == null) {\r\n            return null;\r\n        }\r\n        \r\n        Node prev = head;\r\n        Node slow = head;\r\n        Node fast = head;\r\n        while (fast != null && fast.next != null) {\r\n            fast = fast.next.next;\r\n            prev = slow;\r\n            slow = slow.next;\r\n        }\r\n        \r\n        prev.next = slow.next;\r\n        \r\n        return head;\r\n    }\r\n}"
}