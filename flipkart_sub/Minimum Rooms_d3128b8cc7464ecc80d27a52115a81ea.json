{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass GFG{\r\n\tpublic static void main(String [] args) throws IOException{\r\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(bf.readLine());\r\n\t\twhile(test-->0) {\r\n\t\t\tString str[] = bf.readLine().trim().split(\" \");\r\n\t\t\tint N = Integer.parseInt(str[0]);\r\n\t\t\tString [] start_time = bf.readLine().trim().split(\" \");\r\n            String [] end_time = bf.readLine().trim().split(\" \");\r\n            System.out.println(new Solution().findRooms(start_time, end_time, N));\r\n       \r\n\t\t}\r\n\t}\r\n}\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    static int findRooms(String start_time[], String end_time[], int N){\r\n        //Write your code here\r\n        int room=1,res=1,i=1,j=0;\r\n        \r\n        Arrays.sort(start_time);\r\n        Arrays.sort(end_time);\r\n        \r\n        while(i<N && j<N){\r\n            \r\n            int sd=Integer.parseInt(start_time[i]);\r\n            int ed=Integer.parseInt(end_time[j]);\r\n            if(sd<=ed){\r\n                room++;\r\n                i++;\r\n            }\r\n            else if(sd>ed){\r\n                room--;\r\n                j++;\r\n            }\r\n            \r\n            if(res<room){\r\n                res=room;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\n//{ Driver Code Starts.\r\n\r\n// } Driver Code Ends",
  "status": "11",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\nclass Solution{\r\n    static int findRooms(String start_time[], String end_time[], int N){\r\n        //Write your code here\r\n        int room=1,res=1,i=1,j=0;\r\n        \r\n        Arrays.sort(start_time);\r\n        Arrays.sort(end_time);\r\n        \r\n        while(i<N && j<N){\r\n            \r\n            int sd=Integer.parseInt(start_time[i]);\r\n            int ed=Integer.parseInt(end_time[j]);\r\n            if(sd<=ed){\r\n                room++;\r\n                i++;\r\n            }\r\n            else if(sd>ed){\r\n                room--;\r\n                j++;\r\n            }\r\n            \r\n            if(res<room){\r\n                res=room;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"
}