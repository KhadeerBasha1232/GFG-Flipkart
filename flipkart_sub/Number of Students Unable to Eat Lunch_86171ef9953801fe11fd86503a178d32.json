{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    public static int countStudents(int[] students, int[] sandwiches) {\r\n        int[] count = new int[]{0, 0}; // count[0] represents the count of students who prefer circular sandwiches, and count[1] represents the count of students who prefer square sandwiches.\r\n\r\n        for (int student : students) {\r\n            count[student]++;\r\n        }\r\n\r\n        for (int sandwich : sandwiches) {\r\n            if (count[sandwich] > 0) {\r\n                count[sandwich]--;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return count[0] + count[1];\r\n    }\r\n}\r\n\r\n//{ Driver Code Starts.\r\n\r\nclass GFG {\r\n\tpublic static void main(String[] args) throws IOException\r\n\t{\r\n\t    var sc = new FastReader();\r\n\t    int test = sc.nextInt();\r\n\t    while(test-->0){\r\n    \t\tint n = sc.nextInt();\r\n    \t\tint[] a = new int[n], b = new int[n];\r\n    \t\t\r\n    \t\tfor(int i = 0; i < n; i++)\r\n    \t\t    a[i] = sc.nextInt();\r\n    \t\t\r\n    \t\tfor(int i = 0; i < n; i++)\r\n    \t\t    b[i] = sc.nextInt();\r\n    \t\t\r\n    \t\tSystem.out.println(Solution.countStudents(a, b));\r\n\t    }\r\n\t}\r\n    \r\n    public static class FastReader\r\n\t{\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic FastReader()\r\n\t\t{\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\tst = new StringTokenizer(\"\");\r\n\t\t}\r\n\r\n\t\tprivate void read() throws IOException\r\n\t\t{\r\n\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t}\r\n\r\n\t\tpublic String nextString() throws IOException\r\n\t\t{\r\n\t\t\twhile(!st.hasMoreTokens())\r\n\t\t\t\tread();\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tpublic int nextInt() throws IOException\r\n\t\t{\r\n\t\t\treturn Integer.parseInt(nextString());\r\n\t\t}\r\n\r\n\t\tpublic long nextLong() throws IOException\r\n\t\t{\r\n\t\t\treturn Long.parseLong(nextString());\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    public static int countStudents(int[] students, int[] sandwiches) {\r\n        int[] count = new int[]{0, 0}; // count[0] represents the count of students who prefer circular sandwiches, and count[1] represents the count of students who prefer square sandwiches.\r\n\r\n        for (int student : students) {\r\n            count[student]++;\r\n        }\r\n\r\n        for (int sandwich : sandwiches) {\r\n            if (count[sandwich] > 0) {\r\n                count[sandwich]--;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return count[0] + count[1];\r\n    }\r\n}\r\n"
}