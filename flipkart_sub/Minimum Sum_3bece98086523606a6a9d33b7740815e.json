{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n\r\n    // int helper(int index , vector<int> &a , int sum ,vector<vector<int>> &dp,int maxi){\r\n    //     if(index>=a.size()){\r\n    //         return abs(sum);\r\n    //     }\r\n        \r\n    //     if(dp[index][sum+maxi]!=-1) return dp[index][sum+maxi];\r\n        \r\n    //     int pos = helper(index+1 , a , sum+a[index],dp,maxi);\r\n    //     int neg = helper(index+1 , a , sum-a[index],dp,maxi);\r\n        \r\n    //     return dp[index][sum+maxi]=min(pos,neg);\r\n    // }\r\n    int solve(int N, vector<int>& A) {\r\n       \r\n      int sum  = 0 ;\r\n      for(int i = 0 ;i<N ; i++) sum+=abs(A[i]);\r\n    //   vector<vector<int>> dp(N,vector<int>(2*sum+1,-1));\r\n    //   return helper(0,A,0,dp,sum);\r\n    \r\n\r\n\r\n       vector<vector<int>> dp(N + 1, vector<int>(2 * sum + 1, 0));\r\n\r\n    for (int index = N; index >= 0; index--) {\r\n        for (int s = -sum; s <= sum; s++) {\r\n            if (index == N) {\r\n                dp[index][s + sum] = abs(s);\r\n            } else {\r\n                int pos = dp[index + 1][s + A[index] + sum];\r\n                int neg = dp[index + 1][s - A[index] + sum];\r\n                dp[index][s + sum] = min(pos, neg);\r\n            }\r\n        }\r\n    }\r\n\r\n    return dp[0][sum];\r\n    \r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int T;\r\n    cin >> T;\r\n    while (T--) {\r\n        int N;\r\n        cin >> N;\r\n        vector<int> A(N);\r\n\r\n        for (int i = 0; i < N; i++) cin >> A[i];\r\n\r\n        Solution ob;\r\n        cout << ob.solve(N, A) << \"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n\r\n    // int helper(int index , vector<int> &a , int sum ,vector<vector<int>> &dp,int maxi){\r\n    //     if(index>=a.size()){\r\n    //         return abs(sum);\r\n    //     }\r\n        \r\n    //     if(dp[index][sum+maxi]!=-1) return dp[index][sum+maxi];\r\n        \r\n    //     int pos = helper(index+1 , a , sum+a[index],dp,maxi);\r\n    //     int neg = helper(index+1 , a , sum-a[index],dp,maxi);\r\n        \r\n    //     return dp[index][sum+maxi]=min(pos,neg);\r\n    // }\r\n    int solve(int N, vector<int>& A) {\r\n       \r\n      int sum  = 0 ;\r\n      for(int i = 0 ;i<N ; i++) sum+=abs(A[i]);\r\n    //   vector<vector<int>> dp(N,vector<int>(2*sum+1,-1));\r\n    //   return helper(0,A,0,dp,sum);\r\n    \r\n\r\n\r\n       vector<vector<int>> dp(N + 1, vector<int>(2 * sum + 1, 0));\r\n\r\n    for (int index = N; index >= 0; index--) {\r\n        for (int s = -sum; s <= sum; s++) {\r\n            if (index == N) {\r\n                dp[index][s + sum] = abs(s);\r\n            } else {\r\n                int pos = dp[index + 1][s + A[index] + sum];\r\n                int neg = dp[index + 1][s - A[index] + sum];\r\n                dp[index][s + sum] = min(pos, neg);\r\n            }\r\n        }\r\n    }\r\n\r\n    return dp[0][sum];\r\n    \r\n    }\r\n};\r\n"
}