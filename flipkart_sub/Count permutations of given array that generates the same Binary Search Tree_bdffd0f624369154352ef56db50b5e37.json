{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.lang.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n\tpublic static void main(String [] args) throws IOException{\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(br.readLine());\r\n\t\twhile(test-- > 0) {\r\n\t\t\tint n = Integer.parseInt(br.readLine());\r\n\t\t\tint [] arr = new int[n];\r\n\t\t\tString [] str = br.readLine().trim().split(\" \");\r\n\t\t\tfor(int i = 0; i < n; i++)\r\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\r\n\t\t\tSolution obj = new Solution();\r\n\t\t\tSystem.out.println(obj.countWays(arr));\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution{\r\n    static long mod=1000000007;;\r\n\tint countWays(int[] arr) {\r\n\t    List<Integer> list=new ArrayList<>();\r\n\t    for(int key:arr) {\r\n\t        list.add(key);\r\n\t    }\r\n\t    return solve(list,list.size())-1;\r\n\t}\r\n\t\r\n\tstatic int solve(List<Integer> arr,int n) {\r\n\t    if(n<=1) {\r\n\t        return 1;\r\n\t    }\r\n\t    List<Integer> left=new ArrayList<>();\r\n\t    List<Integer> right=new ArrayList<>();\r\n\t    \r\n\t    for(int i=1;i<n;++i) {\r\n\t        if(arr.get(i)<arr.get(0)) {\r\n\t            left.add(arr.get(i));\r\n\t        } else {\r\n\t            right.add(arr.get(i));\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    long l=solve(left,left.size());\r\n\t    long r=solve(right,right.size());\r\n\t    long x=nCrMod(n-1,Math.min(left.size(),right.size()));\r\n\t    long tmp=(l*r)%mod;\r\n\t    tmp=(x%mod*tmp)%mod;\r\n\t    return (int)(tmp%mod);\r\n\t}\r\n\t\r\n\t\r\n\tstatic int nCrMod(int n, int r)\r\n    {\r\n        int p=(int)mod;\r\n        if (r > n - r)\r\n            r = n - r;\r\n \r\n        int C[] = new int[r + 1];\r\n \r\n        C[0] = 1;\r\n \r\n        for (int i = 1; i <= n; i++) {\r\n \r\n            for (int j = Math.min(i, r); j > 0; j--)\r\n \r\n                C[j] = (C[j] + C[j - 1]) % p;\r\n        }\r\n        return C[r];\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\nclass Solution{\r\n    static long mod=1000000007;;\r\n\tint countWays(int[] arr) {\r\n\t    List<Integer> list=new ArrayList<>();\r\n\t    for(int key:arr) {\r\n\t        list.add(key);\r\n\t    }\r\n\t    return solve(list,list.size())-1;\r\n\t}\r\n\t\r\n\tstatic int solve(List<Integer> arr,int n) {\r\n\t    if(n<=1) {\r\n\t        return 1;\r\n\t    }\r\n\t    List<Integer> left=new ArrayList<>();\r\n\t    List<Integer> right=new ArrayList<>();\r\n\t    \r\n\t    for(int i=1;i<n;++i) {\r\n\t        if(arr.get(i)<arr.get(0)) {\r\n\t            left.add(arr.get(i));\r\n\t        } else {\r\n\t            right.add(arr.get(i));\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    long l=solve(left,left.size());\r\n\t    long r=solve(right,right.size());\r\n\t    long x=nCrMod(n-1,Math.min(left.size(),right.size()));\r\n\t    long tmp=(l*r)%mod;\r\n\t    tmp=(x%mod*tmp)%mod;\r\n\t    return (int)(tmp%mod);\r\n\t}\r\n\t\r\n\t\r\n\tstatic int nCrMod(int n, int r)\r\n    {\r\n        int p=(int)mod;\r\n        if (r > n - r)\r\n            r = n - r;\r\n \r\n        int C[] = new int[r + 1];\r\n \r\n        C[0] = 1;\r\n \r\n        for (int i = 1; i <= n; i++) {\r\n \r\n            for (int j = Math.min(i, r); j > 0; j--)\r\n \r\n                C[j] = (C[j] + C[j - 1]) % p;\r\n        }\r\n        return C[r];\r\n    }\r\n}"
}