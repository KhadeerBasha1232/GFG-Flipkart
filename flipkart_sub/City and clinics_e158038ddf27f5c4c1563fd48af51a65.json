{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass GFG{\r\n\tpublic static void main(String [] args) throws IOException{\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tint test = Integer.parseInt(br.readLine());\r\n\t\twhile(test-- > 0) {\r\n\t\t\tString [] str = br.readLine().trim().split(\" \");\r\n\t\t\tint N = Integer.parseInt(str[0]);\r\n\t\t\tint R = Integer.parseInt(str[1]);\r\n\t\t\tint C = Integer.parseInt(str[2]);\r\n\t\t\tint M = Integer.parseInt(str[3]);\r\n\t\t\tArrayList<ArrayList<Integer>> edge = new ArrayList<>();\r\n\t\t\tfor(int i = 0; i < M; i++) {\r\n\t\t\t\tedge.add(new ArrayList<>());\r\n\t\t\t}\r\n\t\t\tfor(int i = 0; i < M; i++) {\r\n\t\t\t\tstr = br.readLine().trim().split(\" \");\r\n\t\t\t\tedge.get(i).add(Integer.parseInt(str[0]));\r\n\t\t\t\tedge.get(i).add(Integer.parseInt(str[1]));\r\n\t\t\t\tedge.get(i).add(Integer.parseInt(str[2]));\r\n\t\t\t}\r\n\t\t\tint [] A = new int[N];\r\n\t\t\tstr = br.readLine().trim().split(\" \");\r\n\t\t\tfor(int i = 0; i < N; i++)\r\n\t\t\t\tA[i] = Integer.parseInt(str[i]);\r\n\t\t\tSolution obj = new Solution();\r\n\t\t\tSystem.out.println(obj.solve(N, R, C, M, edge, A));\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solution{\r\n    private boolean flag;\r\n\r\n    private void dfs(int s, int[] A,ArrayList<ArrayList<Integer>> adj, boolean[] vis) {\r\n        vis[s] = true;\r\n        if(A[s]==1) flag = true;\r\n        for (int x : adj.get(s)) {\r\n            if (!vis[x]) dfs(x, A, adj, vis);\r\n        }\r\n    }\r\n    \r\n\tpublic long solve(int N, int R, int C, int M, ArrayList<ArrayList<Integer>> edge, int [] A) {\r\n\t\t//write your code here\r\n\t\tArrayList<ArrayList<Integer>> adj=new ArrayList<>();\r\n\t    boolean[] vis=new boolean[N];\r\n\t    for(int k=0;k<=N;k++) adj.add(new ArrayList<>());\r\n        for (ArrayList<Integer> it : edge) {\r\n            if (it.get(2) == 1) {\r\n                adj.get(it.get(0)).add(it.get(1));\r\n                adj.get(it.get(1)).add(it.get(0));\r\n            }\r\n        }\r\n\r\n        long ans = 0;\r\n\r\n        for (int k = 0; k < N; k++) {\r\n            if (!vis[k]) {\r\n                flag = false;\r\n                dfs(k, A,adj,vis);\r\n                if (flag == false) ans ++;\r\n            }\r\n        }\r\n\r\n        ans *= Math.min(R, C);\r\n        return ans;\r\n\t}\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solution{\r\n    private boolean flag;\r\n\r\n    private void dfs(int s, int[] A,ArrayList<ArrayList<Integer>> adj, boolean[] vis) {\r\n        vis[s] = true;\r\n        if(A[s]==1) flag = true;\r\n        for (int x : adj.get(s)) {\r\n            if (!vis[x]) dfs(x, A, adj, vis);\r\n        }\r\n    }\r\n    \r\n\tpublic long solve(int N, int R, int C, int M, ArrayList<ArrayList<Integer>> edge, int [] A) {\r\n\t\t//write your code here\r\n\t\tArrayList<ArrayList<Integer>> adj=new ArrayList<>();\r\n\t    boolean[] vis=new boolean[N];\r\n\t    for(int k=0;k<=N;k++) adj.add(new ArrayList<>());\r\n        for (ArrayList<Integer> it : edge) {\r\n            if (it.get(2) == 1) {\r\n                adj.get(it.get(0)).add(it.get(1));\r\n                adj.get(it.get(1)).add(it.get(0));\r\n            }\r\n        }\r\n\r\n        long ans = 0;\r\n\r\n        for (int k = 0; k < N; k++) {\r\n            if (!vis[k]) {\r\n                flag = false;\r\n                dfs(k, A,adj,vis);\r\n                if (flag == false) ans ++;\r\n            }\r\n        }\r\n\r\n        ans *= Math.min(R, C);\r\n        return ans;\r\n\t}\r\n}"
}