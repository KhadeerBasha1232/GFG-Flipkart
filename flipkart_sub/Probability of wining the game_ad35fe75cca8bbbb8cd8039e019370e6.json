{
  "code": "//Initial Template for Java\r\n\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GfG\r\n{\r\n    public static void main(String args[])throws IOException\r\n        {\r\n            \r\n            Scanner sc = new Scanner(System.in);\r\n            int t = sc.nextInt();\r\n            while(t-->0)\r\n                {\r\n                    int n,m,d,x,y,res;\r\n                    n=sc.nextInt();\r\n                    m=sc.nextInt();\r\n                    d=sc.nextInt();\r\n                    x=sc.nextInt();\r\n                    y=sc.nextInt();\r\n                    Solution obj = new Solution();\r\n                    res = obj.winingProbablity(n,m,x,y,d);\r\n                    System.out.print(res);\r\n                    System.out.println();\r\n    \r\n                }\r\n        }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solution {\r\n    static int[] X={1,0,-1,0};\r\n    static int[] Y={0,1,0,-1};\r\n    static int fail;\r\n    static int tot;\r\n    public static int winingProbablity(int n, int m,int x, int y, int steps) {\r\n        fail=0;\r\n        tot=0;\r\n        solve(x,y,n,m,steps);\r\n        int suc=tot-fail;\r\n        // System.out.println(fail+\" \"+tot);\r\n        return suc*100/tot;\r\n    }\r\n    \r\n    static void solve(int x,int y,int n,int m,int steps) {\r\n        if(steps==0) {\r\n            if(!isSafe(x,y,n,m)) {\r\n                fail++;\r\n            }\r\n            tot++;\r\n            return;\r\n        }\r\n        for(int k=0;k<4;++k) {\r\n            int nx=x+X[k];\r\n            int ny=y+Y[k];\r\n            solve(nx,ny,n,m,steps-1);\r\n        }\r\n    }\r\n    \r\n    static boolean isSafe(int i,int j,int n,int m) {\r\n        return i>=0 && j>=0 && i<=n && j<=m;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n//User function Template for Java\r\n\r\n\r\nclass Solution {\r\n    static int[] X={1,0,-1,0};\r\n    static int[] Y={0,1,0,-1};\r\n    static int fail;\r\n    static int tot;\r\n    public static int winingProbablity(int n, int m,int x, int y, int steps) {\r\n        fail=0;\r\n        tot=0;\r\n        solve(x,y,n,m,steps);\r\n        int suc=tot-fail;\r\n        // System.out.println(fail+\" \"+tot);\r\n        return suc*100/tot;\r\n    }\r\n    \r\n    static void solve(int x,int y,int n,int m,int steps) {\r\n        if(steps==0) {\r\n            if(!isSafe(x,y,n,m)) {\r\n                fail++;\r\n            }\r\n            tot++;\r\n            return;\r\n        }\r\n        for(int k=0;k<4;++k) {\r\n            int nx=x+X[k];\r\n            int ny=y+Y[k];\r\n            solve(nx,ny,n,m,steps-1);\r\n        }\r\n    }\r\n    \r\n    static boolean isSafe(int i,int j,int n,int m) {\r\n        return i>=0 && j>=0 && i<=n && j<=m;\r\n    }\r\n}"
}