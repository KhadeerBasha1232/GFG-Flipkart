{
  "code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass GFG\r\n{\r\n    public static void main(String[] args) throws IOException\r\n    {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int T = Integer.parseInt(br.readLine().trim());\r\n        while(T-->0)\r\n        {\r\n            int n = Integer.parseInt(br.readLine().trim());\r\n            String[] s = br.readLine().trim().split(\" \");\r\n            Solution obj = new Solution();\r\n            String[][] ans = obj.groupAnagrams(s);\r\n            for(int i = 0; i < ans.length; i++){\r\n                for(int j = 0; j < ans[i].length; j++){\r\n                    System.out.print(ans[i][j] + \" \");\r\n                }\r\n                System.out.println();\r\n            }\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public String[][] groupAnagrams(String[] s)\r\n    {\r\n        // Code here\r\n         Arrays.sort(s); //n * logn\r\n       \r\n       LinkedHashMap<HashMap<Character,Integer>, List<String>> hm = \r\n         new LinkedHashMap<HashMap<Character,Integer>, List<String>>(); //Space n items each of size m\r\n         //space O(n*m)\r\n         \r\n         for(String str : s){ //O(n)   //O(n*m)\r\n             \r\n             HashMap<Character,Integer> charCountMap =  getCharCount(str); //O(m) m is str.size();\r\n             \r\n             if(!hm.containsKey(charCountMap)){\r\n                  hm.put(charCountMap,new ArrayList<String>()); \r\n             }\r\n             \r\n             hm.get(charCountMap).add(str);\r\n         }\r\n     \r\n      \r\n      String[][] res = new String[hm.size()][];\r\n      int i=0;\r\n      \r\n      for(Map.Entry<HashMap<Character,Integer>, List<String>> entry : hm.entrySet()){\r\n          List<String> list = entry.getValue();\r\n          String[] anaGroup = new  String[list.size()];\r\n          int size = list.size();\r\n          for(int j=0;j<size;j++){\r\n               anaGroup[j] =  list.get(j);\r\n          }\r\n         res[i++] = anaGroup;\r\n      }\r\n     \r\n        return res;\r\n    }\r\n    \r\n    HashMap<Character,Integer> getCharCount(String s){\r\n        \r\n        HashMap<Character,Integer> hm = new  HashMap<Character,Integer>() ;\r\n        \r\n        for(char ch : s.toCharArray()){\r\n           hm.put(ch, hm.getOrDefault(ch,0)+1);\r\n        }\r\n        \r\n        return hm;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public String[][] groupAnagrams(String[] s)\r\n    {\r\n        // Code here\r\n         Arrays.sort(s); //n * logn\r\n       \r\n       LinkedHashMap<HashMap<Character,Integer>, List<String>> hm = \r\n         new LinkedHashMap<HashMap<Character,Integer>, List<String>>(); //Space n items each of size m\r\n         //space O(n*m)\r\n         \r\n         for(String str : s){ //O(n)   //O(n*m)\r\n             \r\n             HashMap<Character,Integer> charCountMap =  getCharCount(str); //O(m) m is str.size();\r\n             \r\n             if(!hm.containsKey(charCountMap)){\r\n                  hm.put(charCountMap,new ArrayList<String>()); \r\n             }\r\n             \r\n             hm.get(charCountMap).add(str);\r\n         }\r\n     \r\n      \r\n      String[][] res = new String[hm.size()][];\r\n      int i=0;\r\n      \r\n      for(Map.Entry<HashMap<Character,Integer>, List<String>> entry : hm.entrySet()){\r\n          List<String> list = entry.getValue();\r\n          String[] anaGroup = new  String[list.size()];\r\n          int size = list.size();\r\n          for(int j=0;j<size;j++){\r\n               anaGroup[j] =  list.get(j);\r\n          }\r\n         res[i++] = anaGroup;\r\n      }\r\n     \r\n        return res;\r\n    }\r\n    \r\n    HashMap<Character,Integer> getCharCount(String s){\r\n        \r\n        HashMap<Character,Integer> hm = new  HashMap<Character,Integer>() ;\r\n        \r\n        for(char ch : s.toCharArray()){\r\n           hm.put(ch, hm.getOrDefault(ch,0)+1);\r\n        }\r\n        \r\n        return hm;\r\n    }\r\n}"
}