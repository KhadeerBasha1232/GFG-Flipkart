{
  "code": "import java.io.*;\r\nimport java.util.*;\r\n\r\n\r\nclass IntArray\r\n{\r\n    public static int[] input(BufferedReader br, int n) throws IOException\r\n    {\r\n        String[] s = br.readLine().trim().split(\" \");\r\n        int[] a = new int[n];\r\n        for(int i = 0; i < n; i++)\r\n            a[i] = Integer.parseInt(s[i]);\r\n\r\n        return a;\r\n    }\r\n\r\n    public static void print(int[] a)\r\n    {\r\n        for(int e : a)\r\n            System.out.print(e + \" \");\r\n        System.out.println();\r\n    }\r\n\r\n    public static void print(ArrayList<Integer> a)\r\n    {\r\n        for(int e : a)\r\n            System.out.print(e + \" \");\r\n        System.out.println();\r\n    }\r\n}\r\n\r\nclass GFG {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int t;\r\n        t = Integer.parseInt(br.readLine());\r\n        while(t-- > 0){\r\n            \r\n            int n;\r\n            n = Integer.parseInt(br.readLine());\r\n            \r\n            \r\n            int[] prices = IntArray.input(br, n);\r\n            \r\n            Solution obj = new Solution();\r\n            int res = obj.stockBuyAndSell(n, prices);\r\n            \r\n            System.out.println(res);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n\r\nclass Solution {\r\n    public static int stockBuyAndSell(int n, int[] prices) {\r\n        // code here\r\n        int maxProfit =  0;\r\n        for(int i=1;i<n;i++){\r\n            if(prices[i]>prices[i-1]){\r\n                maxProfit = maxProfit+prices[i]-prices[i-1];\r\n            }\r\n        }\r\n        return  maxProfit;\r\n    }\r\n}\r\n        \r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\nclass Solution {\r\n    public static int stockBuyAndSell(int n, int[] prices) {\r\n        // code here\r\n        int maxProfit =  0;\r\n        for(int i=1;i<n;i++){\r\n            if(prices[i]>prices[i-1]){\r\n                maxProfit = maxProfit+prices[i]-prices[i-1];\r\n            }\r\n        }\r\n        return  maxProfit;\r\n    }\r\n}\r\n        \r\n"
}