{
  "code": " \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\nclass Solution{\r\npublic:\t\r\n\t\r\n\t\r\n\tint isPalindrome(string S)\r\n\t{    \r\n\t    \r\n\t   int len = S.size();\r\n\t    for(int i=0;i<len/2;i++){\r\n\t        if(S[i] != S[len-1-i]){\r\n\t           \r\n\t            return 0;\r\n\t            \r\n\t        }\r\n\t           \r\n\t    }\r\n\t    return 1;\r\n\t}\r\n\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() \r\n{\r\n   \tios_base::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n   \r\n   \tint t;\r\n   \tcin >> t;\r\n   \twhile(t--)\r\n   \t{\r\n   \t\tstring s;\r\n   \t\tcin >> s;\r\n\r\n   \t    Solution ob;\r\n\r\n   \t\tcout << ob.isPalindrome(s) << \"\\n\";\r\n   \t}\r\n\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\nclass Solution{\r\npublic:\t\r\n\t\r\n\t\r\n\tint isPalindrome(string S)\r\n\t{    \r\n\t    \r\n\t   int len = S.size();\r\n\t    for(int i=0;i<len/2;i++){\r\n\t        if(S[i] != S[len-1-i]){\r\n\t           \r\n\t            return 0;\r\n\t            \r\n\t        }\r\n\t           \r\n\t    }\r\n\t    return 1;\r\n\t}\r\n\r\n};\r\n"
}