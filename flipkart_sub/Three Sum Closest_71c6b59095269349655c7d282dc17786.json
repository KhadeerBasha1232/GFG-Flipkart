{
  "code": "\r\n# arr    : list of integers denoting the elements of the array\r\n# target : as specified in the problem statement\r\n\r\nclass Solution:\r\n    def threeSumClosest(self, nums, target):\r\n        nums.sort()\r\n        closest_sum = float('inf')\r\n        min_diff = float('inf')\r\n        n = len(nums)\r\n    \r\n        for i in range(n - 2):\r\n            left, right = i + 1, n - 1\r\n    \r\n            while left < right:\r\n                current_sum = nums[i] + nums[left] + nums[right]\r\n                diff = abs(target - current_sum)\r\n    \r\n                if diff < min_diff or (diff == min_diff and current_sum > closest_sum):\r\n                    min_diff = diff\r\n                    closest_sum = current_sum\r\n    \r\n                if current_sum < target:\r\n                    left += 1\r\n                else:\r\n                    right -= 1\r\n    \r\n        return closest_sum\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\nt = int (input ())\r\nfor tc in range (t):\r\n    n, target = list(map(int, input().split()));\r\n    arr = list(map(int, input().split()));\r\n    \r\n    print (Solution().threeSumClosest (arr, target))\r\n    \r\n\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\n# arr    : list of integers denoting the elements of the array\r\n# target : as specified in the problem statement\r\n\r\nclass Solution:\r\n    def threeSumClosest(self, nums, target):\r\n        nums.sort()\r\n        closest_sum = float('inf')\r\n        min_diff = float('inf')\r\n        n = len(nums)\r\n    \r\n        for i in range(n - 2):\r\n            left, right = i + 1, n - 1\r\n    \r\n            while left < right:\r\n                current_sum = nums[i] + nums[left] + nums[right]\r\n                diff = abs(target - current_sum)\r\n    \r\n                if diff < min_diff or (diff == min_diff and current_sum > closest_sum):\r\n                    min_diff = diff\r\n                    closest_sum = current_sum\r\n    \r\n                if current_sum < target:\r\n                    left += 1\r\n                else:\r\n                    right -= 1\r\n    \r\n        return closest_sum\r\n\r\n\r\n"
}