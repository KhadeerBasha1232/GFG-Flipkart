{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public static String findGreatest(String num)\r\n    {\r\n       //Write your code here\r\n       char[] d=num.toCharArray();\r\n       int n=d.length;\r\n       int i,j;\r\n       for(i=n-1;i>0;i--){\r\n           if(d[i]<d[i-1]){\r\n               break;\r\n           }\r\n       }\r\n       if(i==0){\r\n           return \"-1\";\r\n       }\r\n       int x=d[i-1],g=i;\r\n       for(j=i;j<n;j++){\r\n           if(d[j]<x && d[j]>d[g]){\r\n               g=j;\r\n           }\r\n       }\r\n       swap(d,g,i-1);\r\n       Arrays.sort(d,i,n);\r\n       reverse(d,i,n-1);\r\n       return String.valueOf(d);\r\n    }\r\n    static String swap(char[] ch,int i,int j){\r\n        char t=ch[i];\r\n        ch[i]=ch[j];\r\n        ch[j]=t;\r\n        return String.valueOf(ch);\r\n    }\r\n    \r\n    static void reverse(char str[],int st,int end){\r\n        char t;\r\n        while(st<=end){\r\n            t=str[st];\r\n            str[st]=str[end];\r\n            str[end]=t;\r\n            st++;\r\n            end--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nclass GFG {\r\n\tpublic static void main(String[] args) throws IOException\r\n\t{\r\n\t    var sc = new FastReader();\r\n\t    int test = sc.nextInt();\r\n\t    while(test-->0){\r\n    \t\tString s = sc.nextString();\r\n    \t\t\r\n    \t\tSystem.out.println(Solution.findGreatest(s));\r\n\t    }\r\n\t}\r\n    \r\n    public static class FastReader\r\n\t{\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic FastReader()\r\n\t\t{\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\tst = new StringTokenizer(\"\");\r\n\t\t}\r\n\r\n\t\tprivate void read() throws IOException\r\n\t\t{\r\n\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t}\r\n\r\n\t\tpublic String nextString() throws IOException\r\n\t\t{\r\n\t\t\twhile(!st.hasMoreTokens())\r\n\t\t\t\tread();\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tpublic int nextInt() throws IOException\r\n\t\t{\r\n\t\t\treturn Integer.parseInt(nextString());\r\n\t\t}\r\n\r\n\t\tpublic long nextLong() throws IOException\r\n\t\t{\r\n\t\t\treturn Long.parseLong(nextString());\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public static String findGreatest(String num)\r\n    {\r\n       //Write your code here\r\n       char[] d=num.toCharArray();\r\n       int n=d.length;\r\n       int i,j;\r\n       for(i=n-1;i>0;i--){\r\n           if(d[i]<d[i-1]){\r\n               break;\r\n           }\r\n       }\r\n       if(i==0){\r\n           return \"-1\";\r\n       }\r\n       int x=d[i-1],g=i;\r\n       for(j=i;j<n;j++){\r\n           if(d[j]<x && d[j]>d[g]){\r\n               g=j;\r\n           }\r\n       }\r\n       swap(d,g,i-1);\r\n       Arrays.sort(d,i,n);\r\n       reverse(d,i,n-1);\r\n       return String.valueOf(d);\r\n    }\r\n    static String swap(char[] ch,int i,int j){\r\n        char t=ch[i];\r\n        ch[i]=ch[j];\r\n        ch[j]=t;\r\n        return String.valueOf(ch);\r\n    }\r\n    \r\n    static void reverse(char str[],int st,int end){\r\n        char t;\r\n        while(st<=end){\r\n            t=str[st];\r\n            str[st]=str[end];\r\n            str[end]=t;\r\n            st++;\r\n            end--;\r\n        }\r\n    }\r\n}\r\n\r\n"
}