{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\n\r\nstruct Interval{\r\n    int start, end, idx;\r\n};\r\nbool mycmp(Interval x, Interval y){\r\n    return x.end < y.end;\r\n}\r\nclass Solution {\r\npublic:\r\n\tvector<int> printMeetingIds(vector<int>&start, vector<int>&finish){\r\n\t    int n = start.size();\r\n\t    vector<Interval> v(n);\r\n\t    for(int i=0;i<n;i++){\r\n\t        v[i].start = start[i];\r\n\t        v[i].end = finish[i];\r\n\t        v[i].idx = i;\r\n\t    }\r\n\t    sort(v.begin(),v.end(),mycmp);\r\n\t    vector<int> ans;\r\n\t    ans.push_back(v[0].idx+1);\r\n\t    int fin = v[0].end;\r\n\t    for(int i=1;i<n;i++){\r\n\t        if(v[i].start >= fin){\r\n\t            ans.push_back(v[i].idx+1);\r\n\t            fin = v[i].end;\r\n\t        }\r\n\t    }\r\n\t    return ans;\r\n\t}\r\n\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tvector<int>start(n), finish(n);\r\n\t\tfor(auto &i: start)cin >> i;\r\n\t\tfor(auto &i: finish)cin >>  i;\r\n\t\tSolution obj;\r\n\t\tvector<int> ans = obj.printMeetingIds(start, finish);\r\n\t\tfor(auto i: ans)cout << i << \" \";\r\n\t\tcout << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\n\r\nstruct Interval{\r\n    int start, end, idx;\r\n};\r\nbool mycmp(Interval x, Interval y){\r\n    return x.end < y.end;\r\n}\r\nclass Solution {\r\npublic:\r\n\tvector<int> printMeetingIds(vector<int>&start, vector<int>&finish){\r\n\t    int n = start.size();\r\n\t    vector<Interval> v(n);\r\n\t    for(int i=0;i<n;i++){\r\n\t        v[i].start = start[i];\r\n\t        v[i].end = finish[i];\r\n\t        v[i].idx = i;\r\n\t    }\r\n\t    sort(v.begin(),v.end(),mycmp);\r\n\t    vector<int> ans;\r\n\t    ans.push_back(v[0].idx+1);\r\n\t    int fin = v[0].end;\r\n\t    for(int i=1;i<n;i++){\r\n\t        if(v[i].start >= fin){\r\n\t            ans.push_back(v[i].idx+1);\r\n\t            fin = v[i].end;\r\n\t        }\r\n\t    }\r\n\t    return ans;\r\n\t}\r\n\r\n};\r\n"
}