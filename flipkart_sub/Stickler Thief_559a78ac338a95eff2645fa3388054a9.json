{
  "code": "import java.util.*;\r\nimport java.io.*;\r\n\r\nclass GFG\r\n {\r\n\tpublic static void main (String[] args)\r\n\t {\r\n\t  \r\n\t  //taking input using Scanner class\r\n\t  Scanner sc = new Scanner(System.in);\r\n\t  \r\n\t  //taking count of testcases\r\n\t  int t = sc.nextInt();\r\n\t  while(t-- > 0){\r\n\t      \r\n\t      //taking count of houses\r\n\t      int n = sc.nextInt();\r\n\t      int arr[] = new int[n];\r\n\t      \r\n\t      //inserting money present in \r\n\t      //each house in the array\r\n\t      for(int i = 0; i<n; ++i)\r\n\t           arr[i] = sc.nextInt();\r\n  \t      \r\n  \t      //calling method FindMaxSum() of class solve\r\n  \t      System.out.println(new Solution().FindMaxSum(arr, n));\r\n\t }\r\n   }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the maximum money the thief can get.\r\n    public int FindMaxSum(int arr[], int n)\r\n    {\r\n        // Your code here\r\n        if(arr.length == 1) return arr[0];\r\n        if(arr.length == 2) return Math.max(arr[0], arr[1]);\r\n        int moneyLooted[] = new int[arr.length];\r\n         \r\n        moneyLooted[0] = arr[0];\r\n        moneyLooted[1] = Math.max(arr[0], arr[1]);\r\n        \r\n        for(int i=2; i<arr.length; i++){\r\n             moneyLooted[i] = Math.max(arr[i]+moneyLooted[i-2], moneyLooted[i-1]); \r\n        }\r\n        return moneyLooted[n-1];\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    //Function to find the maximum money the thief can get.\r\n    public int FindMaxSum(int arr[], int n)\r\n    {\r\n        // Your code here\r\n        if(arr.length == 1) return arr[0];\r\n        if(arr.length == 2) return Math.max(arr[0], arr[1]);\r\n        int moneyLooted[] = new int[arr.length];\r\n         \r\n        moneyLooted[0] = arr[0];\r\n        moneyLooted[1] = Math.max(arr[0], arr[1]);\r\n        \r\n        for(int i=2; i<arr.length; i++){\r\n             moneyLooted[i] = Math.max(arr[i]+moneyLooted[i-2], moneyLooted[i-1]); \r\n        }\r\n        return moneyLooted[n-1];\r\n    }\r\n}"
}