{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\n//User function Template for C++\r\n\r\nbool comp(vector<int> &a, vector<int> &b){\r\n   return a[1] < b[1];\r\n}\r\n\r\nclass Solution {\r\npublic:\r\n   int vanishLines(int N, vector<vector<int>>& points)\r\n   {\r\n       if(points.size() == 0) return 0; \r\n \r\n       sort(points.begin(), points.end(), comp);\r\n       int arrows = 1;\r\n       int last = points[0][1];\r\n       \r\n       for(int i = 1; i < points.size(); i++){\r\n           if(points[i][0] > last){\r\n               arrows++;\r\n               last = points[i][1];\r\n           }\r\n       }\r\n       return arrows;\r\n   }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n        vector<vector<int>>points;\r\n        for (int i = 0; i < n; ++i)\r\n        {\r\n            int u, v;\r\n            cin >> u >> v;\r\n            points.push_back({u, v});\r\n        }\r\n        Solution ob;\r\n        int ans = ob.vanishLines(n,points);\r\n        cout << ans << \"\\n\";\r\n    }\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\n//User function Template for C++\r\n\r\nbool comp(vector<int> &a, vector<int> &b){\r\n   return a[1] < b[1];\r\n}\r\n\r\nclass Solution {\r\npublic:\r\n   int vanishLines(int N, vector<vector<int>>& points)\r\n   {\r\n       if(points.size() == 0) return 0; \r\n \r\n       sort(points.begin(), points.end(), comp);\r\n       int arrows = 1;\r\n       int last = points[0][1];\r\n       \r\n       for(int i = 1; i < points.size(); i++){\r\n           if(points[i][0] > last){\r\n               arrows++;\r\n               last = points[i][1];\r\n           }\r\n       }\r\n       return arrows;\r\n   }\r\n};\r\n\r\n"
}