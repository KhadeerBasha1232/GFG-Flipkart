{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution\r\n{\r\npublic:\r\n    int Lcm(vector<int> arr, int idx){\r\n       \r\n       if (idx == arr.size()-1){\r\n           return arr[idx];\r\n       }\r\n       int a = arr[idx];\r\n       int b = Lcm(arr, idx+1);\r\n       return (a*b/__gcd(a,b)); \r\n   }\r\n\r\n   string lcmT(int n, int m, vector<int> &arr1, vector<int> &arr2)\r\n   {\r\n       // code here\r\n       int lcm1=Lcm(arr1,0);\r\n       int lcm2=Lcm(arr2,0);\r\n       if(lcm1==lcm2) return \"YES\";\r\n       return \"NO\";\r\n   }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n, m;\r\n        cin >> n >> m;\r\n        vector<int> arr1(n), arr2(m);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin >> arr1[i];\r\n        }\r\n\r\n        for (int i = 0; i < m; i++)\r\n        {\r\n            cin >> arr2[i];\r\n        }\r\n        Solution ob;\r\n        string ans = ob.lcmT(n, m, arr1, arr2);\r\n        cout << ans;\r\n        cout << \"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution\r\n{\r\npublic:\r\n    int Lcm(vector<int> arr, int idx){\r\n       \r\n       if (idx == arr.size()-1){\r\n           return arr[idx];\r\n       }\r\n       int a = arr[idx];\r\n       int b = Lcm(arr, idx+1);\r\n       return (a*b/__gcd(a,b)); \r\n   }\r\n\r\n   string lcmT(int n, int m, vector<int> &arr1, vector<int> &arr2)\r\n   {\r\n       // code here\r\n       int lcm1=Lcm(arr1,0);\r\n       int lcm2=Lcm(arr2,0);\r\n       if(lcm1==lcm2) return \"YES\";\r\n       return \"NO\";\r\n   }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n"
}