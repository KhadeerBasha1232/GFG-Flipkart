{
  "code": "import java.util.*;\r\n\r\nclass FindMinCost\r\n{\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint t = sc.nextInt();\r\n\t\twhile(t > 0)\r\n\t\t{\r\n\t\t\tint n = sc.nextInt();\r\n\t\t\tint m = sc.nextInt();\r\n\t\t\tint arr[][] = new int[n][m];\r\n\t\t\tfor(int i=0; i<n; i++)\r\n\t\t\t{\r\n\t\t\t\tfor(int j=0; j<m; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tarr[i][j] = sc.nextInt();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSystem.out.println(new Solution().minCost(arr, n, m));\r\n\t\tt--;\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    /*You are required to complete this method*/\r\n    int minCost(int matrix[][], int n, int k)\r\n    {\r\n\t// Your code here\t\r\n\t//we are moving from last row to up\r\n\t// find 2 smallest value in last row(why 2? if we cant give same colr to above row home, so in that case we need backup)\r\n    \r\n    int a=Integer.MAX_VALUE;\r\n    int a1=0;\r\n    int b=Integer.MAX_VALUE;\r\n    int b1=0;\r\n\tfor(int i=0;i<k;i++){\r\n\t    if(matrix[n-1][i]<a){\r\n\t        b=a;\r\n\t        b1=a1;\r\n\t        a=matrix[n-1][i];\r\n\t        a1=i;\r\n\t    }else if(matrix[n-1][i]<b){\r\n\t        b=matrix[n-1][i];\r\n\t        b1=i;\r\n\t    }\r\n\t}\r\n\t\r\n\t//loop from 2nd last to up\r\n\tfor(int i=n-2;i>=0;i--){\r\n\t    // same as prv we need to find new upfated mins for current row\r\n\t    int c=Integer.MAX_VALUE;\r\n        int c1=0;\r\n        int d=Integer.MAX_VALUE;\r\n        int d1=0;\r\n        \r\n\t    for(int j=0;j<k;j++){\r\n\t        // same coulmn as next row min add 2nd miimum\r\n\t        if(a1==j){\r\n\t            matrix[i][j]+=b;\r\n\t        }else{ //else add minimum value\r\n\t            matrix[i][j]+=a;\r\n\t        }\r\n\t        \r\n\t        //upding mins for current row same logic as before\r\n\t        if(matrix[i][j]<c){\r\n\t          d=c;\r\n\t          d1=c1;\r\n\t          c=matrix[i][j];\r\n\t         c1=j;\r\n\t       }else if(matrix[i][j]<d){\r\n\t        d=matrix[i][j];\r\n\t        d1=j;\r\n\t       }\r\n\t    }\r\n\t    // assigning  new updated values to a and b\r\n\t    a=c;\r\n\t    b=d;\r\n\t    a1=c1;\r\n\t    b1=d1;\r\n\t}\r\n\tint ans=Integer.MAX_VALUE;\r\n\tfor(int i=0;i<k;i++){\r\n\t    ans=Math.min(matrix[0][i],ans);\r\n\t}\r\n\treturn ans;\r\n    }\r\n}\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    /*You are required to complete this method*/\r\n    int minCost(int matrix[][], int n, int k)\r\n    {\r\n\t// Your code here\t\r\n\t//we are moving from last row to up\r\n\t// find 2 smallest value in last row(why 2? if we cant give same colr to above row home, so in that case we need backup)\r\n    \r\n    int a=Integer.MAX_VALUE;\r\n    int a1=0;\r\n    int b=Integer.MAX_VALUE;\r\n    int b1=0;\r\n\tfor(int i=0;i<k;i++){\r\n\t    if(matrix[n-1][i]<a){\r\n\t        b=a;\r\n\t        b1=a1;\r\n\t        a=matrix[n-1][i];\r\n\t        a1=i;\r\n\t    }else if(matrix[n-1][i]<b){\r\n\t        b=matrix[n-1][i];\r\n\t        b1=i;\r\n\t    }\r\n\t}\r\n\t\r\n\t//loop from 2nd last to up\r\n\tfor(int i=n-2;i>=0;i--){\r\n\t    // same as prv we need to find new upfated mins for current row\r\n\t    int c=Integer.MAX_VALUE;\r\n        int c1=0;\r\n        int d=Integer.MAX_VALUE;\r\n        int d1=0;\r\n        \r\n\t    for(int j=0;j<k;j++){\r\n\t        // same coulmn as next row min add 2nd miimum\r\n\t        if(a1==j){\r\n\t            matrix[i][j]+=b;\r\n\t        }else{ //else add minimum value\r\n\t            matrix[i][j]+=a;\r\n\t        }\r\n\t        \r\n\t        //upding mins for current row same logic as before\r\n\t        if(matrix[i][j]<c){\r\n\t          d=c;\r\n\t          d1=c1;\r\n\t          c=matrix[i][j];\r\n\t         c1=j;\r\n\t       }else if(matrix[i][j]<d){\r\n\t        d=matrix[i][j];\r\n\t        d1=j;\r\n\t       }\r\n\t    }\r\n\t    // assigning  new updated values to a and b\r\n\t    a=c;\r\n\t    b=d;\r\n\t    a1=c1;\r\n\t    b1=d1;\r\n\t}\r\n\tint ans=Integer.MAX_VALUE;\r\n\tfor(int i=0;i<k;i++){\r\n\t    ans=Math.min(matrix[0][i],ans);\r\n\t}\r\n\treturn ans;\r\n    }\r\n}\r\n"
}