{
  "code": "//Initial Template for Java\r\n\r\n/*package whatever //do not write package name here */\r\n\r\nimport java.io.*;\r\n\r\nimport java.util.*;\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\t\r\n\t\tint t=sc.nextInt();\r\n\t\t\r\n\t\twhile(t-->0)\r\n\t\t{\r\n\t\t    int n,m;\r\n\t\t    n=sc.nextInt();\r\n\t\t    m=sc.nextInt();\r\n\t\t    \r\n\t\t    int arr[]=new int[n];\r\n\t\t    int brr[]=new int[m];\r\n\t\t    \r\n\t\t    for(int i=0;i<n;i++)\r\n\t\t    {\r\n\t\t        arr[i]=sc.nextInt();\r\n\t\t    }\r\n\t\t    \r\n\t\t    for(int i=0;i<m;i++)\r\n\t\t    {\r\n\t\t        brr[i]=sc.nextInt();\r\n\t\t    }\r\n\t\t    \r\n\t\t     if(n < m)\r\n\t        System.out.println(new Solution().findMedian(arr, n, brr, m));\r\n\t         else\r\n\t        System.out.println(new Solution().findMedian(brr, m, arr, n));\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to find the median of the two arrays when they get merged.\r\n    public static int findMedian(int arr[], int n, int brr[], int m)\r\n    {\r\n        if(n>m) {\r\n            int sar[] = brr;\r\n            brr = arr;\r\n            arr = sar;\r\n            int t = n;\r\n            n = m;\r\n            m = n;\r\n        }\r\n        int lmax1, lmax2, rmin1, rmin2, si = 0, ei = n, m1, m2;\r\n        \r\n        while(si<=ei) {\r\n            m1 = si + (ei-si)/2;\r\n            m2 = (m+n+1)/2 - m1;\r\n            \r\n            lmax1 = (m1==0)?Integer.MIN_VALUE:arr[m1-1];\r\n            lmax2 = (m2==0)?Integer.MIN_VALUE:brr[m2-1];\r\n            rmin1 = (m1==n)?Integer.MAX_VALUE:arr[m1];\r\n            rmin2 = (m2==m)?Integer.MAX_VALUE:brr[m2];\r\n            \r\n            if(lmax1<=rmin2 && lmax2<=rmin1) {\r\n                if(((n+m)&1) == 1) return (lmax1>lmax2)?lmax1:lmax2;\r\n                else return (((lmax1>lmax2)?lmax1:lmax2)+((rmin1<rmin2)?rmin1:rmin2))/2;\r\n            }\r\n            else if(lmax1>rmin2) ei = m1-1;\r\n            else si = m1+1;\r\n        }\r\n        \r\n        return -1;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to find the median of the two arrays when they get merged.\r\n    public static int findMedian(int arr[], int n, int brr[], int m)\r\n    {\r\n        if(n>m) {\r\n            int sar[] = brr;\r\n            brr = arr;\r\n            arr = sar;\r\n            int t = n;\r\n            n = m;\r\n            m = n;\r\n        }\r\n        int lmax1, lmax2, rmin1, rmin2, si = 0, ei = n, m1, m2;\r\n        \r\n        while(si<=ei) {\r\n            m1 = si + (ei-si)/2;\r\n            m2 = (m+n+1)/2 - m1;\r\n            \r\n            lmax1 = (m1==0)?Integer.MIN_VALUE:arr[m1-1];\r\n            lmax2 = (m2==0)?Integer.MIN_VALUE:brr[m2-1];\r\n            rmin1 = (m1==n)?Integer.MAX_VALUE:arr[m1];\r\n            rmin2 = (m2==m)?Integer.MAX_VALUE:brr[m2];\r\n            \r\n            if(lmax1<=rmin2 && lmax2<=rmin1) {\r\n                if(((n+m)&1) == 1) return (lmax1>lmax2)?lmax1:lmax2;\r\n                else return (((lmax1>lmax2)?lmax1:lmax2)+((rmin1<rmin2)?rmin1:rmin2))/2;\r\n            }\r\n            else if(lmax1>rmin2) ei = m1-1;\r\n            else si = m1+1;\r\n        }\r\n        \r\n        return -1;\r\n    }\r\n}"
}