{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\npublic:\r\n\tbool isBipartite(int V, vector<int>adj[]){\r\n\t    vector<int> color(V);\r\n\t    queue<int> q;\r\n\t    for(int i = 0; i < V;i++) {\r\n\t        if(color[i] == 0) {\r\n\t            q.push(i);\r\n\t            color[i] = 1;\r\n\t            while(q.size()) {\r\n\t                int curr = q.front();\r\n\t                q.pop();\r\n\t                for(auto &child : adj[curr]) {\r\n\t                    if(color[child] && color[child] == color[curr]) return false;\r\n\t                    else if(color[child]) continue;\r\n\t                    q.push(child);\r\n\t                    color[child] = (color[curr] == 1 ? -1 : 1);\r\n\t                }\r\n\t            }\r\n \t        }\r\n\t    }\r\n\t    \r\n\t    return true;\r\n\t}\r\n\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n\tint tc;\r\n\tcin >> tc;\r\n\twhile(tc--){\r\n\t\tint V, E;\r\n\t\tcin >> V >> E;\r\n\t\tvector<int>adj[V];\r\n\t\tfor(int i = 0; i < E; i++){\r\n\t\t\tint u, v;\r\n\t\t\tcin >> u >> v;\r\n\t\t\tadj[u].push_back(v);\r\n\t\t\tadj[v].push_back(u);\r\n\t\t}\r\n\t\tSolution obj;\r\n\t\tbool ans = obj.isBipartite(V, adj);    \r\n\t\tif(ans)cout << \"1\\n\";\r\n\t\telse cout << \"0\\n\";  \r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\npublic:\r\n\tbool isBipartite(int V, vector<int>adj[]){\r\n\t    vector<int> color(V);\r\n\t    queue<int> q;\r\n\t    for(int i = 0; i < V;i++) {\r\n\t        if(color[i] == 0) {\r\n\t            q.push(i);\r\n\t            color[i] = 1;\r\n\t            while(q.size()) {\r\n\t                int curr = q.front();\r\n\t                q.pop();\r\n\t                for(auto &child : adj[curr]) {\r\n\t                    if(color[child] && color[child] == color[curr]) return false;\r\n\t                    else if(color[child]) continue;\r\n\t                    q.push(child);\r\n\t                    color[child] = (color[curr] == 1 ? -1 : 1);\r\n\t                }\r\n\t            }\r\n \t        }\r\n\t    }\r\n\t    \r\n\t    return true;\r\n\t}\r\n\r\n};\r\n"
}