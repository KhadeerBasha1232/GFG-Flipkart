{
  "code": "//Initial Template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{\r\n  public:\r\n   int dfs(int node, vector<int> &values, vector<int> adj[], vector<int> &vis){\r\n        vis[node]=1;\r\n        int sum=values[node-1];\r\n        for(auto it:adj[node]){\r\n            if(!vis[it]){\r\n                sum+=dfs(it,values,adj,vis);\r\n            }\r\n        }\r\n        return sum;\r\n    }\r\n    int maxNodeValue(vector<int> values, vector<vector<int>> edges, int V, int e){\r\n        //Code here\r\n        vector<int> adj[V+1];\r\n        for(int i=0; i<edges.size(); i++){\r\n            auto it=edges[i];\r\n            int u=it[0];\r\n            int v=it[1];\r\n            adj[u].push_back(v);\r\n            adj[v].push_back(u);\r\n        }\r\n        vector<int> vis(V+1,0);\r\n        int maxi=0;\r\n        for(int i=1; i<=V; i++){\r\n            if(!vis[i]){\r\n                int ans=dfs(i,values,adj,vis);\r\n                maxi=max(maxi,ans);\r\n            }\r\n        }\r\n        return maxi;\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main(){\r\n   \r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int v,e;\r\n        cin>>v>>e;\r\n        vector<int> values;\r\n        for(int i=0;i<v;i++){\r\n            int x;\r\n            cin>>x;\r\n            values.push_back(x);\r\n        }\r\n        vector<vector<int>> edges(e,vector<int>(2));\r\n        for(int i=0;i<e;i++){\r\n            int x, y;\r\n            cin>>x>>y;\r\n            edges[i][0] = x;\r\n            edges[i][1] = y;\r\n        }\r\n\r\n        Solution obj;\r\n        int ans = obj.maxNodeValue(values,edges,v,e);\r\n        cout<<ans<<endl;\r\n    }\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{\r\n  public:\r\n   int dfs(int node, vector<int> &values, vector<int> adj[], vector<int> &vis){\r\n        vis[node]=1;\r\n        int sum=values[node-1];\r\n        for(auto it:adj[node]){\r\n            if(!vis[it]){\r\n                sum+=dfs(it,values,adj,vis);\r\n            }\r\n        }\r\n        return sum;\r\n    }\r\n    int maxNodeValue(vector<int> values, vector<vector<int>> edges, int V, int e){\r\n        //Code here\r\n        vector<int> adj[V+1];\r\n        for(int i=0; i<edges.size(); i++){\r\n            auto it=edges[i];\r\n            int u=it[0];\r\n            int v=it[1];\r\n            adj[u].push_back(v);\r\n            adj[v].push_back(u);\r\n        }\r\n        vector<int> vis(V+1,0);\r\n        int maxi=0;\r\n        for(int i=1; i<=V; i++){\r\n            if(!vis[i]){\r\n                int ans=dfs(i,values,adj,vis);\r\n                maxi=max(maxi,ans);\r\n            }\r\n        }\r\n        return maxi;\r\n    }\r\n};\r\n\r\n"
}