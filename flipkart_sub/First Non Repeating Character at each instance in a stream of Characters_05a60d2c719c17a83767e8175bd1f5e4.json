{
  "code": "\r\nfrom collections import deque\r\n\r\nclass Solution:\r\n    def firstNonRepeating(self, string):\r\n        freq = [0] * 26  # Frequency array for characters (assuming only lowercase English alphabets)\r\n        queue = deque()  # Queue to maintain order of characters\r\n        \r\n        output_str = \"\"\r\n        \r\n        for char in string:\r\n            index = ord(char) - ord('a')  # Get index for current character\r\n            freq[index] += 1  # Increment frequency of current character\r\n            \r\n            queue.append(char)  # Append current character to queue\r\n            \r\n            # Find the first non-repeating character\r\n            while queue and freq[ord(queue[0]) - ord('a')] > 1:\r\n                queue.popleft()  # Remove characters with frequency > 1 from the queue\r\n            \r\n            # If queue is empty, no non-repeating character found, append 'X'\r\n            if not queue:\r\n                output_str += 'X'\r\n            else:\r\n                output_str += queue[0]\r\n        \r\n        return output_str\r\n\r\n\r\n\r\n        #Code here\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n        \r\nif __name__ == '__main__':\r\n    T=int(input())\r\n    for i in range(T):\r\n        str = input().strip()\r\n        obj = Solution()\r\n        ans = obj.firstNonRepeating(str)\r\n        print(ans)\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\nfrom collections import deque\r\n\r\nclass Solution:\r\n    def firstNonRepeating(self, string):\r\n        freq = [0] * 26  # Frequency array for characters (assuming only lowercase English alphabets)\r\n        queue = deque()  # Queue to maintain order of characters\r\n        \r\n        output_str = \"\"\r\n        \r\n        for char in string:\r\n            index = ord(char) - ord('a')  # Get index for current character\r\n            freq[index] += 1  # Increment frequency of current character\r\n            \r\n            queue.append(char)  # Append current character to queue\r\n            \r\n            # Find the first non-repeating character\r\n            while queue and freq[ord(queue[0]) - ord('a')] > 1:\r\n                queue.popleft()  # Remove characters with frequency > 1 from the queue\r\n            \r\n            # If queue is empty, no non-repeating character found, append 'X'\r\n            if not queue:\r\n                output_str += 'X'\r\n            else:\r\n                output_str += queue[0]\r\n        \r\n        return output_str\r\n\r\n\r\n\r\n        #Code here\r\n\r\n\r\n"
}