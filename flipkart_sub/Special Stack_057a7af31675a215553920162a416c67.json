{
  "code": "import java.util.Scanner;\r\nimport java.util.Stack;\r\nclass SpeStack{\r\n\tpublic static void main(String[] args){\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\tint t=sc.nextInt();\r\n\t\twhile(t-->0){\r\n\t\t\tint n=sc.nextInt();\r\n\t\t\tStack<Integer> s=new Stack<>();\r\n\t\t\tGfG g=new GfG();\r\n\t\t\twhile(!g.isEmpty(s)){\r\n\t\t\t    g.pop(s);\r\n\t\t\t}\r\n\t\t\twhile(!g.isFull(s,n)){\r\n\t\t\t\tg.push(sc.nextInt(),s);\r\n\t\t\t}\r\n\t\tSystem.out.println(g.min(s));\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n/*Complete the function(s) below*/\r\nclass GfG{\r\n\tpublic void push(int a,Stack<Integer> s)\r\n\t{\r\n\t    //add code here.\r\n\t    s.push(a);\r\n\t}\r\n\tpublic int pop(Stack<Integer> s)\r\n        {\r\n            //add code here.\r\n            return s.pop();\r\n\t}\r\n\tpublic int min(Stack<Integer> s)\r\n        {\r\n           //add code here.\r\n           int min = Integer.MAX_VALUE;\r\n           while(!s.isEmpty()){\r\n               min=min>s.peek() ? s.peek() : min;\r\n               s.pop();\r\n           }\r\n           return min;\r\n\t}\r\n\tpublic boolean isFull(Stack<Integer>s, int n)\r\n        {\r\n           //add code here.\r\n           return s.size()==n;\r\n\t}\r\n\tpublic boolean isEmpty(Stack<Integer>s)\r\n        {\r\n           //add code here.\r\n           return s.isEmpty();\r\n\t}\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*Complete the function(s) below*/\r\nclass GfG{\r\n\tpublic void push(int a,Stack<Integer> s)\r\n\t{\r\n\t    //add code here.\r\n\t    s.push(a);\r\n\t}\r\n\tpublic int pop(Stack<Integer> s)\r\n        {\r\n            //add code here.\r\n            return s.pop();\r\n\t}\r\n\tpublic int min(Stack<Integer> s)\r\n        {\r\n           //add code here.\r\n           int min = Integer.MAX_VALUE;\r\n           while(!s.isEmpty()){\r\n               min=min>s.peek() ? s.peek() : min;\r\n               s.pop();\r\n           }\r\n           return min;\r\n\t}\r\n\tpublic boolean isFull(Stack<Integer>s, int n)\r\n        {\r\n           //add code here.\r\n           return s.size()==n;\r\n\t}\r\n\tpublic boolean isEmpty(Stack<Integer>s)\r\n        {\r\n           //add code here.\r\n           return s.isEmpty();\r\n\t}\r\n}"
}