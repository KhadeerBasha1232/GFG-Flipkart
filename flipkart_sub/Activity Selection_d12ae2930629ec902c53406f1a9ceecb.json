{
  "code": "import java.io.*; \r\nimport java.util.*; \r\nimport java.lang.*;\r\n\r\nclass Main\r\n{\r\n    public static void main (String[] args) throws IOException  \r\n    {\r\n        \r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t//testcases\r\n\t\tint t = Integer.parseInt(br.readLine().trim());\r\n\t\t\r\n\t\twhile(t-- > 0)\r\n\t\t{\r\n\t\t    String inputLine[] = br.readLine().trim().split(\" \");\r\n\t\t    //size of array\r\n\t\t    int n = Integer.parseInt(inputLine[0]);\r\n\t\t    int start[] = new int[n];\r\n\t\t    int end[] = new int[n];\r\n\t\t    \r\n\t\t    //adding elements to arrays start and end\r\n\t\t    inputLine = br.readLine().trim().split(\" \");\r\n\t\t    for(int i = 0; i < n; i++)\r\n\t\t     start[i] = Integer.parseInt(inputLine[i]);\r\n\t\t    \r\n\t\t    inputLine = br.readLine().trim().split(\" \");\r\n\t\t    for(int i= 0; i < n; i++)\r\n\t\t      end[i] = Integer.parseInt(inputLine[i]);\r\n\t\t    \r\n\t\t    //function call\r\n\t\t    System.out.println(new Solution().activitySelection(start, end, n));\r\n\t\t}\r\n    }\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the maximum number of activities that can\r\n    //be performed by a single person.\r\n    public static int activitySelection(int start[], int end[], int n)\r\n    {\r\n        // add your code here\r\n        int table[][] = new int[n][2];\r\n        \r\n        for(int i=0; i<start.length; i++){\r\n            table[i][0] = start[i];\r\n            table[i][1] = end[i];\r\n        }\r\n        Arrays.sort(table, Comparator.comparingInt(a -> a[1]));\r\n        \r\n        int count = 1;\r\n        int lastEnd = table[0][1];\r\n        \r\n        for(int i=1; i<table.length; i++){\r\n            if(table[i][0] > lastEnd){\r\n                count++;\r\n                lastEnd = table[i][1];\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\nclass Solution\r\n{\r\n    //Function to find the maximum number of activities that can\r\n    //be performed by a single person.\r\n    public static int activitySelection(int start[], int end[], int n)\r\n    {\r\n        // add your code here\r\n        int table[][] = new int[n][2];\r\n        \r\n        for(int i=0; i<start.length; i++){\r\n            table[i][0] = start[i];\r\n            table[i][1] = end[i];\r\n        }\r\n        Arrays.sort(table, Comparator.comparingInt(a -> a[1]));\r\n        \r\n        int count = 1;\r\n        int lastEnd = table[0][1];\r\n        \r\n        for(int i=1; i<table.length; i++){\r\n            if(table[i][0] > lastEnd){\r\n                count++;\r\n                lastEnd = table[i][1];\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}"
}