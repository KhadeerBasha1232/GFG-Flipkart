{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\n  public:\r\n  \r\n  long long int f(int coins[], int n, int sum, vector<vector<long long int>>& dp) {\r\n      if(n==0) {\r\n          if(sum%coins[0]==0) return 1;\r\n          else  return 0;\r\n      }\r\n      if(dp[n][sum]!=-1)    return dp[n][sum];\r\n      long long int nontake=f(coins,n-1,sum,dp);\r\n      long long int take=0;\r\n      if(coins[n]<=sum)\r\n        take=f(coins,n,sum-coins[n],dp);\r\n        \r\n    return dp[n][sum]=take+nontake;\r\n  }\r\n  \r\n  long long int f1(int coins[], int n, int sum) {\r\n     vector<vector<long long int>> dp(n,vector<long long int> (sum+1,0)); \r\n     \r\n     for(int i=0;i<=sum;i++) {\r\n         if(i%coins[0]==0)\r\n            dp[0][i]=1;\r\n     }\r\n     \r\n     for(int i=1;i<n;i++) {\r\n         for(int j=0;j<=sum;j++) {\r\n             long long int nontake=dp[i-1][j];\r\n             long long int take=0;\r\n             if(j>=coins[i])\r\n                take=dp[i][j-coins[i]];\r\n            dp[i][j]=take+nontake;\r\n         }\r\n     }\r\n     return dp[n-1][sum];\r\n     \r\n  }\r\n  \r\n    long long int f2(int coins[], int n, int sum) {\r\n     vector<long long int> cur(sum+1,0),prev(sum+1,0);\r\n     \r\n     \r\n     \r\n     for(int i=0;i<=sum;i++) {\r\n         if(i%coins[0]==0)\r\n            prev[i]=1;\r\n     }\r\n     \r\n     for(int i=1;i<n;i++) {\r\n         \r\n         for(int j=0;j<=sum;j++) {\r\n             long long int nontake=prev[j];\r\n             long long int take=0;\r\n             if(j>=coins[i])\r\n                take=cur[j-coins[i]];\r\n            cur[j]=take+nontake;\r\n         }\r\n         prev=cur;\r\n     }\r\n     return prev[sum];\r\n     \r\n  }\r\n  \r\n    long long int count(int coins[], int N, int sum) {\r\n\r\n        // code here.\r\n        // vector<vector<long long int>> dp(N,vector<long long int> (sum+1,-1));\r\n        // return f(coins,N-1,sum,dp);\r\n        \r\n        //return f1(coins,N,sum);\r\n        return f2(coins,N,sum);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int sum, N;\r\n        cin >> sum >> N;\r\n        int coins[N];\r\n        for (int i = 0; i < N; i++) cin >> coins[i];\r\n        Solution ob;\r\n        cout << ob.count(coins, N, sum) << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\n  public:\r\n  \r\n  long long int f(int coins[], int n, int sum, vector<vector<long long int>>& dp) {\r\n      if(n==0) {\r\n          if(sum%coins[0]==0) return 1;\r\n          else  return 0;\r\n      }\r\n      if(dp[n][sum]!=-1)    return dp[n][sum];\r\n      long long int nontake=f(coins,n-1,sum,dp);\r\n      long long int take=0;\r\n      if(coins[n]<=sum)\r\n        take=f(coins,n,sum-coins[n],dp);\r\n        \r\n    return dp[n][sum]=take+nontake;\r\n  }\r\n  \r\n  long long int f1(int coins[], int n, int sum) {\r\n     vector<vector<long long int>> dp(n,vector<long long int> (sum+1,0)); \r\n     \r\n     for(int i=0;i<=sum;i++) {\r\n         if(i%coins[0]==0)\r\n            dp[0][i]=1;\r\n     }\r\n     \r\n     for(int i=1;i<n;i++) {\r\n         for(int j=0;j<=sum;j++) {\r\n             long long int nontake=dp[i-1][j];\r\n             long long int take=0;\r\n             if(j>=coins[i])\r\n                take=dp[i][j-coins[i]];\r\n            dp[i][j]=take+nontake;\r\n         }\r\n     }\r\n     return dp[n-1][sum];\r\n     \r\n  }\r\n  \r\n    long long int f2(int coins[], int n, int sum) {\r\n     vector<long long int> cur(sum+1,0),prev(sum+1,0);\r\n     \r\n     \r\n     \r\n     for(int i=0;i<=sum;i++) {\r\n         if(i%coins[0]==0)\r\n            prev[i]=1;\r\n     }\r\n     \r\n     for(int i=1;i<n;i++) {\r\n         \r\n         for(int j=0;j<=sum;j++) {\r\n             long long int nontake=prev[j];\r\n             long long int take=0;\r\n             if(j>=coins[i])\r\n                take=cur[j-coins[i]];\r\n            cur[j]=take+nontake;\r\n         }\r\n         prev=cur;\r\n     }\r\n     return prev[sum];\r\n     \r\n  }\r\n  \r\n    long long int count(int coins[], int N, int sum) {\r\n\r\n        // code here.\r\n        // vector<vector<long long int>> dp(N,vector<long long int> (sum+1,-1));\r\n        // return f(coins,N-1,sum,dp);\r\n        \r\n        //return f1(coins,N,sum);\r\n        return f2(coins,N,sum);\r\n    }\r\n};\r\n"
}