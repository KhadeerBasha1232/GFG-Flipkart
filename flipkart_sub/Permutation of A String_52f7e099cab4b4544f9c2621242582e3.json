{
  "code": "//Initial Template for C++\r\n\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\n\r\nclass Solution{\r\n  public:\r\n    string subStr(string& s, string& t){\r\n        //Code Here\r\n        string temp = t;\r\n        next_permutation(t.begin(),t.end());\r\n        auto ind = s.find(t);\r\n        if (ind == string::npos) return \"NO\";\r\n        while(t != temp){\r\n            auto ind = s.find(t);\r\n            if (ind == string::npos) return \"NO\";\r\n            next_permutation(t.begin(),t.end());\r\n        }\r\n        return \"YES\";\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int test;\r\n    cin>>test;\r\n    while(test--){\r\n        string s,t;\r\n        cin>>s>>t;\r\n        Solution ob;\r\n        string ans = ob.subStr(s,t);\r\n        \r\n        cout<<ans<<endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\n\r\nclass Solution{\r\n  public:\r\n    string subStr(string& s, string& t){\r\n        //Code Here\r\n        string temp = t;\r\n        next_permutation(t.begin(),t.end());\r\n        auto ind = s.find(t);\r\n        if (ind == string::npos) return \"NO\";\r\n        while(t != temp){\r\n            auto ind = s.find(t);\r\n            if (ind == string::npos) return \"NO\";\r\n            next_permutation(t.begin(),t.end());\r\n        }\r\n        return \"YES\";\r\n    }\r\n};\r\n"
}