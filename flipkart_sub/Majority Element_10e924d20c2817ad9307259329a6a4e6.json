{
  "code": "\r\nclass Solution:\r\n    def majorityElement(self, A, N):\r\n        count = 0\r\n        candidate = None\r\n\r\n        for num in A:\r\n            if count == 0:\r\n                candidate = num\r\n            count += 1 if num == candidate else -1\r\n\r\n        # Now 'candidate' holds the potential majority element, but we need to verify if it appears more than N/2 times.\r\n        count_candidate = A.count(candidate)\r\n        return candidate if count_candidate > N/2 else -1    \r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\nimport math\r\n\r\nfrom sys import stdin\r\n\r\n\r\ndef main():\r\n        T=int(input())\r\n        while(T>0):\r\n            \r\n            N=int(input())\r\n\r\n            A=[int(x) for x in input().strip().split()]\r\n            \r\n            \r\n            obj = Solution()\r\n            print(obj.majorityElement(A,N))\r\n            \r\n            T-=1\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function template for Python 3\r\n\r\nclass Solution:\r\n    def majorityElement(self, A, N):\r\n        count = 0\r\n        candidate = None\r\n\r\n        for num in A:\r\n            if count == 0:\r\n                candidate = num\r\n            count += 1 if num == candidate else -1\r\n\r\n        # Now 'candidate' holds the potential majority element, but we need to verify if it appears more than N/2 times.\r\n        count_candidate = A.count(candidate)\r\n        return candidate if count_candidate > N/2 else -1    \r\n\r\n"
}