{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int offerings(int N, int arr[]){\r\n       // code here\r\n       vector<int>left(N),right(N);\r\n       left[0]=1;\r\n       for(int i=0;i<N;i++){\r\n           if(arr[i]>arr[i-1]){\r\n               left[i]=1+left[i-1];\r\n           }\r\n           else{\r\n               left[i]=1;\r\n           }\r\n       }\r\n       right[N-1]=1;\r\n       for(int i=N-2;i>=0;i--){\r\n           if(arr[i]>arr[i+1]){\r\n               right[i]=1+right[i+1];\r\n           }\r\n           else{\r\n               right[i]=1;\r\n           }\r\n       }\r\n       int ans=0;\r\n       for(int i=0;i<N;i++){\r\n           ans+=max(left[i],right[i]);\r\n       }\r\n       return ans;\r\n   }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N;\r\n        cin>>N;\r\n        int arr[N];\r\n        for(int i = 0;i < N;i++)\r\n            cin>>arr[i];\r\n        \r\n        Solution ob;\r\n        cout<<ob.offerings(N, arr)<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    int offerings(int N, int arr[]){\r\n       // code here\r\n       vector<int>left(N),right(N);\r\n       left[0]=1;\r\n       for(int i=0;i<N;i++){\r\n           if(arr[i]>arr[i-1]){\r\n               left[i]=1+left[i-1];\r\n           }\r\n           else{\r\n               left[i]=1;\r\n           }\r\n       }\r\n       right[N-1]=1;\r\n       for(int i=N-2;i>=0;i--){\r\n           if(arr[i]>arr[i+1]){\r\n               right[i]=1+right[i+1];\r\n           }\r\n           else{\r\n               right[i]=1;\r\n           }\r\n       }\r\n       int ans=0;\r\n       for(int i=0;i<N;i++){\r\n           ans+=max(left[i],right[i]);\r\n       }\r\n       return ans;\r\n   }\r\n};\r\n"
}