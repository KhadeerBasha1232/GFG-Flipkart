{
  "code": "import java.util.Scanner;\r\nimport java.util.*;\r\nimport java.io.*;\r\n\r\nclass Node\r\n{\r\n\tint data;\r\n\tNode next;\r\n\tNode bottom;\r\n\t\r\n\tNode(int d)\r\n\t{\r\n\t\tdata = d;\r\n\t\tnext = null;\r\n\t\tbottom = null;\r\n\t}\r\n}\r\n\r\n\r\nclass Flatttening_A_LinkedList\r\n{\t\r\n    Node head;\r\n\t\r\n\tvoid printList(Node node)\r\n    {\r\n        //Node temp = head;\r\n        while (node != null)\r\n        {\r\n            System.out.print(node.data + \" \");\r\n            node =node.bottom;\r\n        }\r\n        System.out.println();\r\n    }\r\n\tpublic  static void main(String args[])\r\n\t{\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint t = sc.nextInt();\r\n\t\tFlatttening_A_LinkedList list = new Flatttening_A_LinkedList();\r\n\t\twhile(t>0)\r\n\t\t{\r\n\t\t\tint N = sc.nextInt();\r\n\t\t\tint arr[] = new int[N];\r\n\t\t\tfor(int i=0;i<N;i++)\r\n\t\t\t\tarr[i] = sc.nextInt();\r\n\t\t\t\r\n\t\t\tNode temp = null;\r\n\t\t\tNode tempB = null;\r\n\t\t\tNode pre = null;\r\n\t\t\tNode preB = null;\t\r\n\t\t\tint flag=1;\r\n\t\t\tint flag1=1;\r\n\t\t\tfor(int i=0; i<N;i++)\r\n\t\t\t{\r\n\t\t\t\tint m = arr[i];\r\n\t\t\t\tm--;\r\n\t\t\t\tint a1 = sc.nextInt();\r\n\t\t\t\ttemp = new Node(a1);\r\n\t\t\t\tif(flag == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.head = temp;\r\n\t\t\t\t\tpre = temp;\r\n\t\t\t\t\tflag = 0;\r\n\t\t\t\t\tflag1 = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tpre.next = temp;\r\n\t\t\t\t\tpre = temp;\r\n\t\t\t\t\tflag1 = 1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor(int j=0;j<m;j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint a = sc.nextInt();\r\n\t\t\t\t\ttempB = new Node(a);\r\n\t\t\t\t\tif(flag1 == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttemp.bottom = tempB;\r\n\t\t\t\t\t\tpreB = tempB;\r\n\t\t\t\t\t\tflag1 = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpreB.bottom = tempB;\r\n\t\t\t\t\t\tpreB = tempB;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t//list.printList();\r\n\t\t\tGfG g = new GfG();\r\n\t\t\tNode root = g.flatten(list.head);\r\n\t\t\tlist.printList(root);\r\n\t\t\r\n\t\tt--;\r\n\t\t}\r\n\t}\t\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n/*Node class  used in the program\r\nclass Node\r\n{\r\n\tint data;\r\n\tNode next;\r\n\tNode bottom;\r\n\t\r\n\tNode(int d)\r\n\t{\r\n\t\tdata = d;\r\n\t\tnext = null;\r\n\t\tbottom = null;\r\n\t}\r\n}\r\n*/\r\n/*  Function which returns the  root of \r\n    the flattened linked list. */\r\nclass GfG\r\n{\r\n    Node flatten(Node root)\r\n    {\r\n        if(root==null||root.next==null){\r\n            return root;\r\n        }\r\n        root.next=flatten(root.next);\r\n        root=flating(root,root.next);\r\n        return root;\r\n  // Your code here\r\n    }\r\n    static Node flating(Node c,Node d){\r\n        if(c==null)\r\n        return d;\r\n        if(d==null)\r\n        return c ;\r\n        Node ans;\r\n        if(c.data<d.data){\r\n            ans=c;\r\n            ans.bottom=flating(c.bottom,d);\r\n        }\r\n        else{\r\n            ans=d;\r\n            ans.bottom=flating(c,d.bottom);\r\n            \r\n        }\r\n        return ans;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*Node class  used in the program\r\nclass Node\r\n{\r\n\tint data;\r\n\tNode next;\r\n\tNode bottom;\r\n\t\r\n\tNode(int d)\r\n\t{\r\n\t\tdata = d;\r\n\t\tnext = null;\r\n\t\tbottom = null;\r\n\t}\r\n}\r\n*/\r\n/*  Function which returns the  root of \r\n    the flattened linked list. */\r\nclass GfG\r\n{\r\n    Node flatten(Node root)\r\n    {\r\n        if(root==null||root.next==null){\r\n            return root;\r\n        }\r\n        root.next=flatten(root.next);\r\n        root=flating(root,root.next);\r\n        return root;\r\n  // Your code here\r\n    }\r\n    static Node flating(Node c,Node d){\r\n        if(c==null)\r\n        return d;\r\n        if(d==null)\r\n        return c ;\r\n        Node ans;\r\n        if(c.data<d.data){\r\n            ans=c;\r\n            ans.bottom=flating(c.bottom,d);\r\n        }\r\n        else{\r\n            ans=d;\r\n            ans.bottom=flating(c,d.bottom);\r\n            \r\n        }\r\n        return ans;\r\n    }\r\n}"
}