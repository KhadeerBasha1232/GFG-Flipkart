{
  "code": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution{\r\n\r\n    // Function to find the trapped water between the blocks.\r\n    public:\r\n    long long trappingWater(int height[], int n){\r\n        vector<int> gtr(n);\r\n        gtr[n-1] = 0;\r\n\r\n        int maxi = height[n-1];\r\n        for(int i=n-2; i>=0; i--){\r\n            gtr[i] = maxi;\r\n            maxi = max(maxi, height[i]);\r\n        }\r\n\r\n        vector<int> gtl(n);\r\n        gtl[0] = 0;\r\n\r\n        maxi = height[0];\r\n        for(int i=1; i<n; i++){\r\n            gtl[i] = maxi;\r\n            maxi = max(maxi, height[i]);\r\n        }\r\n\r\n        vector<int> smallestgreater(n);\r\n        for(int i=0; i<n; i++){\r\n            smallestgreater[i] = min(gtl[i], gtr[i]);\r\n        }\r\n\r\n        vector<int> wateroneachbuilding(n);\r\n        for(int i=0; i<n; i++){\r\n            int x = smallestgreater[i] - height[i];\r\n            if(x < 0){\r\n                wateroneachbuilding[i] = 0;\r\n            } else {\r\n                wateroneachbuilding[i] = x;\r\n            }\r\n        }\r\n\r\n        long long ans = 0;\r\n        for(int i=0; i<n; i++){\r\n            ans += wateroneachbuilding[i];\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    \r\n    int t;\r\n    //testcases\r\n    cin >> t;\r\n    \r\n    while(t--){\r\n        int n;\r\n        \r\n        //size of array\r\n        cin >> n;\r\n        \r\n        int a[n];\r\n        \r\n        //adding elements to the array\r\n        for(int i =0;i<n;i++){\r\n            cin >> a[i];            \r\n        }\r\n        Solution obj;\r\n        //calling trappingWater() function\r\n        cout << obj.trappingWater(a, n) << endl;\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution{\r\n\r\n    // Function to find the trapped water between the blocks.\r\n    public:\r\n    long long trappingWater(int height[], int n){\r\n        vector<int> gtr(n);\r\n        gtr[n-1] = 0;\r\n\r\n        int maxi = height[n-1];\r\n        for(int i=n-2; i>=0; i--){\r\n            gtr[i] = maxi;\r\n            maxi = max(maxi, height[i]);\r\n        }\r\n\r\n        vector<int> gtl(n);\r\n        gtl[0] = 0;\r\n\r\n        maxi = height[0];\r\n        for(int i=1; i<n; i++){\r\n            gtl[i] = maxi;\r\n            maxi = max(maxi, height[i]);\r\n        }\r\n\r\n        vector<int> smallestgreater(n);\r\n        for(int i=0; i<n; i++){\r\n            smallestgreater[i] = min(gtl[i], gtr[i]);\r\n        }\r\n\r\n        vector<int> wateroneachbuilding(n);\r\n        for(int i=0; i<n; i++){\r\n            int x = smallestgreater[i] - height[i];\r\n            if(x < 0){\r\n                wateroneachbuilding[i] = 0;\r\n            } else {\r\n                wateroneachbuilding[i] = x;\r\n            }\r\n        }\r\n\r\n        long long ans = 0;\r\n        for(int i=0; i<n; i++){\r\n            ans += wateroneachbuilding[i];\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n"
}