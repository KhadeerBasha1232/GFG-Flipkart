{
  "code": "//Initial template code for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    Node* next;\r\n    \r\n    Node(int val)\r\n    {\r\n        data = val;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\nvoid loopHere(Node* head, Node* tail, int position)\r\n{\r\n    if(position==0) return;\r\n    \r\n    Node* walk = head;\r\n    for(int i=1; i<position; i++)\r\n        walk = walk->next;\r\n    tail->next = walk;\r\n}\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n\r\n/*\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node *next;\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n*/\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to check if the linked list has a loop.\r\n    bool detectLoop(Node* head)\r\n    {\r\n        // your code here\r\n        while(head!=NULL)\r\n        {\r\n            if(head->data==-1) \r\n              return true;\r\n              \r\n            head->data=-1;\r\n            head=head->next;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n, num;\r\n        cin>>n;\r\n        \r\n        Node *head, *tail;\r\n        cin>> num;\r\n        head = tail = new Node(num);\r\n        \r\n        for(int i=0 ; i<n-1 ; i++)\r\n        {\r\n            cin>> num;\r\n            tail->next = new Node(num);\r\n            tail = tail->next;\r\n        }\r\n        \r\n        int pos;\r\n        cin>> pos;\r\n        loopHere(head,tail,pos);\r\n        \r\n        Solution ob;\r\n        if(ob.detectLoop(head) )\r\n            cout<< \"True\\n\";\r\n        else\r\n            cout<< \"False\\n\";\r\n    }\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n\r\n/*\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node *next;\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n*/\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to check if the linked list has a loop.\r\n    bool detectLoop(Node* head)\r\n    {\r\n        // your code here\r\n        while(head!=NULL)\r\n        {\r\n            if(head->data==-1) \r\n              return true;\r\n              \r\n            head->data=-1;\r\n            head=head->next;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\n"
}