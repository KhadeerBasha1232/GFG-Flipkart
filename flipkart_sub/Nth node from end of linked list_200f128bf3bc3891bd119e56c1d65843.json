{
  "code": "'''\r\n    Your task is to return the data stored in\r\n    the nth node from end of linked list.\r\n    \r\n    Function Arguments: head (reference to head of the list), n (pos of node from end)\r\n    Return Type: Integer or -1 if no such node exits.\r\n\r\n    {\r\n        # Node Class\r\n        class Node:\r\n            def __init__(self, data):   # data -> value stored in node\r\n                self.data = data\r\n                self.next = None\r\n    }\r\n'''\r\n#Function to find the data of nth node from the end of a linked list\r\ndef getNthFromLast(head,n):\r\n    #code here\r\n    if head == None:\r\n        return -1\r\n    first = head\r\n    for i in range(n):\r\n        if first == None:\r\n            return -1\r\n        first = first.next\r\n    second = head\r\n    while first!=None:\r\n        first = first.next\r\n        second = second.next\r\n    return second.data\r\n    \r\n    \r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\n\r\nimport atexit\r\nimport io\r\nimport sys\r\n\r\n_INPUT_LINES = sys.stdin.read().splitlines()\r\ninput = iter(_INPUT_LINES).__next__\r\n_OUTPUT_BUFFER = io.StringIO()\r\nsys.stdout = _OUTPUT_BUFFER\r\n\r\n@atexit.register\r\n\r\ndef write():\r\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\r\n    \r\n# Node Class\r\nclass Node:\r\n    def __init__(self, data):   # data -> value stored in node\r\n        self.data = data\r\n        self.next = None\r\n\r\n# Linked List Class\r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.head = None\r\n        self.tail = None\r\n\r\n    # creates a new node with given value and appends it at the end of the linked list\r\n    def append(self, new_value):\r\n        new_node = Node(new_value)\r\n        if self.head is None:\r\n            self.head = new_node\r\n            self.tail = new_node\r\n            return\r\n        self.tail.next = new_node\r\n        self.tail = new_node\r\n\r\nif __name__ == '__main__':\r\n    t=int(input())\r\n    for cases in range(t):\r\n        n,nth_node = map(int, input().strip().split())\r\n        a = LinkedList() # create a new linked list 'a'.\r\n        nodes_a = list(map(int, input().strip().split()))\r\n        for x in nodes_a:\r\n            a.append(x)  # add to the end of the list\r\n        print(getNthFromLast(a.head,nth_node))\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n'''\r\n    Your task is to return the data stored in\r\n    the nth node from end of linked list.\r\n    \r\n    Function Arguments: head (reference to head of the list), n (pos of node from end)\r\n    Return Type: Integer or -1 if no such node exits.\r\n\r\n    {\r\n        # Node Class\r\n        class Node:\r\n            def __init__(self, data):   # data -> value stored in node\r\n                self.data = data\r\n                self.next = None\r\n    }\r\n'''\r\n#Function to find the data of nth node from the end of a linked list\r\ndef getNthFromLast(head,n):\r\n    #code here\r\n    if head == None:\r\n        return -1\r\n    first = head\r\n    for i in range(n):\r\n        if first == None:\r\n            return -1\r\n        first = first.next\r\n    second = head\r\n    while first!=None:\r\n        first = first.next\r\n        second = second.next\r\n    return second.data\r\n    \r\n    \r\n\r\n"
}