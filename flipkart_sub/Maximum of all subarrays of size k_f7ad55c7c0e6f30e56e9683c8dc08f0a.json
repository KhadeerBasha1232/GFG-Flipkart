{
  "code": "//Initial Template for javascript\r\n'use strict';\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding('utf-8');\r\n\r\nlet inputString = '';\r\nlet currentLine = 0;\r\n\r\nprocess.stdin.on('data', inputStdin => {\r\n    inputString += inputStdin;\r\n});\r\n\r\nprocess.stdin.on('end', _ => {\r\n    inputString = inputString.trim().split('\\n').map(string => {\r\n        return string.trim();\r\n    });\r\n    \r\n    main();    \r\n});\r\n\r\nfunction readLine() {\r\n    return inputString[currentLine++];\r\n}\r\n\r\n\r\n\r\nfunction main() {\r\n    let t = parseInt(readLine());\r\n    for(let i=0;i<t;i++)\r\n    {\r\n        let input_line = readLine().split(\" \");\r\n        let n = parseInt(input_line[0]);\r\n        let k = parseInt(input_line[1]);\r\n        let a = new Array(n);\r\n        input_line = readLine().split(\" \");\r\n        for(let i=0;i<n;i++)\r\n            a[i] = parseInt(input_line[i]);\r\n            \r\n        let obj = new Solution();\r\n        let ans = obj.max_of_subarrays(a,n,k);\r\n        let s=\"\";\r\n        for(let i=0;i<ans.length;i++)\r\n        {\r\n            if(ans[i]==-0)\r\n            s+=\"0\";\r\n            else \r\n            s+=ans[i];\r\n            s+=\" \";\r\n        }\r\n        console.log(s);\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for javascript\r\n\r\n/**\r\n * @param {number[]} arr\r\n * @param {number} n\r\n * @param {number} k\r\n * @returns {number[]}\r\n*/\r\nclass Solution \r\n{\r\n    //Function to find maximum of each subarray of size k.\r\n\tmax_of_subarrays(arr, n, k)\r\n\t{\r\n\t   let i=0;\r\n    let j = k-1;\r\n    let result =[];\r\n    while(j<arr.length){\r\n         if(arr.length ===k){\r\n            return result.push(Math.max(...arr));\r\n        }\r\n     result.push(Math.max(...arr.slice(i,j+1)));\r\n     i++;\r\n     j++;\r\n    }\r\n    // code here\r\n    return result;\r\n    }\r\n}\r\n",
  "status": "0",
  "language": "javascript",
  "user_code": "\r\n\r\n//User function Template for javascript\r\n\r\n/**\r\n * @param {number[]} arr\r\n * @param {number} n\r\n * @param {number} k\r\n * @returns {number[]}\r\n*/\r\nclass Solution \r\n{\r\n    //Function to find maximum of each subarray of size k.\r\n\tmax_of_subarrays(arr, n, k)\r\n\t{\r\n\t   let i=0;\r\n    let j = k-1;\r\n    let result =[];\r\n    while(j<arr.length){\r\n         if(arr.length ===k){\r\n            return result.push(Math.max(...arr));\r\n        }\r\n     result.push(Math.max(...arr.slice(i,j+1)));\r\n     i++;\r\n     j++;\r\n    }\r\n    // code here\r\n    return result;\r\n    }\r\n}\r\n"
}