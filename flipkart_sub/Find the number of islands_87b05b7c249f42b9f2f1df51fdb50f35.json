{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution {\r\n    private:\r\n    \r\n    bool isvalid(int x,int y,int N,int M)\r\n    {\r\n        return (x<N && x>=0 && y<M && y>=0);\r\n    }\r\n    \r\n void countisland(int x,int y,vector<vector<char>>& grid,vector<vector<int>>&visit,\r\n    int N,int M)\r\n    {\r\n        if(visit[x][y]==1)\r\n         return;\r\n         \r\n         visit[x][y]=1;\r\n         vector<int> row={-1,0,1,0,-1,-1,1,1};\r\n         vector<int> col={0,1,0,-1,-1,1,1,-1};\r\n         \r\n         for(auto i=0;i<8;i++)\r\n         {\r\n             int xc=x+row[i];\r\n             int yc=y+col[i];\r\n             if(isvalid(xc,yc,N,M) && grid[xc][yc]=='1')\r\n             {\r\n                 countisland(xc,yc,grid,visit,N,M);\r\n             }\r\n         }\r\n        \r\n    }\r\n  public:\r\n    // Function to find the number of islands.\r\n    int numIslands(vector<vector<char>>& grid) {\r\n        \r\n        int N=grid.size();\r\n        int M=grid[0].size();\r\n        vector<vector<int>>visit(N,vector<int>(M,0));\r\n        int count=0;\r\n        \r\n        for(auto i=0;i<N;i++)\r\n        {\r\n            for(auto j=0;j<M;j++)\r\n            {\r\n                //  cout<<\" we are here i n j \"<<i<<\" \"<<j<<endl;\r\n                //  cout<<\" grid [i][j] \"<<grid[i][j]<<endl;\r\n                if(visit[i][j]==0 && grid[i][j]=='1')\r\n                 {\r\n                     countisland(i,j,grid,visit,N,M);\r\n                     count++;\r\n                 }     \r\n            }\r\n        }\r\n        \r\n        return count;\r\n        // Code here\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int tc;\r\n    cin >> tc;\r\n    while (tc--) {\r\n        int n, m;\r\n        cin >> n >> m;\r\n        vector<vector<char>> grid(n, vector<char>(m, '#'));\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = 0; j < m; j++) {\r\n                cin >> grid[i][j];\r\n            }\r\n        }\r\n        Solution obj;\r\n        int ans = obj.numIslands(grid);\r\n        cout << ans << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution {\r\n    private:\r\n    \r\n    bool isvalid(int x,int y,int N,int M)\r\n    {\r\n        return (x<N && x>=0 && y<M && y>=0);\r\n    }\r\n    \r\n void countisland(int x,int y,vector<vector<char>>& grid,vector<vector<int>>&visit,\r\n    int N,int M)\r\n    {\r\n        if(visit[x][y]==1)\r\n         return;\r\n         \r\n         visit[x][y]=1;\r\n         vector<int> row={-1,0,1,0,-1,-1,1,1};\r\n         vector<int> col={0,1,0,-1,-1,1,1,-1};\r\n         \r\n         for(auto i=0;i<8;i++)\r\n         {\r\n             int xc=x+row[i];\r\n             int yc=y+col[i];\r\n             if(isvalid(xc,yc,N,M) && grid[xc][yc]=='1')\r\n             {\r\n                 countisland(xc,yc,grid,visit,N,M);\r\n             }\r\n         }\r\n        \r\n    }\r\n  public:\r\n    // Function to find the number of islands.\r\n    int numIslands(vector<vector<char>>& grid) {\r\n        \r\n        int N=grid.size();\r\n        int M=grid[0].size();\r\n        vector<vector<int>>visit(N,vector<int>(M,0));\r\n        int count=0;\r\n        \r\n        for(auto i=0;i<N;i++)\r\n        {\r\n            for(auto j=0;j<M;j++)\r\n            {\r\n                //  cout<<\" we are here i n j \"<<i<<\" \"<<j<<endl;\r\n                //  cout<<\" grid [i][j] \"<<grid[i][j]<<endl;\r\n                if(visit[i][j]==0 && grid[i][j]=='1')\r\n                 {\r\n                     countisland(i,j,grid,visit,N,M);\r\n                     count++;\r\n                 }     \r\n            }\r\n        }\r\n        \r\n        return count;\r\n        // Code here\r\n    }\r\n};\r\n"
}