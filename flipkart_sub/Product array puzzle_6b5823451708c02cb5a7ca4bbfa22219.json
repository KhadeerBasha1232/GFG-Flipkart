{
  "code": "//Initial template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n// User function template for C++\r\nclass Solution {\r\npublic:\r\n    // nums: given vector\r\n    // return the Product vector P that holds the product except self at each index\r\n    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {\r\n\r\n        // Initialize two vectors to store products to the left and right of each element\r\n        vector<long long int> leftProducts(n, 1);\r\n        vector<long long int> rightProducts(n, 1);\r\n\r\n        // Calculate products to the left of each element\r\n        long long int leftProduct = 1;\r\n        for (int i = 1; i < n; i++) {\r\n            leftProduct *= nums[i - 1];\r\n            leftProducts[i] = leftProduct;\r\n        }\r\n\r\n        // Calculate products to the right of each element\r\n        long long int rightProduct = 1;\r\n        for (int i = n - 2; i >= 0; i--) {\r\n            rightProduct *= nums[i + 1];\r\n            rightProducts[i] = rightProduct;\r\n        }\r\n\r\n        // Calculate the final product array by multiplying left and right products\r\n        vector<long long int> ans(n);\r\n        for (int i = 0; i < n; i++) {\r\n            ans[i] = leftProducts[i] * rightProducts[i];\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n {\r\n    int t;  // number of test cases\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;  // size of the array\r\n        cin>>n;\r\n        vector<long long int> arr(n),vec(n);\r\n        \r\n        for(int i=0;i<n;i++)    // input the array\r\n        {\r\n            cin>>arr[i];\r\n        }\r\n        Solution obj;\r\n        vec = obj.productExceptSelf(arr,n);   // function call\r\n        \r\n        for(int i=0;i<n;i++)    // print the output\r\n        {\r\n            cout << vec[i] << \" \";\r\n        }\r\n        cout<<endl;\r\n    }\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n// User function template for C++\r\nclass Solution {\r\npublic:\r\n    // nums: given vector\r\n    // return the Product vector P that holds the product except self at each index\r\n    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {\r\n\r\n        // Initialize two vectors to store products to the left and right of each element\r\n        vector<long long int> leftProducts(n, 1);\r\n        vector<long long int> rightProducts(n, 1);\r\n\r\n        // Calculate products to the left of each element\r\n        long long int leftProduct = 1;\r\n        for (int i = 1; i < n; i++) {\r\n            leftProduct *= nums[i - 1];\r\n            leftProducts[i] = leftProduct;\r\n        }\r\n\r\n        // Calculate products to the right of each element\r\n        long long int rightProduct = 1;\r\n        for (int i = n - 2; i >= 0; i--) {\r\n            rightProduct *= nums[i + 1];\r\n            rightProducts[i] = rightProduct;\r\n        }\r\n\r\n        // Calculate the final product array by multiplying left and right products\r\n        vector<long long int> ans(n);\r\n        for (int i = 0; i < n; i++) {\r\n            ans[i] = leftProducts[i] * rightProducts[i];\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n\r\n\r\n"
}