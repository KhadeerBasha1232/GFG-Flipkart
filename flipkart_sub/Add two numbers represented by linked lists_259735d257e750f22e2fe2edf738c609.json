{
  "code": "\r\n''' Node for linked list:\r\n\r\nclass Node:\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.next = None\r\n\r\n'''\r\nclass Solution:\r\n    #Function to add two numbers represented by linked list.\r\n    def addTwoLists(self, first, second):\r\n\r\n \r\n\r\n        s = \"\"\r\n\r\n        while(first != None):\r\n\r\n            s = s + str(first.data)\r\n\r\n            first = first.next\r\n\r\n \r\n\r\n        k = \"\"\r\n\r\n        while(second != None):\r\n\r\n            k = k + str(second.data)\r\n\r\n            second = second.next\r\n\r\n \r\n\r\n        sum =int(s)+ int(k)\r\n\r\n        sum = str(sum)\r\n\r\n        sum = sum[::-1]\r\n\r\n \r\n\r\n        ans = None\r\n\r\n        for i in range(len(sum)):\r\n\r\n            temp = Node(sum[i])\r\n\r\n            temp.next = ans\r\n\r\n            ans = temp\r\n\r\n        return ans\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\n# Node Class\r\nclass Node:\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.next = None\r\n\r\n# Linked List Class\r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.head = None\r\n        self.tail = None\r\n\r\n    # creates a new node with given value and appends it at the end of the linked list\r\n    def insert(self, val):\r\n        if self.head is None:\r\n            self.head = Node(val)\r\n            self.tail = self.head\r\n        else:\r\n            self.tail.next = Node(val)\r\n            self.tail = self.tail.next\r\n\r\n# prints the elements of linked list starting with head\r\ndef printList(n):\r\n    while n:\r\n        print(n.data,end=' ')\r\n        n = n.next\r\n    print()\r\n\r\nif __name__ == '__main__':\r\n    for _ in range(int(input())):\r\n        \r\n        n = int(input())\r\n        arr1 = ( int(x) for x in input().split() )\r\n        LL1 = LinkedList()\r\n        for i in arr1:\r\n            LL1.insert(i)\r\n        \r\n        m = int(input())\r\n        arr2 = ( int(x) for x in input().split() )\r\n        LL2 = LinkedList()\r\n        for i in arr2:\r\n            LL2.insert(i)\r\n        \r\n        res = Solution().addTwoLists(LL1.head, LL2.head)\r\n        printList(res)\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\n''' Node for linked list:\r\n\r\nclass Node:\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.next = None\r\n\r\n'''\r\nclass Solution:\r\n    #Function to add two numbers represented by linked list.\r\n    def addTwoLists(self, first, second):\r\n\r\n \r\n\r\n        s = \"\"\r\n\r\n        while(first != None):\r\n\r\n            s = s + str(first.data)\r\n\r\n            first = first.next\r\n\r\n \r\n\r\n        k = \"\"\r\n\r\n        while(second != None):\r\n\r\n            k = k + str(second.data)\r\n\r\n            second = second.next\r\n\r\n \r\n\r\n        sum =int(s)+ int(k)\r\n\r\n        sum = str(sum)\r\n\r\n        sum = sum[::-1]\r\n\r\n \r\n\r\n        ans = None\r\n\r\n        for i in range(len(sum)):\r\n\r\n            temp = Node(sum[i])\r\n\r\n            temp.next = ans\r\n\r\n            ans = temp\r\n\r\n        return ans\r\n\r\n"
}