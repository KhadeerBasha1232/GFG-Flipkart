{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    void dfs(int row, int col, vector<vector<int>> &vis, vector<vector<char>> &mat, int delrow[], int delcol[]){\r\n        vis[row][col]=1;\r\n        int n = mat.size();\r\n        int m = mat[0].size();\r\n        \r\n        for(int i=0; i<4; i++){\r\n            int nrow = delrow[i] + row;\r\n            int ncol = delcol[i] + col;\r\n            if(nrow >= 0 && nrow < n && ncol >=0 && ncol < m && !vis[nrow][ncol] && mat[nrow][ncol]=='O'){\r\n                dfs(nrow, ncol, vis, mat, delrow, delcol);\r\n            }\r\n            \r\n        }\r\n    }\r\n    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)\r\n    {\r\n        int delrow[] ={-1,0,1,0};\r\n        int delcol[]={0,1,0,-1};\r\n        \r\n        vector<vector<int>> vis(n, vector<int> (m, 0));\r\n        \r\n        //traverse row\r\n        for(int j=0 ;j<m; j++){\r\n            if(!vis[0][j] && mat[0][j]=='O'){\r\n                dfs(0, j, vis, mat, delrow, delcol);\r\n            }\r\n            \r\n            if(!vis[n-1][j] && mat[n-1][j] == 'O'){\r\n                dfs(n-1, j, vis, mat, delrow, delcol);\r\n            }\r\n        }\r\n        \r\n        //traverse col\r\n        for(int i=0; i<n; i++){\r\n            if(!vis[i][0] && mat[i][0]=='O'){\r\n                dfs(i, 0, vis, mat, delrow, delcol);\r\n            }\r\n            if(!vis[i][m-1] && mat[i][m-1]=='O'){\r\n                dfs(i, m-1, vis, mat, delrow, delcol);\r\n            }\r\n        }\r\n        \r\n        for(int i=0; i<n; i++){\r\n            for(int j=0; j<m; j++){\r\n                if(!vis[i][j] && mat[i][j] == 'O'){\r\n                    mat[i][j] = 'X';\r\n                }\r\n            }\r\n        }\r\n        \r\n        return mat;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int n, m;\r\n        cin>>n>>m;\r\n        vector<vector<char>> mat(n, vector<char>(m, '.'));\r\n        for(int i = 0;i < n;i++)\r\n            for(int j=0; j<m; j++)\r\n                cin>>mat[i][j];\r\n        \r\n        Solution ob;\r\n        vector<vector<char>> ans = ob.fill(n, m, mat);\r\n        for(int i = 0;i < n;i++) {\r\n            for(int j = 0;j < m;j++) {\r\n                cout<<ans[i][j]<<\" \";\r\n            }\r\n            cout<<\"\\n\";\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n    void dfs(int row, int col, vector<vector<int>> &vis, vector<vector<char>> &mat, int delrow[], int delcol[]){\r\n        vis[row][col]=1;\r\n        int n = mat.size();\r\n        int m = mat[0].size();\r\n        \r\n        for(int i=0; i<4; i++){\r\n            int nrow = delrow[i] + row;\r\n            int ncol = delcol[i] + col;\r\n            if(nrow >= 0 && nrow < n && ncol >=0 && ncol < m && !vis[nrow][ncol] && mat[nrow][ncol]=='O'){\r\n                dfs(nrow, ncol, vis, mat, delrow, delcol);\r\n            }\r\n            \r\n        }\r\n    }\r\n    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)\r\n    {\r\n        int delrow[] ={-1,0,1,0};\r\n        int delcol[]={0,1,0,-1};\r\n        \r\n        vector<vector<int>> vis(n, vector<int> (m, 0));\r\n        \r\n        //traverse row\r\n        for(int j=0 ;j<m; j++){\r\n            if(!vis[0][j] && mat[0][j]=='O'){\r\n                dfs(0, j, vis, mat, delrow, delcol);\r\n            }\r\n            \r\n            if(!vis[n-1][j] && mat[n-1][j] == 'O'){\r\n                dfs(n-1, j, vis, mat, delrow, delcol);\r\n            }\r\n        }\r\n        \r\n        //traverse col\r\n        for(int i=0; i<n; i++){\r\n            if(!vis[i][0] && mat[i][0]=='O'){\r\n                dfs(i, 0, vis, mat, delrow, delcol);\r\n            }\r\n            if(!vis[i][m-1] && mat[i][m-1]=='O'){\r\n                dfs(i, m-1, vis, mat, delrow, delcol);\r\n            }\r\n        }\r\n        \r\n        for(int i=0; i<n; i++){\r\n            for(int j=0; j<m; j++){\r\n                if(!vis[i][j] && mat[i][j] == 'O'){\r\n                    mat[i][j] = 'X';\r\n                }\r\n            }\r\n        }\r\n        \r\n        return mat;\r\n    }\r\n};\r\n"
}