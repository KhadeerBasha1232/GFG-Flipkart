{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public static int unlockLock(String[] barriers, String target) {\r\n        //Write your code here\r\n        HashSet<String>set=new HashSet<>();\r\n        for(String s:barriers){\r\n            set.add(s);\r\n        }\r\n        if(set.contains(target) || set.contains(\"0000\")){\r\n            return -1;\r\n        }\r\n        Queue<String>q=new LinkedList<>();\r\n        q.add(\"0000\");\r\n        int ans=0;\r\n        while(!q.isEmpty()){\r\n            ans++;\r\n            int sz=q.size();\r\n            for(int k=0;k<sz;k++){\r\n                String s=q.poll();\r\n                for(int i=0;i<4;i++){\r\n                    String str[]=modify(s,i);\r\n                    if(!set.contains(str[0])){\r\n                        if(str[0].equals(target)){\r\n                            return ans;\r\n                        }\r\n                        set.add(str[0]);\r\n                        q.add(str[0]);\r\n                    }\r\n                    if(!set.contains(str[1])){\r\n                        if(str[1].equals(target)){\r\n                            return ans;\r\n                        }\r\n                        set.add(str[1]);\r\n                        q.add(str[1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n        \r\n    }\r\n    public static String[] modify(String s,int i){\r\n        int a=Integer.parseInt(s.charAt(i)+\"\");\r\n        int c1=a==9?0:a+1;\r\n        int c2=a==0?9:a-1;\r\n        char f=(char)(c1+'0');\r\n        char se=(char)(c2+'0');\r\n        String s1=s.substring(0,i)+f+s.substring(i+1);\r\n        String s2=s.substring(0,i)+se+s.substring(i+1);\r\n        return new String[]{s1,s2};\r\n    }\r\n    \r\n}\r\n\r\n//{ Driver Code Starts.\r\n\r\nclass GFG {\r\n\tpublic static void main(String[] args) throws IOException\r\n\t{\r\n\t    var sc = new FastReader();\r\n\t    int test = sc.nextInt();\r\n\t    while(test-->0){\r\n    \t\tint n = sc.nextInt();\r\n    \t\tString[] barriers = new String[n];\r\n    \t\tfor(int i = 0; i < n; i++)\r\n    \t\t    barriers[i] = sc.nextString();\r\n    \t\tString target = sc.nextString();\r\n    \t\t\r\n    \t\tSystem.out.println(Solution.unlockLock(barriers, target));\r\n\t    }\r\n\t}\r\n    \r\n    public static class FastReader\r\n\t{\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic FastReader()\r\n\t\t{\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\tst = new StringTokenizer(\"\");\r\n\t\t}\r\n\r\n\t\tprivate void read() throws IOException\r\n\t\t{\r\n\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t}\r\n\r\n\t\tpublic String nextString() throws IOException\r\n\t\t{\r\n\t\t\twhile(!st.hasMoreTokens())\r\n\t\t\t\tread();\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tpublic int nextInt() throws IOException\r\n\t\t{\r\n\t\t\treturn Integer.parseInt(nextString());\r\n\t\t}\r\n\r\n\t\tpublic long nextLong() throws IOException\r\n\t\t{\r\n\t\t\treturn Long.parseLong(nextString());\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "java",
  "user_code": "//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public static int unlockLock(String[] barriers, String target) {\r\n        //Write your code here\r\n        HashSet<String>set=new HashSet<>();\r\n        for(String s:barriers){\r\n            set.add(s);\r\n        }\r\n        if(set.contains(target) || set.contains(\"0000\")){\r\n            return -1;\r\n        }\r\n        Queue<String>q=new LinkedList<>();\r\n        q.add(\"0000\");\r\n        int ans=0;\r\n        while(!q.isEmpty()){\r\n            ans++;\r\n            int sz=q.size();\r\n            for(int k=0;k<sz;k++){\r\n                String s=q.poll();\r\n                for(int i=0;i<4;i++){\r\n                    String str[]=modify(s,i);\r\n                    if(!set.contains(str[0])){\r\n                        if(str[0].equals(target)){\r\n                            return ans;\r\n                        }\r\n                        set.add(str[0]);\r\n                        q.add(str[0]);\r\n                    }\r\n                    if(!set.contains(str[1])){\r\n                        if(str[1].equals(target)){\r\n                            return ans;\r\n                        }\r\n                        set.add(str[1]);\r\n                        q.add(str[1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n        \r\n    }\r\n    public static String[] modify(String s,int i){\r\n        int a=Integer.parseInt(s.charAt(i)+\"\");\r\n        int c1=a==9?0:a+1;\r\n        int c2=a==0?9:a-1;\r\n        char f=(char)(c1+'0');\r\n        char se=(char)(c2+'0');\r\n        String s1=s.substring(0,i)+f+s.substring(i+1);\r\n        String s2=s.substring(0,i)+se+s.substring(i+1);\r\n        return new String[]{s1,s2};\r\n    }\r\n    \r\n}\r\n"
}