{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to return the minimum cost of connecting the ropes.\r\n    long long minCost(long long arr[], long long n) {\r\n   \r\n        priority_queue<long long , vector<long long> , greater<long long>>minheap;\r\n        long long sum=0;\r\n        for(long long i=0;i<n;i++)\r\n        {\r\n                minheap.push(arr[i]);\r\n        }\r\n        while(minheap.size()!=1)\r\n        {\r\n            long long a=minheap.top();\r\n                        minheap.pop();\r\n            long long b=minheap.top();\r\n                        minheap.pop();\r\n            sum+=a+b;\r\n            minheap.push(a+b);\r\n        }\r\n       \r\n        return sum;\r\n       \r\n    }\r\n   \r\n};\r\n\r\n\t\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    long long t;\r\n    cin >> t;\r\n    while (t--) {\r\n        long long n;\r\n        cin >> n;\r\n        long long i, a[n];\r\n        for (i = 0; i < n; i++) {\r\n            cin >> a[i];\r\n        }\r\n        Solution ob;\r\n        cout << ob.minCost(a, n) << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    //Function to return the minimum cost of connecting the ropes.\r\n    long long minCost(long long arr[], long long n) {\r\n   \r\n        priority_queue<long long , vector<long long> , greater<long long>>minheap;\r\n        long long sum=0;\r\n        for(long long i=0;i<n;i++)\r\n        {\r\n                minheap.push(arr[i]);\r\n        }\r\n        while(minheap.size()!=1)\r\n        {\r\n            long long a=minheap.top();\r\n                        minheap.pop();\r\n            long long b=minheap.top();\r\n                        minheap.pop();\r\n            sum+=a+b;\r\n            minheap.push(a+b);\r\n        }\r\n       \r\n        return sum;\r\n       \r\n    }\r\n   \r\n};\r\n\r\n\t\r\n\r\n\r\n"
}