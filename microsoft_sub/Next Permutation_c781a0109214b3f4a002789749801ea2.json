{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(in.readLine());\r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(in.readLine());\r\n            String a[] = in.readLine().trim().split(\"\\\\s+\");\r\n            int arr[] = new int[N];\r\n            for(int i = 0;i < N;i++)\r\n                arr[i] = Integer.parseInt(a[i]);\r\n            \r\n            Solution ob = new Solution();\r\n            List<Integer> ans = new ArrayList<Integer>();\r\n            ans = ob.nextPermutation(N, arr);\r\n            StringBuilder out = new StringBuilder();\r\n            for(int i = 0;i < N;i++)\r\n                out.append(ans.get(i) + \" \");\r\n            System.out.println(out);\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static List<Integer> nextPermutation(int N, int arr[]){\r\n        \r\n        List<Integer> list = new ArrayList<>();\r\n        for(int i=0;i<N;i++){\r\n            list.add(arr[i]);\r\n        }\r\n        int index=-1;\r\n        for(int i=N-2;i>=0;i--){\r\n            if(list.get(i)<list.get(i+1)){\r\n                index=i;\r\n                break;\r\n            }\r\n        }\r\n        if(index==-1){\r\n            Collections.reverse(list);\r\n            return list;\r\n        }\r\n        \r\n        for(int i=N-1;i>index;i--){\r\n            if(list.get(i)>list.get(index)){\r\n                Collections.swap(list, i, index);\r\n                break;\r\n            }\r\n        }\r\n        List<Integer> sublist = list.subList(index+1, N);\r\n        Collections.reverse(sublist);\r\n        \r\n        return list;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static List<Integer> nextPermutation(int N, int arr[]){\r\n        \r\n        List<Integer> list = new ArrayList<>();\r\n        for(int i=0;i<N;i++){\r\n            list.add(arr[i]);\r\n        }\r\n        int index=-1;\r\n        for(int i=N-2;i>=0;i--){\r\n            if(list.get(i)<list.get(i+1)){\r\n                index=i;\r\n                break;\r\n            }\r\n        }\r\n        if(index==-1){\r\n            Collections.reverse(list);\r\n            return list;\r\n        }\r\n        \r\n        for(int i=N-1;i>index;i--){\r\n            if(list.get(i)>list.get(index)){\r\n                Collections.swap(list, i, index);\r\n                break;\r\n            }\r\n        }\r\n        List<Integer> sublist = list.subList(index+1, N);\r\n        Collections.reverse(sublist);\r\n        \r\n        return list;\r\n    }\r\n}"
}