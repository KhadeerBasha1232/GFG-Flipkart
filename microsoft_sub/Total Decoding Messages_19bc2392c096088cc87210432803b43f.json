{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass GFG\r\n{\r\n    public static void main(String[] args) throws IOException\r\n    {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        PrintWriter out=new PrintWriter(System.out);\r\n        int T = Integer.parseInt(br.readLine().trim());\r\n        while(T-->0)\r\n        {\r\n            String str = br.readLine().trim();\r\n            Solution ob = new Solution();\r\n            int ans = ob.CountWays(str);\r\n            out.println(ans);\r\n        }\r\n        out.close();\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n      static int solve(int[][] dp, int idx,String str){\r\n        \r\n        if(idx == str.length()){\r\n            return 1;\r\n        }\r\n        \r\n        int ways =0;\r\n        \r\n        if(dp[idx][0]!=-1){\r\n            return dp[idx][0];\r\n        }\r\n        \r\n       int digit = str.charAt(idx) - '0';\r\n        if (digit >= 1 && digit <= 9) {\r\n            ways = (ways + solve(dp, idx + 1, str)) % 1000000007;\r\n        }\r\n\r\n        // Consider decoding two digits if possible\r\n        if (idx + 1 < str.length()) {\r\n            digit = (str.charAt(idx) - '0') * 10 + (str.charAt(idx + 1) - '0');\r\n            if (digit >= 10 && digit <= 26) {\r\n                ways = (ways + solve(dp, idx + 2, str)) % 1000000007;\r\n            }\r\n        }\r\n        return dp[idx][0] =ways;\r\n    }\r\n    public int CountWays(String str)\r\n    {\r\n        int[][] dp = new int[str.length()+1][1];\r\n        for(int row[] : dp)\r\n       {\r\n           Arrays.fill(row,-1);\r\n       }\r\n       \r\n        int result = solve(dp,0,str);\r\n        return result;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n      static int solve(int[][] dp, int idx,String str){\r\n        \r\n        if(idx == str.length()){\r\n            return 1;\r\n        }\r\n        \r\n        int ways =0;\r\n        \r\n        if(dp[idx][0]!=-1){\r\n            return dp[idx][0];\r\n        }\r\n        \r\n       int digit = str.charAt(idx) - '0';\r\n        if (digit >= 1 && digit <= 9) {\r\n            ways = (ways + solve(dp, idx + 1, str)) % 1000000007;\r\n        }\r\n\r\n        // Consider decoding two digits if possible\r\n        if (idx + 1 < str.length()) {\r\n            digit = (str.charAt(idx) - '0') * 10 + (str.charAt(idx + 1) - '0');\r\n            if (digit >= 10 && digit <= 26) {\r\n                ways = (ways + solve(dp, idx + 2, str)) % 1000000007;\r\n            }\r\n        }\r\n        return dp[idx][0] =ways;\r\n    }\r\n    public int CountWays(String str)\r\n    {\r\n        int[][] dp = new int[str.length()+1][1];\r\n        for(int row[] : dp)\r\n       {\r\n           Arrays.fill(row,-1);\r\n       }\r\n       \r\n        int result = solve(dp,0,str);\r\n        return result;\r\n    }\r\n}"
}