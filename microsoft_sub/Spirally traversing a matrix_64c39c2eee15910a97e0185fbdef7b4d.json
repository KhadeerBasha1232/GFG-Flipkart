{
  "code": "import java.io.*;\r\nimport java.util.*;\r\nclass GFG\r\n{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while(t-- > 0)\r\n        {\r\n            int r = sc.nextInt();\r\n            int c = sc.nextInt();\r\n            \r\n            int matrix[][] = new int[r][c];\r\n            \r\n            for(int i = 0; i < r; i++)\r\n            {\r\n                for(int j = 0; j < c; j++)\r\n                 matrix[i][j] = sc.nextInt();\r\n            }\r\n            Solution ob = new Solution();\r\n            ArrayList<Integer> ans = ob.spirallyTraverse(matrix, r, c);\r\n            for (Integer val: ans) \r\n                System.out.print(val+\" \"); \r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\nclass Solution\r\n{\r\n    //Function to return a list of integers denoting spiral traversal of matrix.\r\n    static ArrayList<Integer> spirallyTraverse(int ma[][], int r, int c)\r\n    {\r\n        ArrayList<Integer> res=new ArrayList<>();\r\n        int a=0;\r\n        int q=r-1;\r\n        int t=0;\r\n        r=c-1;\r\n        while(a<=q && t<=r){\r\n            for(int j=t;j<=r;j++){\r\n                res.add(ma[a][j]);\r\n            }\r\n            a++;\r\n            for(int j=a;j<=q;j++){\r\n                res.add(ma[j][r]);\r\n            }\r\n            r--;\r\n            if(a<=q){\r\n                for(int j=r;j>=t;j--){\r\n                    res.add(ma[q][j]);\r\n                }\r\n                q--;\r\n            }\r\n            if(t<=r){\r\n                for(int j=q;j>=a;j--){\r\n                    res.add(ma[j][t]);\r\n                }\r\n                t++;\r\n            }\r\n        }\r\n        return res;\r\n        // code here \r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\nclass Solution\r\n{\r\n    //Function to return a list of integers denoting spiral traversal of matrix.\r\n    static ArrayList<Integer> spirallyTraverse(int ma[][], int r, int c)\r\n    {\r\n        ArrayList<Integer> res=new ArrayList<>();\r\n        int a=0;\r\n        int q=r-1;\r\n        int t=0;\r\n        r=c-1;\r\n        while(a<=q && t<=r){\r\n            for(int j=t;j<=r;j++){\r\n                res.add(ma[a][j]);\r\n            }\r\n            a++;\r\n            for(int j=a;j<=q;j++){\r\n                res.add(ma[j][r]);\r\n            }\r\n            r--;\r\n            if(a<=q){\r\n                for(int j=r;j>=t;j--){\r\n                    res.add(ma[q][j]);\r\n                }\r\n                q--;\r\n            }\r\n            if(t<=r){\r\n                for(int j=q;j>=a;j--){\r\n                    res.add(ma[j][t]);\r\n                }\r\n                t++;\r\n            }\r\n        }\r\n        return res;\r\n        // code here \r\n    }\r\n}"
}