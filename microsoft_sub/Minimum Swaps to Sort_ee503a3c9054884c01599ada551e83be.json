{
  "code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass GFG\r\n{\r\n    public static void main(String[] args) throws IOException\r\n    {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        int T = Integer.parseInt(br.readLine().trim());\r\n        while(T-->0)\r\n        {\r\n            int n = Integer.parseInt(br.readLine().trim());\r\n            int[] nums = new int[n];\r\n            String[] S = br.readLine().trim().split(\" \");\r\n            for(int i = 0; i < n; i++){\r\n                nums[i] = Integer.parseInt(S[i]);\r\n            }\r\n            Solution obj = new Solution();\r\n            int ans = obj.minSwaps(nums);\r\n            System.out.println(ans);\r\n       }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the minimum number of swaps required to sort the array.\r\n    public int minSwaps(int nums[])\r\n    {\r\n        // Code here\r\n        int[] temp=Arrays.copyOf(nums,nums.length);\r\n        Arrays.sort(temp);\r\n        \r\n        HashMap<Integer,Integer> hash=new HashMap<>();\r\n        \r\n        for(int i=0; i<nums.length; i++){\r\n            hash.put(temp[i],i);\r\n        }\r\n        int ans=0;\r\n        int left=0;\r\n        while(left<nums.length){\r\n            \r\n            if(left==hash.get(nums[left])){\r\n                left++;\r\n            }\r\n            else{\r\n                int tem=nums[hash.get(nums[left])];\r\n                nums[hash.get(nums[left])]=nums[left];\r\n                nums[left]=tem;\r\n                ans++;\r\n                \r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the minimum number of swaps required to sort the array.\r\n    public int minSwaps(int nums[])\r\n    {\r\n        // Code here\r\n        int[] temp=Arrays.copyOf(nums,nums.length);\r\n        Arrays.sort(temp);\r\n        \r\n        HashMap<Integer,Integer> hash=new HashMap<>();\r\n        \r\n        for(int i=0; i<nums.length; i++){\r\n            hash.put(temp[i],i);\r\n        }\r\n        int ans=0;\r\n        int left=0;\r\n        while(left<nums.length){\r\n            \r\n            if(left==hash.get(nums[left])){\r\n                left++;\r\n            }\r\n            else{\r\n                int tem=nums[hash.get(nums[left])];\r\n                nums[hash.get(nums[left])]=nums[left];\r\n                nums[left]=tem;\r\n                ans++;\r\n                \r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n}"
}