{
  "code": "//Initial Template for Java\r\n\r\n/*package whatever //do not write package name here */\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\t\r\n\t\tint t=sc.nextInt();\r\n\t\t\r\n\t\twhile(t-->0)\r\n\t\t{\r\n\t\t    int n=sc.nextInt();\r\n\t\t    int a[]=new int[n];\r\n\t\t    \r\n\t\t    for(int i=0;i<n;i++)\r\n\t\t    {\r\n\t\t        a[i]=sc.nextInt();\r\n\t\t    }\r\n\t\t    int m=sc.nextInt();\r\n\t\t    Solution ob = new Solution();\r\n\t\t    System.out.println(ob.findPages(a,n,m));\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution \r\n{\r\n    //Function to find minimum number of pages.\r\n    \r\n    public static boolean isFeasible(int[] arr, int n, int mid, int m){\r\n        \r\n        int req = 1;\r\n        int sum = 0;\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            sum += arr[i];\r\n            \r\n            if(sum > mid){\r\n                req++;\r\n                sum = arr[i];\r\n                \r\n            }\r\n        }\r\n        \r\n        if(req <= m){\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    public static int findPages(int[]arr,int n,int m)\r\n    {\r\n        //Your code here\r\n        int max = Integer.MIN_VALUE;\r\n        int res = -1;\r\n        int sum = 0;\r\n        \r\n        if(m > n){\r\n            return -1;\r\n        }\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            if(arr[i] > max){\r\n                max = arr[i];\r\n            }\r\n            \r\n            sum += arr[i];\r\n        }\r\n        \r\n        int left = max;\r\n        int right = sum;\r\n        \r\n        while(left <= right){\r\n            \r\n            int mid = (left+right)/2;\r\n            \r\n            if(isFeasible(arr, n, mid, m)){\r\n                \r\n                res = mid;\r\n                right = mid-1;\r\n                \r\n            }else{\r\n                \r\n                left = mid+1;\r\n            }\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution \r\n{\r\n    //Function to find minimum number of pages.\r\n    \r\n    public static boolean isFeasible(int[] arr, int n, int mid, int m){\r\n        \r\n        int req = 1;\r\n        int sum = 0;\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            sum += arr[i];\r\n            \r\n            if(sum > mid){\r\n                req++;\r\n                sum = arr[i];\r\n                \r\n            }\r\n        }\r\n        \r\n        if(req <= m){\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    public static int findPages(int[]arr,int n,int m)\r\n    {\r\n        //Your code here\r\n        int max = Integer.MIN_VALUE;\r\n        int res = -1;\r\n        int sum = 0;\r\n        \r\n        if(m > n){\r\n            return -1;\r\n        }\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            if(arr[i] > max){\r\n                max = arr[i];\r\n            }\r\n            \r\n            sum += arr[i];\r\n        }\r\n        \r\n        int left = max;\r\n        int right = sum;\r\n        \r\n        while(left <= right){\r\n            \r\n            int mid = (left+right)/2;\r\n            \r\n            if(isFeasible(arr, n, mid, m)){\r\n                \r\n                res = mid;\r\n                right = mid-1;\r\n                \r\n            }else{\r\n                \r\n                left = mid+1;\r\n            }\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};"
}