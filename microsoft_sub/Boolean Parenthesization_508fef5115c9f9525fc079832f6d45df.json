{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(in.readLine());\r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(in.readLine());\r\n            String S = in.readLine();\r\n            \r\n            Solution ob = new Solution();\r\n            System.out.println(ob.countWays(N, S));\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    \r\n    int [][][]dp;\r\n    \r\n    int solve(String s, int i, int j, Boolean isTrue) {\r\n    if (i > j)\r\n        return 0;\r\n\r\n    if (i == j) {\r\n        if (isTrue)\r\n            return s.charAt(i) == 'T' ? 1 : 0;\r\n        else\r\n            return s.charAt(i) == 'F' ? 1 : 0;\r\n    }\r\n    \r\n    if(dp[i][j][isTrue?1:0] !=-1)\r\n        return dp[i][j][isTrue?1:0];\r\n\r\n    int temp = 0;\r\n\r\n    for (int k = i; k <= j - 2; k += 2) {\r\n        int lt = solve(s, i, k, true);\r\n        int lf = solve(s, i, k, false);\r\n        int rt = solve(s, k + 2, j, true);\r\n        int rf = solve(s, k + 2, j, false);\r\n\r\n        if (s.charAt(k + 1) == '|') {\r\n            if (isTrue)\r\n                temp += (lt * rt + lt * rf + lf * rt);\r\n            else\r\n                temp += (lf * rf);\r\n        } else if (s.charAt(k + 1) == '&') {\r\n            if (isTrue)\r\n                temp += (lt * rt);\r\n            else\r\n                temp += (lf * rf + lf * rt + lt * rf);\r\n        } else {\r\n            if (isTrue)\r\n                temp += (lt * rf + lf * rt);\r\n            else\r\n                temp += (lt * rt + lf * rf);\r\n        }\r\n    }\r\n\r\n    return dp[i][j][isTrue?1:0] = temp % 1003 ;\r\n}\r\n\r\nint countWays(int n, String s) {\r\n    \r\n    dp = new int[n+1][n+1][2];\r\n    for(int i = 0 ; i<=n;i++)\r\n        for(int j = 0 ; j<=n;j++)\r\n            for(int k = 0 ; k<=1;k++)\r\n                dp[i][j][k] = -1;\r\n    return solve(s, 0, n - 1, true);\r\n}\r\n\r\n\r\n\r\n\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    \r\n    int [][][]dp;\r\n    \r\n    int solve(String s, int i, int j, Boolean isTrue) {\r\n    if (i > j)\r\n        return 0;\r\n\r\n    if (i == j) {\r\n        if (isTrue)\r\n            return s.charAt(i) == 'T' ? 1 : 0;\r\n        else\r\n            return s.charAt(i) == 'F' ? 1 : 0;\r\n    }\r\n    \r\n    if(dp[i][j][isTrue?1:0] !=-1)\r\n        return dp[i][j][isTrue?1:0];\r\n\r\n    int temp = 0;\r\n\r\n    for (int k = i; k <= j - 2; k += 2) {\r\n        int lt = solve(s, i, k, true);\r\n        int lf = solve(s, i, k, false);\r\n        int rt = solve(s, k + 2, j, true);\r\n        int rf = solve(s, k + 2, j, false);\r\n\r\n        if (s.charAt(k + 1) == '|') {\r\n            if (isTrue)\r\n                temp += (lt * rt + lt * rf + lf * rt);\r\n            else\r\n                temp += (lf * rf);\r\n        } else if (s.charAt(k + 1) == '&') {\r\n            if (isTrue)\r\n                temp += (lt * rt);\r\n            else\r\n                temp += (lf * rf + lf * rt + lt * rf);\r\n        } else {\r\n            if (isTrue)\r\n                temp += (lt * rf + lf * rt);\r\n            else\r\n                temp += (lt * rt + lf * rf);\r\n        }\r\n    }\r\n\r\n    return dp[i][j][isTrue?1:0] = temp % 1003 ;\r\n}\r\n\r\nint countWays(int n, String s) {\r\n    \r\n    dp = new int[n+1][n+1][2];\r\n    for(int i = 0 ; i<=n;i++)\r\n        for(int j = 0 ; j<=n;j++)\r\n            for(int k = 0 ; k<=1;k++)\r\n                dp[i][j][k] = -1;\r\n    return solve(s, 0, n - 1, true);\r\n}\r\n\r\n\r\n\r\n\r\n}"
}