{
  "code": "import java.util.Scanner;\r\nimport java.util.Stack;\r\nclass SortedStack{\r\n\tpublic static void main(String[] args){\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\tint t=sc.nextInt();\r\n\t\twhile(t-->0){\r\n\t\t\tStack<Integer> s=new Stack<>();\r\n\t\t\tint n=sc.nextInt();\r\n\t\t\twhile(n-->0)\r\n\t\t\ts.push(sc.nextInt());\r\n\t\t\tGfG g=new GfG();\r\n\t\t\tStack<Integer> a=g.sort(s);\r\n\t\t\twhile(!a.empty()){\r\n\t\t\t\tSystem.out.print(a.peek()+\" \");\r\n\t\t\t\ta.pop();\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n/*Complete the function below*/\r\nclass GfG{\r\n    \r\n\tpublic Stack<Integer> sort(Stack<Integer> stk1)\r\n\t{\r\n\t    Stack<Integer> tempstk = new Stack<>();\r\n\t    while(!stk1.empty()) {\r\n\t        int temp = stk1.pop();\r\n\t        while(!tempstk.empty() && tempstk.peek()>temp)\r\n\t        {\r\n\t            stk1.push(tempstk.pop());\r\n\t        }\r\n\t        tempstk.push(temp);\r\n\t    }\r\n\t    return tempstk;\r\n\t}\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n/*Complete the function below*/\r\nclass GfG{\r\n    \r\n\tpublic Stack<Integer> sort(Stack<Integer> stk1)\r\n\t{\r\n\t    Stack<Integer> tempstk = new Stack<>();\r\n\t    while(!stk1.empty()) {\r\n\t        int temp = stk1.pop();\r\n\t        while(!tempstk.empty() && tempstk.peek()>temp)\r\n\t        {\r\n\t            stk1.push(tempstk.pop());\r\n\t        }\r\n\t        tempstk.push(temp);\r\n\t    }\r\n\t    return tempstk;\r\n\t}\r\n}"
}