{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to find largest rectangular area possible in a given histogram.\r\n    long long getMaxArea(long long arr[], int n)\r\n    {\r\n        stack <long long> s;\r\n        long long res = 0;\r\n        \r\n        for(int i = 0; i < n; i++){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]){\r\n                long long curr = 0;\r\n                int tp = s.top();\r\n                s.pop();\r\n                if(!s.empty()){\r\n                    curr = arr[tp] * (i-s.top()-1);\r\n                }\r\n                else{\r\n                    curr = arr[tp] * i;\r\n                }\r\n                \r\n                if(curr > res){\r\n                    res = curr;\r\n                }\r\n            }\r\n            \r\n            s.push(i);\r\n        }\r\n        \r\n        while(!s.empty()){\r\n            long long curr = 0;\r\n            int tp = s.top();\r\n            s.pop();\r\n            if(!s.empty()){\r\n                    curr = arr[tp] * (n-s.top()-1);\r\n                }\r\n                else{\r\n                    curr = arr[tp] * n;\r\n                }\r\n                \r\n                if(curr > res){\r\n                    res = curr;\r\n                }\r\n            \r\n            \r\n        }\r\n        \r\n        return res;\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n {\r\n    long long t;\r\n\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;\r\n        cin>>n;\r\n        \r\n        long long arr[n];\r\n        for(int i=0;i<n;i++)\r\n            cin>>arr[i];\r\n        Solution ob;\r\n        cout<<ob.getMaxArea(arr, n)<<endl;\r\n    \r\n    }\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    //Function to find largest rectangular area possible in a given histogram.\r\n    long long getMaxArea(long long arr[], int n)\r\n    {\r\n        stack <long long> s;\r\n        long long res = 0;\r\n        \r\n        for(int i = 0; i < n; i++){\r\n            while(!s.empty() && arr[s.top()]>=arr[i]){\r\n                long long curr = 0;\r\n                int tp = s.top();\r\n                s.pop();\r\n                if(!s.empty()){\r\n                    curr = arr[tp] * (i-s.top()-1);\r\n                }\r\n                else{\r\n                    curr = arr[tp] * i;\r\n                }\r\n                \r\n                if(curr > res){\r\n                    res = curr;\r\n                }\r\n            }\r\n            \r\n            s.push(i);\r\n        }\r\n        \r\n        while(!s.empty()){\r\n            long long curr = 0;\r\n            int tp = s.top();\r\n            s.pop();\r\n            if(!s.empty()){\r\n                    curr = arr[tp] * (n-s.top()-1);\r\n                }\r\n                else{\r\n                    curr = arr[tp] * n;\r\n                }\r\n                \r\n                if(curr > res){\r\n                    res = curr;\r\n                }\r\n            \r\n            \r\n        }\r\n        \r\n        return res;\r\n    }\r\n};\r\n\r\n"
}