{
  "code": "// Initial Template for C++\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/* Link list node */\r\nstruct Node* partition(struct Node* head, int x);\r\n\r\nstruct Node {\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n/* Function to print linked list */\r\nvoid printList(struct Node* node) {\r\n    while (node != NULL) {\r\n        printf(\"%d \", node->data);\r\n        node = node->next;\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\n/* Drier program to test above function*/\r\nint main(void) {\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        struct Node* head = NULL;\r\n        struct Node* temp = NULL;\r\n        int n;\r\n        cin >> n;\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            int value;\r\n            cin >> value;\r\n            if (i == 0) {\r\n                head = new Node(value);\r\n                temp = head;\r\n            } else {\r\n                temp->next = new Node(value);\r\n                temp = temp->next;\r\n            }\r\n        }\r\n\r\n        int k;\r\n        cin >> k;\r\n\r\n        // Solution ob;\r\n\r\n        head = partition(head, k);\r\n        printList(head);\r\n    }\r\n\r\n    return (0);\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for C++\r\n\r\n/*struct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n};*/\r\n\r\nstruct Node* partition(struct Node* head, int x) {\r\n   \r\n   Node *temp=head;\r\n   Node *small=new Node(0);\r\n   Node *head1=small;\r\n   Node *equal=new Node(0);\r\n   Node *head2=equal;\r\n   Node *greater=new Node(0);\r\n   Node *head3=greater;\r\n   while(temp){\r\n       if(temp->data<x){\r\n           small->next=temp;\r\n           temp=temp->next;\r\n           small=small->next;\r\n           small->next=NULL;\r\n       }\r\n       else if(temp->data>x){\r\n           greater->next=temp;\r\n           temp=temp->next;\r\n           greater=greater->next;\r\n           greater->next=NULL;\r\n           \r\n       }\r\n       else{\r\n           equal->next=temp;\r\n           temp=temp->next;\r\n           equal=equal->next;\r\n           equal->next=NULL;\r\n       }\r\n       \r\n   }\r\n   Node *del=head1;\r\n   head1=head1->next;\r\n   delete del;\r\n   del=head2;\r\n   head2=head2->next;\r\n   delete del;\r\n   del=head3;\r\n   head3=head3->next;\r\n   delete del;\r\n   if(head1 && head2 && head3){\r\n   small->next=head2;\r\n   equal->next=head3;\r\n    return head1;\r\n   }\r\n   else if(head1==NULL && head2 && head3||head1==NULL &&head2 && head3==NULL){\r\n      equal->next=head3;\r\n      return head2;\r\n   }\r\n   else if(head1 &&head2==NULL &&head3 || head1 &&head2==NULL && head3==NULL){\r\n       small->next=head3;\r\n       return head1;\r\n   }\r\n   else if(head1==NULL && head2==NULL &&head3){\r\n       return head3;\r\n   }\r\n   else if(head1 && head2&& head3==NULL){\r\n       small->next=head2;\r\n       return head1;\r\n   }\r\n   else{\r\n       return NULL;\r\n   }\r\n   \r\n  \r\n}",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\n\r\n// User function Template for C++\r\n\r\n/*struct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n};*/\r\n\r\nstruct Node* partition(struct Node* head, int x) {\r\n   \r\n   Node *temp=head;\r\n   Node *small=new Node(0);\r\n   Node *head1=small;\r\n   Node *equal=new Node(0);\r\n   Node *head2=equal;\r\n   Node *greater=new Node(0);\r\n   Node *head3=greater;\r\n   while(temp){\r\n       if(temp->data<x){\r\n           small->next=temp;\r\n           temp=temp->next;\r\n           small=small->next;\r\n           small->next=NULL;\r\n       }\r\n       else if(temp->data>x){\r\n           greater->next=temp;\r\n           temp=temp->next;\r\n           greater=greater->next;\r\n           greater->next=NULL;\r\n           \r\n       }\r\n       else{\r\n           equal->next=temp;\r\n           temp=temp->next;\r\n           equal=equal->next;\r\n           equal->next=NULL;\r\n       }\r\n       \r\n   }\r\n   Node *del=head1;\r\n   head1=head1->next;\r\n   delete del;\r\n   del=head2;\r\n   head2=head2->next;\r\n   delete del;\r\n   del=head3;\r\n   head3=head3->next;\r\n   delete del;\r\n   if(head1 && head2 && head3){\r\n   small->next=head2;\r\n   equal->next=head3;\r\n    return head1;\r\n   }\r\n   else if(head1==NULL && head2 && head3||head1==NULL &&head2 && head3==NULL){\r\n      equal->next=head3;\r\n      return head2;\r\n   }\r\n   else if(head1 &&head2==NULL &&head3 || head1 &&head2==NULL && head3==NULL){\r\n       small->next=head3;\r\n       return head1;\r\n   }\r\n   else if(head1==NULL && head2==NULL &&head3){\r\n       return head3;\r\n   }\r\n   else if(head1 && head2&& head3==NULL){\r\n       small->next=head2;\r\n       return head1;\r\n   }\r\n   else{\r\n       return NULL;\r\n   }\r\n   \r\n  \r\n}"
}