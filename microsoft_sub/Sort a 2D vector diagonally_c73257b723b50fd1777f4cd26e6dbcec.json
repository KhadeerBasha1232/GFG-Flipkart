{
  "code": "//Initial Template for Java\r\n\r\nimport java.util.*; \r\nimport java.io.*;\r\nimport java.lang.*;\r\n\r\nclass GFG\r\n{\r\n\tpublic static void main(String[] args) \r\n\t{ \r\n\t    Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        \r\n        while (t-- > 0)\r\n        {\r\n            int n = sc.nextInt();\r\n            int m = sc.nextInt();\r\n            int[][] matrix = new int[n][m];\r\n            \r\n            for (int i = 0; i < n; i++)\r\n                for (int j = 0; j < m; j++)\r\n                    matrix[i][j] = sc.nextInt();\r\n            \r\n            Solution ob = new Solution();\r\n            ob.diagonalSort(matrix,n,m);\r\n            printMatrix (matrix);\r\n        }\r\n\t} \r\n\t\r\n\tstatic void printMatrix(int arr[][]) \r\n\t{ \r\n\t\tfor (int i = 0; i < arr.length; i++) { \r\n\t\t\tfor (int j = 0; j < arr[0].length; j++) \r\n\t\t\t\tSystem.out.print(arr[i][j] + \" \"); \r\n\t\t\tSystem.out.println(\"\"); \r\n\t\t} \r\n\t} \r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n   void diagonalSort(int matrix[][], int n, int m)\r\n    {\r\n        \r\n        int r=0;\r\n        int c=0;\r\n        int k=0;\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            ArrayList<Integer> alist=new ArrayList<>();\r\n             r=i;\r\n             c=0;\r\n            while(r<n && c<m)\r\n            {\r\n                alist.add(matrix[r][c]);\r\n                c++;\r\n                r++;\r\n            }\r\n            Collections.sort(alist);\r\n             r=i;\r\n             c=0;\r\n             k=0;\r\n            while(r<n &&c<m)\r\n            {\r\n                matrix[r][c]=alist.get(k++);\r\n                r++;\r\n                c++;\r\n            }\r\n        }\r\n        \r\n        for(int j=1;j<m;j++)\r\n        {\r\n            ArrayList<Integer> alist=new ArrayList<>();\r\n            r=0;\r\n            c=j;\r\n            while(r<n && c<m)\r\n            {\r\n                alist.add(matrix[r][c]);\r\n                c++;\r\n                r++;\r\n            }\r\n            Collections.sort(alist,Collections.reverseOrder());\r\n             r=0;\r\n             c=j;\r\n            k=0;\r\n            while(r<n &&c<m)\r\n            {\r\n                matrix[r][c]=alist.get(k++);\r\n                r++;\r\n                c++;\r\n            }\r\n        }\r\n    }\r\n        \r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n   void diagonalSort(int matrix[][], int n, int m)\r\n    {\r\n        \r\n        int r=0;\r\n        int c=0;\r\n        int k=0;\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            ArrayList<Integer> alist=new ArrayList<>();\r\n             r=i;\r\n             c=0;\r\n            while(r<n && c<m)\r\n            {\r\n                alist.add(matrix[r][c]);\r\n                c++;\r\n                r++;\r\n            }\r\n            Collections.sort(alist);\r\n             r=i;\r\n             c=0;\r\n             k=0;\r\n            while(r<n &&c<m)\r\n            {\r\n                matrix[r][c]=alist.get(k++);\r\n                r++;\r\n                c++;\r\n            }\r\n        }\r\n        \r\n        for(int j=1;j<m;j++)\r\n        {\r\n            ArrayList<Integer> alist=new ArrayList<>();\r\n            r=0;\r\n            c=j;\r\n            while(r<n && c<m)\r\n            {\r\n                alist.add(matrix[r][c]);\r\n                c++;\r\n                r++;\r\n            }\r\n            Collections.sort(alist,Collections.reverseOrder());\r\n             r=0;\r\n             c=j;\r\n            k=0;\r\n            while(r<n &&c<m)\r\n            {\r\n                matrix[r][c]=alist.get(k++);\r\n                r++;\r\n                c++;\r\n            }\r\n        }\r\n    }\r\n        \r\n}"
}