{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node {\r\n    int data;\r\n    struct Node *next;\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n\r\n// } Driver Code Ends\r\n/*\r\n\r\nstruct Node {\r\n    int data;\r\n    struct Node *next;\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to rotate a linked list.\r\n    Node* rotate(Node* head, int k)\r\n    {\r\n        Node*p=head,*q=head,*r=0;\r\n        while(k--)\r\n        {\r\n            r=p;\r\n            p=p->next;\r\n        }\r\n          if(p==NULL){\r\n            return head;\r\n        }\r\n        r->next=0;\r\n        Node*t=p;\r\n        while(p->next)\r\n        {\r\n            p=p->next;\r\n        }\r\n        p->next=q;\r\n        return t;\r\n    }\r\n};\r\n    \r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nvoid printList(Node *n)\r\n{\r\n    while (n != NULL)\r\n    {\r\n        cout<< n->data << \" \";\r\n        n = n->next;\r\n    }\r\n    cout<< endl;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n, val, k;\r\n        cin>>n;\r\n        \r\n        cin>> val;\r\n        Node *head = new Node(val);\r\n        Node *tail = head;\r\n        \r\n        for(int i=0; i<n-1; i++)\r\n        {\r\n            cin>> val;\r\n            tail->next = new Node(val);\r\n            tail = tail->next;\r\n        }\r\n        \r\n        cin>> k;\r\n        \r\n        Solution ob;\r\n        head = ob.rotate(head,k);\r\n        printList(head);\r\n    }\r\n    return 1;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*\r\n\r\nstruct Node {\r\n    int data;\r\n    struct Node *next;\r\n    Node(int x) {\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n*/\r\n\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to rotate a linked list.\r\n    Node* rotate(Node* head, int k)\r\n    {\r\n        Node*p=head,*q=head,*r=0;\r\n        while(k--)\r\n        {\r\n            r=p;\r\n            p=p->next;\r\n        }\r\n          if(p==NULL){\r\n            return head;\r\n        }\r\n        r->next=0;\r\n        Node*t=p;\r\n        while(p->next)\r\n        {\r\n            p=p->next;\r\n        }\r\n        p->next=q;\r\n        return t;\r\n    }\r\n};\r\n    \r\n\r\n"
}