{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(read.readLine());\r\n        while(t-- > 0)\r\n        {\r\n            int N = Integer.parseInt(read.readLine());\r\n            String input_line[] = read.readLine().trim().split(\"\\\\s+\");\r\n            int Arr[]= new int[N];\r\n            for(int i = 0; i < N; i++)\r\n                Arr[i] = Integer.parseInt(input_line[i]);\r\n            int k = Integer.parseInt(read.readLine());\r\n            \r\n            Solution ob = new Solution();\r\n            System.out.println(ob.searchInsertK(Arr, N, k));\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    static int searchInsertK(int Arr[], int N, int k)\r\n    {\r\n        \r\n        int size = Arr.length;\r\n        int start= 0, end = size-1, mid, index = size;\r\n        \r\n        while(start <= end){\r\n            mid = start + (end-start)/2;\r\n            if(Arr[mid] == k){\r\n                index = mid;\r\n                return index;\r\n            } else if(Arr[mid] < k){\r\n                start = mid + 1;\r\n            } else {\r\n                index = mid;\r\n                end = mid - 1;\r\n            }\r\n        }\r\n        \r\n        return index;\r\n        \r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    static int searchInsertK(int Arr[], int N, int k)\r\n    {\r\n        \r\n        int size = Arr.length;\r\n        int start= 0, end = size-1, mid, index = size;\r\n        \r\n        while(start <= end){\r\n            mid = start + (end-start)/2;\r\n            if(Arr[mid] == k){\r\n                index = mid;\r\n                return index;\r\n            } else if(Arr[mid] < k){\r\n                start = mid + 1;\r\n            } else {\r\n                index = mid;\r\n                end = mid - 1;\r\n            }\r\n        }\r\n        \r\n        return index;\r\n        \r\n    }\r\n}"
}