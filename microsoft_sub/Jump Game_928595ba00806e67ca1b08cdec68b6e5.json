{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    int canReach(int A[], int N) {\r\n        int reachable = 0;\r\n        \r\n        for(int i=0;i<N;i++)\r\n        {\r\n            if(i > reachable) return false;\r\n            if(i+A[i] > reachable)  reachable = i+A[i];\r\n        }\r\n        \r\n        return true;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int N;\r\n        cin>>N;\r\n        \r\n        int A[N];\r\n        \r\n        for(int i=0; i<N; i++)\r\n            cin>>A[i];\r\n\r\n        Solution ob;\r\n        cout << ob.canReach(A,N) << endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    int canReach(int A[], int N) {\r\n        int reachable = 0;\r\n        \r\n        for(int i=0;i<N;i++)\r\n        {\r\n            if(i > reachable) return false;\r\n            if(i+A[i] > reachable)  reachable = i+A[i];\r\n        }\r\n        \r\n        return true;\r\n    }\r\n};\r\n"
}