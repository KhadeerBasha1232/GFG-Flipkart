{
  "code": "//Initial Template for C++\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n  int lower_bound(vector<int>arr, int N, int X)\r\n{\r\n    int mid;\r\n    int low = 0;\r\n    int high = N;\r\n    while (low < high) {\r\n        mid = low + (high - low) / 2;\r\n        if (X <= arr[mid]) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    if(low < N && arr[low] < X) {\r\n       low++;\r\n    }\r\n    return low;\r\n}\r\n    int longestAssemblyLine(int n, int arr[]){\r\n        // code here\r\n        vector<int>temp;\r\n        temp.push_back(arr[0]);\r\n        for(int i=1;i<n;i++){\r\n            if(arr[i]>temp.back()){\r\n                temp.push_back(arr[i]);\r\n            }\r\n            else{\r\n                int ind=lower_bound(temp,temp.size(),arr[i]);\r\n                temp[ind]=arr[i];\r\n            }\r\n        }\r\n        return temp.size();\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int N;\r\n        cin >> N;\r\n        int heights[N];\r\n        for(int i = 0; i < N; i++){\r\n            cin >> heights[i];\r\n        }\r\n        Solution ob;\r\n        cout << ob.longestAssemblyLine(N, heights) << endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n  int lower_bound(vector<int>arr, int N, int X)\r\n{\r\n    int mid;\r\n    int low = 0;\r\n    int high = N;\r\n    while (low < high) {\r\n        mid = low + (high - low) / 2;\r\n        if (X <= arr[mid]) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    if(low < N && arr[low] < X) {\r\n       low++;\r\n    }\r\n    return low;\r\n}\r\n    int longestAssemblyLine(int n, int arr[]){\r\n        // code here\r\n        vector<int>temp;\r\n        temp.push_back(arr[0]);\r\n        for(int i=1;i<n;i++){\r\n            if(arr[i]>temp.back()){\r\n                temp.push_back(arr[i]);\r\n            }\r\n            else{\r\n                int ind=lower_bound(temp,temp.size(),arr[i]);\r\n                temp[ind]=arr[i];\r\n            }\r\n        }\r\n        return temp.size();\r\n    }\r\n};\r\n"
}