{
  "code": "//Initial Template for Java\r\n\r\n\r\nimport java.io.*;\r\nimport java.util.*; \r\n\r\nclass GFG{\r\n    public static void main(String args[]) throws IOException { \r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n\r\n        while(t > 0){\r\n        \tint n = sc.nextInt();\r\n        \tint[] array = new int[n];\r\n        \tfor(int i=0; i<n; i++)\r\n        \t{\r\n        \t\tarray[i] = sc.nextInt();\r\n        \t}\r\n        \tint target = sc.nextInt();\r\n\r\n            Solution ob = new Solution();\r\n\t\t\tSystem.out.println(ob.Search(array,target));\r\n            t--;\r\n        }\r\n    } \r\n} \r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution \r\n{ \r\n    static int Search(int array[], int target)\r\n\t{\r\n\t    int start=0;\r\n\t    int end=array.length-1;\r\n\t    \r\n\t    while(start<=end){\r\n\t        int mid=start+(end-start)/2;\r\n\t        if(array[mid]==target) {\r\n\t            return mid;\r\n\t        }else if(array[start]<=array[mid]){\r\n\t            if(target>=array[start] && target<array[mid]){\r\n\t                end=mid-1;\r\n\t            }else start=mid+1;\r\n\t            \r\n\t        }else {\r\n\t            if(target>array[mid] && target<=array[end]){\r\n\t                start=mid+1;\r\n\t            }else end=mid-1;\r\n\t        }\r\n\t    }\r\n\t    return -1;\r\n\t}\r\n} \r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution \r\n{ \r\n    static int Search(int array[], int target)\r\n\t{\r\n\t    int start=0;\r\n\t    int end=array.length-1;\r\n\t    \r\n\t    while(start<=end){\r\n\t        int mid=start+(end-start)/2;\r\n\t        if(array[mid]==target) {\r\n\t            return mid;\r\n\t        }else if(array[start]<=array[mid]){\r\n\t            if(target>=array[start] && target<array[mid]){\r\n\t                end=mid-1;\r\n\t            }else start=mid+1;\r\n\t            \r\n\t        }else {\r\n\t            if(target>array[mid] && target<=array[end]){\r\n\t                start=mid+1;\r\n\t            }else end=mid-1;\r\n\t        }\r\n\t    }\r\n\t    return -1;\r\n\t}\r\n} \r\n\r\n"
}