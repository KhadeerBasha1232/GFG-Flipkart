{
  "code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass GFG {\r\n\tpublic static void main (String[] args) {\r\n\t\tScanner scan = new Scanner(System.in);\r\n\t\tint test = scan.nextInt();\r\n\t\t\r\n\t\twhile(test > 0){\r\n\t\t    String s = scan.next();\r\n\t\t    String t = scan.next();\r\n\t\t    \r\n\t\t    System.out.println(new Solution().smallestWindow(s, t));\r\n\t\t    test--;\r\n\t\t}\r\n\t}\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the smallest window in the string s consisting\r\n    //of all the characters of string p.\r\n    public static String smallestWindow(String s, String p)\r\n    {\r\n        String result = \"-1\";\r\n        int count = 0;\r\n        Map<Character, Integer> map = new HashMap<>();\r\n        \r\n        for (int i = 0; i < p.length(); i++) {\r\n            char ch = p.charAt(i);\r\n            if (!map.containsKey(ch)) {\r\n                ++count;\r\n                map.put(ch, 1);\r\n            } else {\r\n                map.put(ch, map.get(ch) + 1);\r\n            }\r\n        }\r\n        \r\n        int i = 0;\r\n        int j = 0;\r\n        int length = Integer.MAX_VALUE;\r\n        while (j < s.length()) {\r\n            char ch = s.charAt(j);\r\n            \r\n            if (map.containsKey(ch)) {\r\n                map.put(ch, map.get(ch) - 1);\r\n                \r\n                if (map.get(ch) == 0) {\r\n                    count--;\r\n                }\r\n            }\r\n            \r\n            while (count == 0) {\r\n                ch = s.charAt(i);\r\n                \r\n                if (map.containsKey(ch)) {\r\n                    if (map.get(ch) == 0) {\r\n                        String potentialResult = s.substring(i, j + 1);\r\n                        if (potentialResult.length() < length) {\r\n                            result = potentialResult;\r\n                            length = potentialResult.length();\r\n                        }\r\n                        ++count;\r\n                    }\r\n                    map.put(ch, map.get(ch) + 1);\r\n                }\r\n                ++i;\r\n            }\r\n            \r\n            ++j;\r\n        }\r\n        \r\n        return result;\r\n    }\r\n        // Your code here\r\n    }\r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n\r\n\r\nclass Solution\r\n{\r\n    //Function to find the smallest window in the string s consisting\r\n    //of all the characters of string p.\r\n    public static String smallestWindow(String s, String p)\r\n    {\r\n        String result = \"-1\";\r\n        int count = 0;\r\n        Map<Character, Integer> map = new HashMap<>();\r\n        \r\n        for (int i = 0; i < p.length(); i++) {\r\n            char ch = p.charAt(i);\r\n            if (!map.containsKey(ch)) {\r\n                ++count;\r\n                map.put(ch, 1);\r\n            } else {\r\n                map.put(ch, map.get(ch) + 1);\r\n            }\r\n        }\r\n        \r\n        int i = 0;\r\n        int j = 0;\r\n        int length = Integer.MAX_VALUE;\r\n        while (j < s.length()) {\r\n            char ch = s.charAt(j);\r\n            \r\n            if (map.containsKey(ch)) {\r\n                map.put(ch, map.get(ch) - 1);\r\n                \r\n                if (map.get(ch) == 0) {\r\n                    count--;\r\n                }\r\n            }\r\n            \r\n            while (count == 0) {\r\n                ch = s.charAt(i);\r\n                \r\n                if (map.containsKey(ch)) {\r\n                    if (map.get(ch) == 0) {\r\n                        String potentialResult = s.substring(i, j + 1);\r\n                        if (potentialResult.length() < length) {\r\n                            result = potentialResult;\r\n                            length = potentialResult.length();\r\n                        }\r\n                        ++count;\r\n                    }\r\n                    map.put(ch, map.get(ch) + 1);\r\n                }\r\n                ++i;\r\n            }\r\n            \r\n            ++j;\r\n        }\r\n        \r\n        return result;\r\n    }\r\n        // Your code here\r\n    }\r\n\r\n"
}