{
  "code": "\r\n#User function Template for python3\r\n\r\n# Node Class    \r\nclass node:\r\n    def __init__(self, val):\r\n        self.data = val\r\n        self.next = None\r\n\r\n# Linked List Class\r\nclass Linked_List:\r\n    def __init__(self):\r\n        self.head = None\r\n        self.tail = None\r\n\r\n\r\n#Back-end complete function Template for Python 3\r\nclass Solution:\r\n    \r\n    def reorderList(self,head):\r\n        \r\n        arr=[]\r\n        temp=head\r\n        \r\n        while(temp!=None):\r\n            arr.append(temp.data)\r\n            temp=temp.next\r\n        \r\n        n=len(arr)\r\n        res=[]\r\n        \r\n        for i in range(n//2):\r\n            res.append(arr[i])\r\n            res.append(arr[n-i-1])\r\n        \r\n        if(n%2==1):\r\n            res.append(arr[n//2])\r\n\r\n        temp=head\r\n        \r\n        for x in res:\r\n            temp.data=x\r\n            temp=temp.next\r\n\r\n\r\n#{ \r\n # Driver Code Starts\r\n#Initial Template for Python 3\r\n\r\n# Node Class    \r\nclass node:\r\n    def __init__(self, val):\r\n        self.data = val\r\n        self.next = None\r\n\r\n# Linked List Class\r\nclass Linked_List:\r\n    def __init__(self):\r\n        self.head = None\r\n        self.tail = None\r\n\r\n    def insert(self, val):\r\n        if self.head == None:\r\n            self.head = node(val)\r\n            self.tail = self.head\r\n        else:\r\n            new_node = node(val)\r\n            self.tail.next = new_node\r\n            self.tail = new_node\r\n\r\n    def createList(self, arr, n):\r\n        for i in range(n):\r\n            self.insert(arr[i])\r\n        return self.head\r\n\r\n    def printList(self,head):\r\n        tmp = head\r\n        while tmp is not None:\r\n            print(tmp.data, end=\" \")\r\n            tmp=tmp.next\r\n        print()\r\n\r\nif __name__=='__main__':\r\n    t = int(input())\r\n    for i in range(t):\r\n        n = int(input())\r\n        arr = list(map(int, input().strip().split()))\r\n        lis = Linked_List()\r\n        head = lis.createList(arr, n)\r\n        ob=Solution()\r\n        ob.reorderList(head)\r\n\r\n        lis.printList(head)\r\n\r\n# } Driver Code Ends",
  "status": "1",
  "language": "python3",
  "user_code": "#User function Template for python3\r\n\r\n#User function Template for python3\r\n\r\n# Node Class    \r\nclass node:\r\n    def __init__(self, val):\r\n        self.data = val\r\n        self.next = None\r\n\r\n# Linked List Class\r\nclass Linked_List:\r\n    def __init__(self):\r\n        self.head = None\r\n        self.tail = None\r\n\r\n\r\n#Back-end complete function Template for Python 3\r\nclass Solution:\r\n    \r\n    def reorderList(self,head):\r\n        \r\n        arr=[]\r\n        temp=head\r\n        \r\n        while(temp!=None):\r\n            arr.append(temp.data)\r\n            temp=temp.next\r\n        \r\n        n=len(arr)\r\n        res=[]\r\n        \r\n        for i in range(n//2):\r\n            res.append(arr[i])\r\n            res.append(arr[n-i-1])\r\n        \r\n        if(n%2==1):\r\n            res.append(arr[n//2])\r\n\r\n        temp=head\r\n        \r\n        for x in res:\r\n            temp.data=x\r\n            temp=temp.next\r\n\r\n\r\n"
}