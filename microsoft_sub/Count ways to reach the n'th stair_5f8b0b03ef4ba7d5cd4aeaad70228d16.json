{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    int M = 1e9+7;\r\n    public:\r\n    int helper(int ind, vector<int> &dp) {\r\n        if(ind == 0)\r\n            return 1;\r\n        if(ind < 0)\r\n            return 0;\r\n            \r\n        if(dp[ind] != -1)\r\n            return dp[ind];\r\n            \r\n        return dp[ind] = (helper(ind-1, dp) + helper(ind-2, dp))%M;\r\n    }\r\n    //Function to count number of ways to reach the nth stair.\r\n    int countWays(int n)\r\n    {\r\n        // your code here\r\n        int dp;\r\n        int prev1 = 1, prev2 = 0;\r\n        \r\n        for(int i=1; i<=n; i++) {\r\n            dp = prev1;\r\n            if(i > 1)\r\n                dp = (dp + prev2)%M;\r\n            prev2 = prev1;\r\n            prev1 = dp;\r\n        }\r\n        return prev1;\r\n    }\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    //taking total testcases\r\n    int t;\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n        //taking stair count\r\n        int m;\r\n        cin>>m;\r\n        Solution ob;\r\n        cout<<ob.countWays(m)<<endl; // Print the output from our pre computed array\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    int M = 1e9+7;\r\n    public:\r\n    int helper(int ind, vector<int> &dp) {\r\n        if(ind == 0)\r\n            return 1;\r\n        if(ind < 0)\r\n            return 0;\r\n            \r\n        if(dp[ind] != -1)\r\n            return dp[ind];\r\n            \r\n        return dp[ind] = (helper(ind-1, dp) + helper(ind-2, dp))%M;\r\n    }\r\n    //Function to count number of ways to reach the nth stair.\r\n    int countWays(int n)\r\n    {\r\n        // your code here\r\n        int dp;\r\n        int prev1 = 1, prev2 = 0;\r\n        \r\n        for(int i=1; i<=n; i++) {\r\n            dp = prev1;\r\n            if(i > 1)\r\n                dp = (dp + prev2)%M;\r\n            prev2 = prev1;\r\n            prev1 = dp;\r\n        }\r\n        return prev1;\r\n    }\r\n};\r\n\r\n\r\n"
}