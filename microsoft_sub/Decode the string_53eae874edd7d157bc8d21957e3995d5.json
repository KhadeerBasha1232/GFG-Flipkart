{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        PrintWriter out=new PrintWriter(System.out);\r\n        int t = Integer.parseInt(in.readLine());\r\n        while(t-- > 0){\r\n            String s = in.readLine();\r\n            \r\n            Solution ob = new Solution();\r\n            out.println(ob.decodedString(s));\r\n        }\r\n        out.close();\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    static String decodedString(String s){\r\n        // code here\r\n        Stack<Integer> countStack = new Stack<>();\r\n        Stack<StringBuilder> stringStack = new Stack<>();\r\n        StringBuilder currentString = new StringBuilder();\r\n        int count = 0;\r\n\r\n        for (char ch : s.toCharArray()) {\r\n            if (Character.isDigit(ch)) {\r\n                count = count * 10 + (ch - '0');\r\n            } else if (ch == '[') {\r\n                countStack.push(count);\r\n                stringStack.push(currentString);\r\n                currentString = new StringBuilder();\r\n                count = 0;\r\n            } else if (ch == ']') {\r\n                StringBuilder previousString = stringStack.pop();\r\n                int repeatTimes = countStack.pop();\r\n                for (int i = 0; i < repeatTimes; i++) {\r\n                    previousString.append(currentString);\r\n                }\r\n                currentString = previousString;\r\n            } else {\r\n                currentString.append(ch);\r\n            }\r\n        }\r\n\r\n        return currentString.toString();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution{\r\n    static String decodedString(String s){\r\n        // code here\r\n        Stack<Integer> countStack = new Stack<>();\r\n        Stack<StringBuilder> stringStack = new Stack<>();\r\n        StringBuilder currentString = new StringBuilder();\r\n        int count = 0;\r\n\r\n        for (char ch : s.toCharArray()) {\r\n            if (Character.isDigit(ch)) {\r\n                count = count * 10 + (ch - '0');\r\n            } else if (ch == '[') {\r\n                countStack.push(count);\r\n                stringStack.push(currentString);\r\n                currentString = new StringBuilder();\r\n                count = 0;\r\n            } else if (ch == ']') {\r\n                StringBuilder previousString = stringStack.pop();\r\n                int repeatTimes = countStack.pop();\r\n                for (int i = 0; i < repeatTimes; i++) {\r\n                    previousString.append(currentString);\r\n                }\r\n                currentString = previousString;\r\n            } else {\r\n                currentString.append(ch);\r\n            }\r\n        }\r\n\r\n        return currentString.toString();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"
}