{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG {\r\n    // Driver code\r\n    public static void main(String[] args) throws Exception {\r\n        BufferedReader br =\r\n            new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(br.readLine().trim());\r\n        while (t-- > 0) {\r\n            int n = Integer.parseInt(br.readLine().trim());\r\n\r\n            ArrayList<Long> ans = new Solution().nthRowOfPascalTriangle(n);\r\n            printAns(ans);\r\n        }\r\n    }\r\n    public static void printAns(ArrayList<Long> ans) {\r\n        for (Long x : ans) {\r\n            System.out.print(x + \" \");\r\n        }\r\n        System.out.println();\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solution \r\n{\r\n    ArrayList<Long> nthRowOfPascalTriangle(int n) \r\n    {\r\n        // code here\r\n        ArrayList<Long> NthRow = new ArrayList<>();\r\n        NthRow.add(1L);\r\n        \r\n        for (int i = 1; i < n; i++)\r\n        {\r\n            ArrayList<Long> temp = new ArrayList<>();\r\n            temp.add(1L);\r\n            \r\n            for (int j = 0; j < NthRow.size() - 1; j++)\r\n                temp.add((NthRow.get(j) + NthRow.get(j + 1)) % 1000000007);\r\n                \r\n            temp.add(1L);\r\n            NthRow = temp;\r\n        }\r\n        \r\n            return NthRow;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solution \r\n{\r\n    ArrayList<Long> nthRowOfPascalTriangle(int n) \r\n    {\r\n        // code here\r\n        ArrayList<Long> NthRow = new ArrayList<>();\r\n        NthRow.add(1L);\r\n        \r\n        for (int i = 1; i < n; i++)\r\n        {\r\n            ArrayList<Long> temp = new ArrayList<>();\r\n            temp.add(1L);\r\n            \r\n            for (int j = 0; j < NthRow.size() - 1; j++)\r\n                temp.add((NthRow.get(j) + NthRow.get(j + 1)) % 1000000007);\r\n                \r\n            temp.add(1L);\r\n            NthRow = temp;\r\n        }\r\n        \r\n            return NthRow;\r\n    }\r\n}"
}