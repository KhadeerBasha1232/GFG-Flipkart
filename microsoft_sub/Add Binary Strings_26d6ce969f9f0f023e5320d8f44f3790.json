{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\nclass Solution{\r\npublic:\t\r\n\tstring addBinary(string A, string B)\r\n\t{\r\n\t    \r\n\t    \r\n\t    int carry = 0;\r\n\t    reverse(A.begin(), A.end());\r\n\t    reverse(B.begin(), B.end());\r\n\t    \r\n\t    int n = A.length();\r\n\t    int m = B.length();\r\n\t    \r\n\t    int i = 0, j = 0;\r\n\t    string ans = \"\";\r\n\t    \r\n\t    while(i < n || j < m)\r\n\t    {\r\n\t        int digit1 = 0;\r\n\t        int digit2 = 0;\r\n\t        if(i < n)\r\n\t        {\r\n\t            digit1 = A[i] - '0';\r\n\t            i++;\r\n\t        }\r\n\t        if(j < m)\r\n\t        {\r\n\t            digit2 = B[j] - '0';\r\n\t            j++;\r\n\t        }\r\n\t        \r\n\t        int result = digit1 + digit2 + carry;\r\n\t        carry = result / 2;\r\n\t        result = result % 2;\r\n\t        \r\n\t        ans.push_back(result + '0');\r\n\t    }\r\n\t    if(carry == 1)\r\n\t    {\r\n\t        ans.push_back(carry + '0');\r\n\t    }\r\n\t    else\r\n\t    {\r\n\t        // Remove trailing zeroes except first one\r\n\t        int i = ans.length() - 1;\r\n\t        while(i >= 1 && ans[i] == '0')\r\n\t        {\r\n\t            ans.pop_back();\r\n\t            i--;\r\n\t        }\r\n\t    }\r\n\t    reverse(ans.begin(), ans.end());\r\n\t    return ans;\r\n\t}\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\tint t; cin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tstring A, B; cin >> A >> B;\r\n\t\tSolution ob;\r\n\t\tcout << ob.addBinary (A, B);\r\n\t\tcout << \"\\n\";\r\n\t}\r\n}\r\n\r\n// Contributed By: Pranay Bansal\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\nclass Solution{\r\npublic:\t\r\n\tstring addBinary(string A, string B)\r\n\t{\r\n\t    \r\n\t    \r\n\t    int carry = 0;\r\n\t    reverse(A.begin(), A.end());\r\n\t    reverse(B.begin(), B.end());\r\n\t    \r\n\t    int n = A.length();\r\n\t    int m = B.length();\r\n\t    \r\n\t    int i = 0, j = 0;\r\n\t    string ans = \"\";\r\n\t    \r\n\t    while(i < n || j < m)\r\n\t    {\r\n\t        int digit1 = 0;\r\n\t        int digit2 = 0;\r\n\t        if(i < n)\r\n\t        {\r\n\t            digit1 = A[i] - '0';\r\n\t            i++;\r\n\t        }\r\n\t        if(j < m)\r\n\t        {\r\n\t            digit2 = B[j] - '0';\r\n\t            j++;\r\n\t        }\r\n\t        \r\n\t        int result = digit1 + digit2 + carry;\r\n\t        carry = result / 2;\r\n\t        result = result % 2;\r\n\t        \r\n\t        ans.push_back(result + '0');\r\n\t    }\r\n\t    if(carry == 1)\r\n\t    {\r\n\t        ans.push_back(carry + '0');\r\n\t    }\r\n\t    else\r\n\t    {\r\n\t        // Remove trailing zeroes except first one\r\n\t        int i = ans.length() - 1;\r\n\t        while(i >= 1 && ans[i] == '0')\r\n\t        {\r\n\t            ans.pop_back();\r\n\t            i--;\r\n\t        }\r\n\t    }\r\n\t    reverse(ans.begin(), ans.end());\r\n\t    return ans;\r\n\t}\r\n};\r\n"
}