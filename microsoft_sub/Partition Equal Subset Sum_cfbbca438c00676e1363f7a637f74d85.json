{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG{\r\n    public static void main(String args[])throws IOException\r\n    {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(in.readLine());\r\n        while(t-- > 0){\r\n            int N = Integer.parseInt(in.readLine());\r\n            String input_line[] = in.readLine().trim().split(\"\\\\s+\");\r\n            int arr[] = new int[N];\r\n            for(int i = 0;i < N;i++)\r\n                arr[i] = Integer.parseInt(input_line[i]);\r\n            \r\n            Solution ob = new Solution();\r\n            int x = ob.equalPartition(N, arr);\r\n            if(x == 1)\r\n                System.out.println(\"YES\");\r\n            else\r\n                System.out.println(\"NO\");\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static int equalPartition(int N, int arr[])\r\n    {\r\n        // code here\r\n        int sum = 0;\r\n        for ( int i = 0 ; i<N ; i++){\r\n            \r\n            sum = sum + arr[i];\r\n    }\r\n        if (sum%2 != 0){\r\n            return 0;\r\n        }\r\n        else{\r\n            return isSubsetSum( N , arr , sum/2);\r\n        }\r\n    }\r\n            \r\n    \r\n    \r\n   static int isSubsetSum(int N, int arr[], int sum){\r\n        // code here\r\n        \r\n        int t[][] = new int [N+1][sum+1];\r\n        \r\n        for (int i =0 ; i<N+1 ; i++){\r\n            for ( int j = 0 ; j<sum+1 ; j++){\r\n                \r\n                if (i==0){\r\n                    t[i][j] = 0;\r\n                }\r\n                if ( j==0){\r\n                    t[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        for ( int i = 1 ; i<N+1 ; i++){\r\n            for( int j = 1 ; j<sum+1 ; j++){\r\n                \r\n                if(arr[i-1] <= j){\r\n                    \r\n                    t[i][j] = Math.max (t[i-1][j-arr[i-1]] ,  t[i-1][j] );\r\n                }\r\n                else{\r\n                    t[i][j] = t[i-1][j];\r\n                }\r\n            }\r\n        }\r\n        return t[N][sum];\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solution{\r\n    static int equalPartition(int N, int arr[])\r\n    {\r\n        // code here\r\n        int sum = 0;\r\n        for ( int i = 0 ; i<N ; i++){\r\n            \r\n            sum = sum + arr[i];\r\n    }\r\n        if (sum%2 != 0){\r\n            return 0;\r\n        }\r\n        else{\r\n            return isSubsetSum( N , arr , sum/2);\r\n        }\r\n    }\r\n            \r\n    \r\n    \r\n   static int isSubsetSum(int N, int arr[], int sum){\r\n        // code here\r\n        \r\n        int t[][] = new int [N+1][sum+1];\r\n        \r\n        for (int i =0 ; i<N+1 ; i++){\r\n            for ( int j = 0 ; j<sum+1 ; j++){\r\n                \r\n                if (i==0){\r\n                    t[i][j] = 0;\r\n                }\r\n                if ( j==0){\r\n                    t[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        for ( int i = 1 ; i<N+1 ; i++){\r\n            for( int j = 1 ; j<sum+1 ; j++){\r\n                \r\n                if(arr[i-1] <= j){\r\n                    \r\n                    t[i][j] = Math.max (t[i-1][j-arr[i-1]] ,  t[i-1][j] );\r\n                }\r\n                else{\r\n                    t[i][j] = t[i-1][j];\r\n                }\r\n            }\r\n        }\r\n        return t[N][sum];\r\n    }\r\n}"
}