{
  "code": "// Initial Template for c++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n bool isPalindrome(string s,int i,int j){\r\n        while(i<j){\r\n            if(s[i]!=s[j])return 0;\r\n            i++;j--;\r\n        }\r\n        return 1;\r\n    }\r\nint solveMem(string str, int i, int n,vector<int> &dp) {\r\n    \r\n    // base case\r\n    if(i==n)return 0;\r\n \r\n    if(dp[i]!=-1)\r\n      return dp[i];\r\n    int mini = INT_MAX;\r\n\r\n        for(int j=i;j<n;j++){\r\n            if(isPalindrome(str,i,j)){\r\n                int ans = 1 + solveMem(str,j+1,n,dp);\r\n                mini = min(ans,mini);\r\n            }\r\n        }\r\n\r\n    return dp[i] = mini;\r\n}\r\n\r\n    int palindromicPartition(string str)\r\n    {\r\n          int n =str.length();\r\n        // return solve(str,0,n)-1;\r\n        vector<int> dp(n+1,-1);\r\n        return solveMem(str,0,n,dp)-1;\r\n        \r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        string str;\r\n        cin>>str;\r\n        \r\n        Solution ob;\r\n        cout<<ob.palindromicPartition(str)<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n bool isPalindrome(string s,int i,int j){\r\n        while(i<j){\r\n            if(s[i]!=s[j])return 0;\r\n            i++;j--;\r\n        }\r\n        return 1;\r\n    }\r\nint solveMem(string str, int i, int n,vector<int> &dp) {\r\n    \r\n    // base case\r\n    if(i==n)return 0;\r\n \r\n    if(dp[i]!=-1)\r\n      return dp[i];\r\n    int mini = INT_MAX;\r\n\r\n        for(int j=i;j<n;j++){\r\n            if(isPalindrome(str,i,j)){\r\n                int ans = 1 + solveMem(str,j+1,n,dp);\r\n                mini = min(ans,mini);\r\n            }\r\n        }\r\n\r\n    return dp[i] = mini;\r\n}\r\n\r\n    int palindromicPartition(string str)\r\n    {\r\n          int n =str.length();\r\n        // return solve(str,0,n)-1;\r\n        vector<int> dp(n+1,-1);\r\n        return solveMem(str,0,n,dp)-1;\r\n        \r\n    }\r\n};\r\n"
}