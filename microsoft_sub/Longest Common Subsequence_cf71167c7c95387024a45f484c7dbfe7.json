{
  "code": "#include<bits/stdc++.h>\r\nconst int mod=1e9+7;\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// function to find longest common subsequence\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    int solve(string &s1, string &s2, vector<vector<int>> &dp, int m, int n) {\r\n        if(m<0 || n<0)\r\n            return 0;\r\n        \r\n        if(dp[m][n] != -1)\r\n            return dp[m][n];\r\n        \r\n        if(s1[m] == s2[n])\r\n            return dp[m][n] = 1 + solve(s1, s2, dp, m-1, n-1);\r\n        \r\n        return dp[m][n] = max(solve(s1, s2, dp, m-1, n), solve(s1, s2, dp, m, n-1));\r\n    }\r\n    \r\n    //Function to find the length of longest common subsequence in two strings.\r\n    int lcs(int m, int n, string s1, string s2)\r\n    {\r\n        vector<vector<int>> dp(m, vector<int>(n, -1));\r\n        return solve(s1, s2, dp, m-1, n-1);\r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n    int t,n,m;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>n>>m;          // Take size of both the strings as input\r\n        string s1,s2;\r\n        cin>>s1>>s2;        // Take both the string as input\r\n        Solution ob;\r\n        cout << ob.lcs(n, m, s1, s2) << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// function to find longest common subsequence\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    int solve(string &s1, string &s2, vector<vector<int>> &dp, int m, int n) {\r\n        if(m<0 || n<0)\r\n            return 0;\r\n        \r\n        if(dp[m][n] != -1)\r\n            return dp[m][n];\r\n        \r\n        if(s1[m] == s2[n])\r\n            return dp[m][n] = 1 + solve(s1, s2, dp, m-1, n-1);\r\n        \r\n        return dp[m][n] = max(solve(s1, s2, dp, m-1, n), solve(s1, s2, dp, m, n-1));\r\n    }\r\n    \r\n    //Function to find the length of longest common subsequence in two strings.\r\n    int lcs(int m, int n, string s1, string s2)\r\n    {\r\n        vector<vector<int>> dp(m, vector<int>(n, -1));\r\n        return solve(s1, s2, dp, m-1, n-1);\r\n    }\r\n};\r\n\r\n"
}