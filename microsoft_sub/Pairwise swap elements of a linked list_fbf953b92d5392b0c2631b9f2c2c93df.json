{
  "code": "#include <bits/stdc++.h> \r\nusing namespace std; \r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n    \r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n};\r\n\r\n\r\n// } Driver Code Ends\r\n/*\r\n  Pairwise swap a linked list\r\n  The input list will have at least one element\r\n  node is defined as\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n}*head;\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* pairWiseSwap(struct Node* head)\r\n    {\r\n        // The task is to complete this method\r\n        if(head==NULL || head->next == NULL)\r\n            return head;\r\n        \r\n        Node* temp = head;\r\n        head = head->next;\r\n        \r\n        while(temp && temp->next){\r\n            Node* ptemp = temp;\r\n            Node* ctemp = temp->next;\r\n            temp = (temp->next)->next;\r\n            \r\n            ctemp->next = ptemp;\r\n            if(temp && temp->next)\r\n                ptemp->next = temp->next;\r\n            else if(temp)\r\n                ptemp->next = temp;\r\n            else\r\n                ptemp->next = NULL;\r\n        }\r\n        return head;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nvoid printList(Node* node) \r\n{ \r\n\twhile (node != NULL) { \r\n\t\tcout << node->data <<\" \"; \r\n\t\tnode = node->next; \r\n\t}  \r\n\tcout<<\"\\n\";\r\n}\r\n\r\nint main() \r\n{ \r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tcin>>n;\r\n\r\n\t\tint data;\r\n\t\tcin>>data;\r\n\t\tstruct Node *head = new Node(data);\r\n\t\tstruct Node *tail = head;\r\n\t\tmap<Node*, int> mp;\r\n\t\tmp[head] = head->data;\r\n\t\tfor (int i = 0; i<n-1; ++i)\r\n\t\t{\r\n\t\t\tcin>>data;\r\n\t\t\ttail->next = new Node(data);\r\n\t\t\ttail = tail->next;\r\n\t\t\tmp[tail] = tail->data;\r\n\t\t}\r\n\t\tstruct Node *failure = new Node(-1);\r\n\t\tSolution ob;\r\n\t\thead = ob.pairWiseSwap(head);\r\n\t\tint flag = 0;\r\n\t\tstruct Node *temp = head;\r\n\t\twhile(temp){\r\n\t\t    if(mp[temp] != temp->data){\r\n\t\t        flag = 1;\r\n\t\t        break;\r\n\t\t    }\r\n\t\t    temp = temp->next;\r\n\t\t}\r\n\t\tif(flag)\r\n\t\t    printList(failure);\r\n\t\telse\r\n\t\t    printList(head);\r\n\t}\r\n\treturn 0; \r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*\r\n  Pairwise swap a linked list\r\n  The input list will have at least one element\r\n  node is defined as\r\n\r\nstruct Node\r\n{\r\n    int data;\r\n    struct Node* next;\r\n\r\n    Node(int x){\r\n        data = x;\r\n        next = NULL;\r\n    }\r\n\r\n}*head;\r\n*/\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    Node* pairWiseSwap(struct Node* head)\r\n    {\r\n        // The task is to complete this method\r\n        if(head==NULL || head->next == NULL)\r\n            return head;\r\n        \r\n        Node* temp = head;\r\n        head = head->next;\r\n        \r\n        while(temp && temp->next){\r\n            Node* ptemp = temp;\r\n            Node* ctemp = temp->next;\r\n            temp = (temp->next)->next;\r\n            \r\n            ctemp->next = ptemp;\r\n            if(temp && temp->next)\r\n                ptemp->next = temp->next;\r\n            else if(temp)\r\n                ptemp->next = temp;\r\n            else\r\n                ptemp->next = NULL;\r\n        }\r\n        return head;\r\n    }\r\n};\r\n"
}