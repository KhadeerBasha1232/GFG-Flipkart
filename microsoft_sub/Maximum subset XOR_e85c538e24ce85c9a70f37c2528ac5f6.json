{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// Function to return maximum XOR subset in set[]\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    int maxSubsetXOR(int arr[], int n)\r\n{\r\n    int maxi = arr[0];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        maxi = std::max(arr[i], maxi);\r\n    }\r\n    int msb = 31;\r\n    for (int i = 31; i >= 0; i--)\r\n    {\r\n        int ithBit = (maxi >> i) & 1;\r\n        if (ithBit == 1)\r\n        {\r\n            msb = i;\r\n            break;\r\n        }\r\n    }\r\n    int curr_index = 0;\r\n    for (int i = msb; i >= 0; i--)\r\n    {\r\n        int mxIndex = curr_index;\r\n        int mxElement = INT_MIN;\r\n        for (int j = curr_index; j < n; j++)\r\n        {\r\n            int setBit = (arr[j] >> i) & 1;\r\n            if (setBit != 0 && arr[j] > mxElement)\r\n            {\r\n                mxElement = arr[j];\r\n                mxIndex = j;\r\n            }\r\n        }\r\n        if (mxElement == INT_MIN)\r\n        {\r\n            continue;\r\n        }\r\n        std::swap(arr[curr_index], arr[mxIndex]);\r\n        for (int k = 0; k < n; k++)\r\n        {\r\n            if (k == curr_index)\r\n            {\r\n                continue;\r\n            }\r\n            if ((arr[k] >> i) & 1 == 1)\r\n            {\r\n                arr[k] ^= arr[curr_index]; // XOR operation\r\n            }\r\n        }\r\n        curr_index++;\r\n    }\r\n    // Take xor of all\r\n    int ans = 0;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        ans ^= arr[i]; // XOR operation\r\n    }\r\n    return ans;\r\n}\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main()\r\n{\r\n\r\n    int t,n,a[100004],k;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        //cin>>n;\r\n       scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        Solution obj;\r\n        printf(\"%d\\n\",obj.maxSubsetXOR(a,n));\r\n       // cout<<bin(a,0,n-1,k)<<endl;\r\n    }\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// Function to return maximum XOR subset in set[]\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    int maxSubsetXOR(int arr[], int n)\r\n{\r\n    int maxi = arr[0];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        maxi = std::max(arr[i], maxi);\r\n    }\r\n    int msb = 31;\r\n    for (int i = 31; i >= 0; i--)\r\n    {\r\n        int ithBit = (maxi >> i) & 1;\r\n        if (ithBit == 1)\r\n        {\r\n            msb = i;\r\n            break;\r\n        }\r\n    }\r\n    int curr_index = 0;\r\n    for (int i = msb; i >= 0; i--)\r\n    {\r\n        int mxIndex = curr_index;\r\n        int mxElement = INT_MIN;\r\n        for (int j = curr_index; j < n; j++)\r\n        {\r\n            int setBit = (arr[j] >> i) & 1;\r\n            if (setBit != 0 && arr[j] > mxElement)\r\n            {\r\n                mxElement = arr[j];\r\n                mxIndex = j;\r\n            }\r\n        }\r\n        if (mxElement == INT_MIN)\r\n        {\r\n            continue;\r\n        }\r\n        std::swap(arr[curr_index], arr[mxIndex]);\r\n        for (int k = 0; k < n; k++)\r\n        {\r\n            if (k == curr_index)\r\n            {\r\n                continue;\r\n            }\r\n            if ((arr[k] >> i) & 1 == 1)\r\n            {\r\n                arr[k] ^= arr[curr_index]; // XOR operation\r\n            }\r\n        }\r\n        curr_index++;\r\n    }\r\n    // Take xor of all\r\n    int ans = 0;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        ans ^= arr[i]; // XOR operation\r\n    }\r\n    return ans;\r\n}\r\n};\r\n"
}