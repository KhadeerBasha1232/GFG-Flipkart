{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n\r\n// } Driver Code Ends\r\n\r\nconst long long mod=(long long)1000000007;\r\nclass Solution\r\n{\r\n    public:\r\n    long long helper(int i,int j,vector<vector<long long>> &dp){\r\n        if(i==0&&j==0){\r\n            return 1;\r\n        }\r\n        if(dp[i][j]!=-1){\r\n            return dp[i][j];\r\n        }\r\n        long long left=i>0?(helper(i-1,j,dp)):0;\r\n        long long  up=j>0?(helper(i,j-1,dp)):0;\r\n        return dp[i][j]=(left+up)%mod;\r\n    }\r\n    long long inverse(int a,int b){\r\n        long long res=1;\r\n        while(b){\r\n            if(b&1){\r\n                res=(res*1LL*a)%mod;\r\n            }\r\n            a=(a*1LL*a)%mod;\r\n            b=b>>1;\r\n            \r\n            \r\n        }\r\n        return res%mod;\r\n    }\r\n    long long  numberOfPaths(int M, int N)\r\n    {\r\n        // Code Here\r\n        int n=M+N-2;\r\n        int r=M-1;\r\n        long long res=1;\r\n        for(int i=1;i<=r;i++){\r\n            res=(res%mod*(n-r+i)%mod)%mod;\r\n            res=(res%mod*inverse(i,mod-2))%mod;\r\n            \r\n            \r\n        }\r\n        return res;\r\n    }\r\n    \r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\n \r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tint N, M;\r\n\t\tcin>>M>>N;\r\n\t\tSolution ob;\r\n\t    cout << ob.numberOfPaths(M, N)<<endl;\r\n\t}\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "\r\nconst long long mod=(long long)1000000007;\r\nclass Solution\r\n{\r\n    public:\r\n    long long helper(int i,int j,vector<vector<long long>> &dp){\r\n        if(i==0&&j==0){\r\n            return 1;\r\n        }\r\n        if(dp[i][j]!=-1){\r\n            return dp[i][j];\r\n        }\r\n        long long left=i>0?(helper(i-1,j,dp)):0;\r\n        long long  up=j>0?(helper(i,j-1,dp)):0;\r\n        return dp[i][j]=(left+up)%mod;\r\n    }\r\n    long long inverse(int a,int b){\r\n        long long res=1;\r\n        while(b){\r\n            if(b&1){\r\n                res=(res*1LL*a)%mod;\r\n            }\r\n            a=(a*1LL*a)%mod;\r\n            b=b>>1;\r\n            \r\n            \r\n        }\r\n        return res%mod;\r\n    }\r\n    long long  numberOfPaths(int M, int N)\r\n    {\r\n        // Code Here\r\n        int n=M+N-2;\r\n        int r=M-1;\r\n        long long res=1;\r\n        for(int i=1;i<=r;i++){\r\n            res=(res%mod*(n-r+i)%mod)%mod;\r\n            res=(res%mod*inverse(i,mod-2))%mod;\r\n            \r\n            \r\n        }\r\n        return res;\r\n    }\r\n    \r\n};\r\n"
}