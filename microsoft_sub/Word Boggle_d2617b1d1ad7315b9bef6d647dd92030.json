{
  "code": "//Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG\r\n{\r\n    public static void main(String args[])\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        while(t>0)\r\n        {\r\n            int N = sc.nextInt();\r\n            String[] dictionary = new String[N];\r\n            for(int i=0;i<N;i++)\r\n            {\r\n                dictionary[i] = sc.next();\r\n            }\r\n            \r\n            int R = Integer.parseInt(sc.next());\r\n            int C = Integer.parseInt(sc.next());\r\n            \r\n            char board[][] = new char[R][C];\r\n            for(int i=0;i<R;i++)\r\n            {\r\n                for(int j=0;j<C;j++)\r\n                {\r\n                    board[i][j] = sc.next().charAt(0);\r\n                }\r\n            }\r\n            \r\n            Solution obj = new Solution();\r\n            String[] ans = obj.wordBoggle(board, dictionary);\r\n            \r\n            if(ans.length == 0) System.out.println(\"-1\");\r\n            else\r\n            {\r\n                Arrays.sort(ans);\r\n                for(int i=0;i<ans.length;i++)\r\n                {\r\n                    System.out.print(ans[i] + \" \");\r\n                }\r\n                System.out.println();\r\n            }\r\n            \r\n            t--;\r\n        }\r\n    }\r\n}\r\n\r\n// } Driver Code Ends\r\n\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public String[] wordBoggle(char board[][], String[] dictionary)\r\n    {\r\n        // Write your code here\r\n        int r = board.length;\r\n        int c = board[0].length;\r\n        ArrayList<String> res = new ArrayList<>();\r\n        for(String s:dictionary)\r\n        {\r\n            for(int i=0;i<r;i++)\r\n            {\r\n                for(int j=0;j<c;j++)\r\n                {\r\n                    if(board[i][j] == s.charAt(0) && findWord(i,j,board,s,0)) \r\n                    res.add(s);\r\n                }\r\n            }\r\n        }\r\n        Set<String> st = new LinkedHashSet<>(res);\r\n        return st.toArray(new String[0]);\r\n    }\r\n    public boolean findWord(int i,int j,char[][] board,String s,int cnt)\r\n    {\r\n        if(cnt == s.length()) return true;\r\n        boolean val = i<0|| i>=board.length||j<0||j>=board[0].length;\r\n        if(val || board[i][j]!=s.charAt(cnt)) return false;\r\n        \r\n        int[][] quad = {{1,0},{0,1},{-1,0},{0,-1},{1,1},{-1,-1},{1,-1},{-1,1}};\r\n        char cuch = board[i][j];\r\n        board[i][j] = '*';\r\n        \r\n        boolean res = false;\r\n        for(int[] qu:quad)\r\n        {\r\n            int p = i+qu[0];\r\n            int q = j+qu[1];\r\n            \r\n            if(findWord(p,q,board,s,cnt+1))\r\n            {\r\n                res = true;\r\n                break;\r\n            }\r\n        }\r\n        board[i][j] = cuch;\r\n        return res;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n//User function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public String[] wordBoggle(char board[][], String[] dictionary)\r\n    {\r\n        // Write your code here\r\n        int r = board.length;\r\n        int c = board[0].length;\r\n        ArrayList<String> res = new ArrayList<>();\r\n        for(String s:dictionary)\r\n        {\r\n            for(int i=0;i<r;i++)\r\n            {\r\n                for(int j=0;j<c;j++)\r\n                {\r\n                    if(board[i][j] == s.charAt(0) && findWord(i,j,board,s,0)) \r\n                    res.add(s);\r\n                }\r\n            }\r\n        }\r\n        Set<String> st = new LinkedHashSet<>(res);\r\n        return st.toArray(new String[0]);\r\n    }\r\n    public boolean findWord(int i,int j,char[][] board,String s,int cnt)\r\n    {\r\n        if(cnt == s.length()) return true;\r\n        boolean val = i<0|| i>=board.length||j<0||j>=board[0].length;\r\n        if(val || board[i][j]!=s.charAt(cnt)) return false;\r\n        \r\n        int[][] quad = {{1,0},{0,1},{-1,0},{0,-1},{1,1},{-1,-1},{1,-1},{-1,1}};\r\n        char cuch = board[i][j];\r\n        board[i][j] = '*';\r\n        \r\n        boolean res = false;\r\n        for(int[] qu:quad)\r\n        {\r\n            int p = i+qu[0];\r\n            int q = j+qu[1];\r\n            \r\n            if(findWord(p,q,board,s,cnt+1))\r\n            {\r\n                res = true;\r\n                break;\r\n            }\r\n        }\r\n        board[i][j] = cuch;\r\n        return res;\r\n    }\r\n}"
}