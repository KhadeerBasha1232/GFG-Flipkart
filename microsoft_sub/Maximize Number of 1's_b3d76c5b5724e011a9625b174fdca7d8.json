{
  "code": "// Initial Template for Java\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nclass GFG {\r\n    // Driver code\r\n    public static void main(String[] args) throws Exception {\r\n        BufferedReader br =\r\n            new BufferedReader(new InputStreamReader(System.in));\r\n        int t = Integer.parseInt(br.readLine().trim());\r\n        while (t-- > 0) {\r\n            int n = Integer.parseInt(br.readLine().trim());\r\n            String[] str = br.readLine().trim().split(\" \");\r\n            int[] arr = new int[n];\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = Integer.parseInt(str[i]);\r\n            }\r\n            int m = Integer.parseInt(br.readLine().trim());\r\n\r\n            int ans = new Solve().findZeroes(arr, n, m);\r\n\r\n            System.out.println(ans);\r\n        }\r\n    }\r\n}\r\n// } Driver Code Ends\r\n\r\n\r\n// User function Template for Java\r\n\r\nclass Solve {\r\n    // m is maximum of number zeroes allowed to flip\r\n    int findZeroes(int arr[], int n, int m) {\r\n        // code here\r\n        int ctr = 0, low = 0, ans = 0;\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            if(arr[i] == 0)\r\n                ctr++;\r\n                \r\n        \r\n                while(low < i && ctr > m){\r\n                    if(arr[low] == 0)\r\n                        ctr--;\r\n                    low++;\r\n                }\r\n            \r\n            \r\n            ans = Math.max(ans, (i - low +1));\r\n        }\r\n        return ans;\r\n    }\r\n}",
  "status": "1",
  "language": "java",
  "user_code": "\r\n\r\n// User function Template for Java\r\n\r\nclass Solve {\r\n    // m is maximum of number zeroes allowed to flip\r\n    int findZeroes(int arr[], int n, int m) {\r\n        // code here\r\n        int ctr = 0, low = 0, ans = 0;\r\n        \r\n        for(int i=0; i<n; i++){\r\n            \r\n            if(arr[i] == 0)\r\n                ctr++;\r\n                \r\n        \r\n                while(low < i && ctr > m){\r\n                    if(arr[low] == 0)\r\n                        ctr--;\r\n                    low++;\r\n                }\r\n            \r\n            \r\n            ans = Math.max(ans, (i - low +1));\r\n        }\r\n        return ans;\r\n    }\r\n}"
}