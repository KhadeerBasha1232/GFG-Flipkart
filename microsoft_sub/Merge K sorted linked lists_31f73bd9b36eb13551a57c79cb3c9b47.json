{
  "code": "// C++ program to merge k sorted arrays of size n each\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// A Linked List node\r\nstruct Node\r\n{\r\n\tint data;\r\n\tNode* next;\r\n\t\r\n\tNode(int x){\r\n\t    data = x;\r\n\t    next = NULL;\r\n\t}\r\n\t\r\n};\r\n\r\n/* Function to print nodes in a given linked list */\r\nvoid printList(Node* node)\r\n{\r\n\twhile (node != NULL)\r\n\t{\r\n\t\tprintf(\"%d \", node->data);\r\n\t\tnode = node->next;\r\n\t}\r\n\tcout<<endl;\r\n}\r\n\r\n// } Driver Code Ends\r\n/*Linked list Node structure\r\n\r\nstruct Node\r\n{\r\n\tint data;\r\n\tNode* next;\r\n\t\r\n\tNode(int x){\r\n\t    data = x;\r\n\t    next = NULL;\r\n\t}\r\n\t\r\n};\r\n*/ \r\n\r\nclass Solution{\r\n  public:\r\n    //Function to merge K sorted linked list.\r\n    Node * mergeKLists(Node *arr[], int k)\r\n    {\r\n          priority_queue<pair<int,Node*>,vector<pair<int,Node*>>,greater<pair<int,Node*>>> pq;\r\n          \r\n            for(int i=0;i<k;i++)\r\n            {\r\n                pq.push({arr[i]->data,arr[i]});\r\n            }\r\n            Node* ans=new Node(-1);\r\n            Node* ref=ans;\r\n            while(!pq.empty())\r\n            {\r\n                Node* curr=pq.top().second;\r\n                int ele=pq.top().first;\r\n                pq.pop();\r\n                Node* temp=new Node(ele);\r\n                ref->next=temp;\r\n                ref=temp;\r\n                if(curr->next != NULL)\r\n                {\r\n                    pq.push({curr->next->data,curr->next});\r\n                }\r\n            }\r\n        return ans->next;\r\n    }\r\n};\r\n\r\n\r\n\r\n//{ Driver Code Starts.\r\n// Driver program to test above functions\r\nint main()\r\n{\r\n   int t;\r\n   cin>>t;\r\n   while(t--)\r\n   {\r\n\t   int N;\r\n\t   cin>>N;\r\n       struct Node *arr[N];\r\n       for(int j=0;j<N;j++)\r\n        {\r\n           int n;\r\n           cin>>n;\r\n\r\n           int x;\r\n           cin>>x;\r\n           arr[j]=new Node(x);\r\n           Node *curr = arr[j];\r\n           n--;\r\n\r\n           for(int i=0;i<n;i++)\r\n           {\r\n               cin>>x;\r\n               Node *temp = new Node(x);\r\n               curr->next =temp;\r\n               curr=temp;\r\n           }\r\n   \t\t}\r\n   \t\tSolution obj;\r\n   \t\tNode *res = obj.mergeKLists(arr,N);\r\n\t\tprintList(res);\r\n\r\n   }\r\n\r\n\treturn 0;\r\n}\r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "/*Linked list Node structure\r\n\r\nstruct Node\r\n{\r\n\tint data;\r\n\tNode* next;\r\n\t\r\n\tNode(int x){\r\n\t    data = x;\r\n\t    next = NULL;\r\n\t}\r\n\t\r\n};\r\n*/ \r\n\r\nclass Solution{\r\n  public:\r\n    //Function to merge K sorted linked list.\r\n    Node * mergeKLists(Node *arr[], int k)\r\n    {\r\n          priority_queue<pair<int,Node*>,vector<pair<int,Node*>>,greater<pair<int,Node*>>> pq;\r\n          \r\n            for(int i=0;i<k;i++)\r\n            {\r\n                pq.push({arr[i]->data,arr[i]});\r\n            }\r\n            Node* ans=new Node(-1);\r\n            Node* ref=ans;\r\n            while(!pq.empty())\r\n            {\r\n                Node* curr=pq.top().second;\r\n                int ele=pq.top().first;\r\n                pq.pop();\r\n                Node* temp=new Node(ele);\r\n                ref->next=temp;\r\n                ref=temp;\r\n                if(curr->next != NULL)\r\n                {\r\n                    pq.push({curr->next->data,curr->next});\r\n                }\r\n            }\r\n        return ans->next;\r\n    }\r\n};\r\n\r\n\r\n"
}