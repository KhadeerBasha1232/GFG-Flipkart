{
  "code": "//Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    vector<vector<int> > subsets(vector<int>& A)\r\n    {\r\n        //code here\r\n        // sort(A.begin(), A.end());\r\n        vector<vector<int>> res;\r\n        vector<int> op;\r\n        solve(A, op, res);\r\n        sort(res.begin(), res.end());\r\n        return res;\r\n    }\r\n    void solve(vector<int> ip, vector<int> op, vector<vector<int>>& res) {\r\n        if(ip.size() == 0) {\r\n            // sort(op.begin(), op.end());\r\n            reverse(op.begin(), op.end());\r\n            res.push_back(op);\r\n            return;\r\n        }\r\n        int last = ip[ip.size() - 1];\r\n        ip.pop_back();\r\n        vector<int> op1 = op;\r\n        vector<int> op2 = op;\r\n        op1.push_back(last);\r\n        solve(ip, op1, res);\r\n        solve(ip, op2, res);\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, x;\r\n\t\tcin >> n;\r\n\r\n\t\tvector<int> array;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tcin >> x;\r\n\t\t\tarray.push_back(x);\r\n\t\t}\r\n        \r\n        \r\n        Solution ob;\r\n\t\tvector<vector<int> > res = ob.subsets(array);\r\n\r\n\t\t// Print result\r\n\t\tfor (int i = 0; i < res.size(); i++) {\r\n\t\t\tfor (int j = 0; j < res[i].size(); j++)\r\n\t\t\t\tcout << res[i][j] << \" \";\r\n\t\t\tcout << endl;\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    vector<vector<int> > subsets(vector<int>& A)\r\n    {\r\n        //code here\r\n        // sort(A.begin(), A.end());\r\n        vector<vector<int>> res;\r\n        vector<int> op;\r\n        solve(A, op, res);\r\n        sort(res.begin(), res.end());\r\n        return res;\r\n    }\r\n    void solve(vector<int> ip, vector<int> op, vector<vector<int>>& res) {\r\n        if(ip.size() == 0) {\r\n            // sort(op.begin(), op.end());\r\n            reverse(op.begin(), op.end());\r\n            res.push_back(op);\r\n            return;\r\n        }\r\n        int last = ip[ip.size() - 1];\r\n        ip.pop_back();\r\n        vector<int> op1 = op;\r\n        vector<int> op2 = op;\r\n        op1.push_back(last);\r\n        solve(ip, op1, res);\r\n        solve(ip, op2, res);\r\n    }\r\n};\r\n"
}