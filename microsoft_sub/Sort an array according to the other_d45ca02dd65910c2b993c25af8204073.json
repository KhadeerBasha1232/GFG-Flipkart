{
  "code": "//Initial template for C++\r\n\r\n#include <bits/stdc++.h> \r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template in C++\r\n\r\nclass Solution {\r\npublic:\r\n    // A1[]: the input array-1\r\n    // N: size of the array A1[]\r\n    // A2[]: the input array-2\r\n    // M: size of the array A2[]\r\n\r\n    // Function to sort an array according to the other array.\r\n    vector<int> sortA1ByA2(vector<int> A1, int N, vector<int> A2, int M) {\r\n        vector<int> ans;\r\n        unordered_map<int, int> mp1;  // Use mp1 instead of mp\r\n        unordered_map<int, int> mp2;  // Use mp2 instead of mp\r\n\r\n        sort(A1.begin(), A1.end());\r\n\r\n        for (int i = 0; i < N; i++) {\r\n            mp1[A1[i]]++;\r\n        }\r\n\r\n        for (int i = 0; i < M; i++) {\r\n            mp2[A2[i]]++;\r\n        }\r\n\r\n        for (int i = 0; i < M; i++) {\r\n            for (int j = 0; j < mp1[A2[i]]; j++) {\r\n                ans.push_back(A2[i]);\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < N; i++) {\r\n            // If A1 element is not present in A2, add it to the result.\r\n            if (mp2.find(A1[i]) == mp2.end()) {\r\n                ans.push_back(A1[i]);\r\n            }\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(int argc, char *argv[]) \r\n{ \r\n\t\r\n\tint t;\r\n\t\r\n\tcin >> t;\r\n\t\r\n\twhile(t--){\r\n\t    \r\n\t    int n, m;\r\n\t    cin >> n >> m;\r\n\t    \r\n\t    vector<int> a1(n);\r\n\t    vector<int> a2(m);\r\n\t    \r\n\t    for(int i = 0;i<n;i++){\r\n\t        cin >> a1[i];\r\n\t    }\r\n\t    \r\n\t    for(int i = 0;i<m;i++){\r\n\t        cin >> a2[i];\r\n\t    }\r\n\t    \r\n\t    Solution ob;\r\n\t    a1 = ob.sortA1ByA2(a1, n, a2, m); \r\n\t\r\n\t   \r\n\t    for (int i = 0; i < n; i++) \r\n\t\t    cout<<a1[i]<<\" \";\r\n\t\t\r\n\t    cout << endl;\r\n\t    \r\n\t    \r\n\t}\r\n\treturn 0; \r\n} \r\n\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template in C++\r\n\r\nclass Solution {\r\npublic:\r\n    // A1[]: the input array-1\r\n    // N: size of the array A1[]\r\n    // A2[]: the input array-2\r\n    // M: size of the array A2[]\r\n\r\n    // Function to sort an array according to the other array.\r\n    vector<int> sortA1ByA2(vector<int> A1, int N, vector<int> A2, int M) {\r\n        vector<int> ans;\r\n        unordered_map<int, int> mp1;  // Use mp1 instead of mp\r\n        unordered_map<int, int> mp2;  // Use mp2 instead of mp\r\n\r\n        sort(A1.begin(), A1.end());\r\n\r\n        for (int i = 0; i < N; i++) {\r\n            mp1[A1[i]]++;\r\n        }\r\n\r\n        for (int i = 0; i < M; i++) {\r\n            mp2[A2[i]]++;\r\n        }\r\n\r\n        for (int i = 0; i < M; i++) {\r\n            for (int j = 0; j < mp1[A2[i]]; j++) {\r\n                ans.push_back(A2[i]);\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < N; i++) {\r\n            // If A1 element is not present in A2, add it to the result.\r\n            if (mp2.find(A1[i]) == mp2.end()) {\r\n                ans.push_back(A1[i]);\r\n            }\r\n        }\r\n\r\n        return ans;\r\n    }\r\n};\r\n"
}