{
  "code": "// driver code\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function template for C++\r\n\r\nclass Solution\r\n{\r\n  public:\r\n    bool isPossibleSoln(int arr[],int n,int k, long long sol)\r\n    {   long long time=0;\r\n        int c=1;\r\n        for(int i=0;i<n;i++)\r\n        {   \r\n            if(arr[i]>sol)\r\n            return false;\r\n            else if(time + arr[i]>sol)\r\n            {\r\n                c++;\r\n                time=arr[i];\r\n                if(c>k)\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n            else \r\n            {\r\n                time +=arr[i];\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    long long minTime(int arr[], int n, int k)\r\n    {   long long s=0;\r\n        long long e=0;\r\n        long long ans=-1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            e+=arr[i];\r\n        }\r\n        \r\n        while(s<=e)\r\n        {   long long mid=s+(e-s)/2;\r\n            if(isPossibleSoln(arr,n,k,mid))\r\n        {\r\n            ans=mid;\r\n            e=mid-1;\r\n        }\r\n        else\r\n        {\r\n            s=mid+1;\r\n        }\r\n        }\r\n        return ans;\r\n        \r\n    }\r\n    \r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tint k,n;\r\n\t\tcin>>k>>n;\r\n\t\t\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t    cin>>arr[i];\r\n\t\tSolution obj;\r\n\t\tcout << obj.minTime(arr, n, k) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function template for C++\r\n\r\nclass Solution\r\n{\r\n  public:\r\n    bool isPossibleSoln(int arr[],int n,int k, long long sol)\r\n    {   long long time=0;\r\n        int c=1;\r\n        for(int i=0;i<n;i++)\r\n        {   \r\n            if(arr[i]>sol)\r\n            return false;\r\n            else if(time + arr[i]>sol)\r\n            {\r\n                c++;\r\n                time=arr[i];\r\n                if(c>k)\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n            else \r\n            {\r\n                time +=arr[i];\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    long long minTime(int arr[], int n, int k)\r\n    {   long long s=0;\r\n        long long e=0;\r\n        long long ans=-1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            e+=arr[i];\r\n        }\r\n        \r\n        while(s<=e)\r\n        {   long long mid=s+(e-s)/2;\r\n            if(isPossibleSoln(arr,n,k,mid))\r\n        {\r\n            ans=mid;\r\n            e=mid-1;\r\n        }\r\n        else\r\n        {\r\n            s=mid+1;\r\n        }\r\n        }\r\n        return ans;\r\n        \r\n    }\r\n    \r\n};\r\n"
}