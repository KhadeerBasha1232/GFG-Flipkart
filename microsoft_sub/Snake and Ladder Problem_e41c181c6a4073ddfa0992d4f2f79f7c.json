{
  "code": "// Initial Template for C++\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// } Driver Code Ends\r\n// User function Template for C++\r\n\r\nclass Solution\r\n{\r\npublic:\r\n    int minThrow(int N, int arr[]){\r\n        // code here\r\n        unordered_map<int,int>snakes,ladder;\r\n        for(int i=0;i<=N/2;i++){\r\n           ladder[arr[2*i]]=arr[2*i+1];\r\n           \r\n        }\r\n        for(int i=N;i<=N*N/2;i++){\r\n            snakes[arr[2*i]]=arr[2*i+1];\r\n        }\r\n        queue<int>q;\r\n       vector<int>vis(31,false);\r\n        q.push(1);\r\n        vis[1]=true;\r\n        int steps=0;\r\n        while(!q.empty()){\r\n            int N=q.size();\r\n            while(N--){\r\n                int x=q.front();\r\n                q.pop();\r\n                if(x==30) return steps;\r\n                for(int k=1;k<=6;k++){\r\n                    int val=x+k;\r\n                    if(val>30){\r\n                        break;\r\n                    }\r\n                \r\n                    if(vis[val]==true) continue;\r\n                    vis[val]=true;\r\n                    if(ladder.find(val)!=ladder.end()){\r\n                        q.push(ladder[val]);\r\n                        \r\n                    }\r\n                    if(snakes.find(val)!=snakes.end()){\r\n                        q.push(snakes[val]);\r\n                    }\r\n                    else{\r\n                        q.push(val);\r\n                    }\r\n                   \r\n                }\r\n                \r\n            }\r\n            steps++;\r\n        }\r\n        \r\n    return -1;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int N;\r\n        cin>>N;\r\n        int arr[2*N];\r\n        for(int i = 0;i < 2*N;i++)\r\n            cin>>arr[i];\r\n        \r\n        Solution ob;\r\n        cout<<ob.minThrow(N, arr)<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "// User function Template for C++\r\n\r\nclass Solution\r\n{\r\npublic:\r\n    int minThrow(int N, int arr[]){\r\n        // code here\r\n        unordered_map<int,int>snakes,ladder;\r\n        for(int i=0;i<=N/2;i++){\r\n           ladder[arr[2*i]]=arr[2*i+1];\r\n           \r\n        }\r\n        for(int i=N;i<=N*N/2;i++){\r\n            snakes[arr[2*i]]=arr[2*i+1];\r\n        }\r\n        queue<int>q;\r\n       vector<int>vis(31,false);\r\n        q.push(1);\r\n        vis[1]=true;\r\n        int steps=0;\r\n        while(!q.empty()){\r\n            int N=q.size();\r\n            while(N--){\r\n                int x=q.front();\r\n                q.pop();\r\n                if(x==30) return steps;\r\n                for(int k=1;k<=6;k++){\r\n                    int val=x+k;\r\n                    if(val>30){\r\n                        break;\r\n                    }\r\n                \r\n                    if(vis[val]==true) continue;\r\n                    vis[val]=true;\r\n                    if(ladder.find(val)!=ladder.end()){\r\n                        q.push(ladder[val]);\r\n                        \r\n                    }\r\n                    if(snakes.find(val)!=snakes.end()){\r\n                        q.push(snakes[val]);\r\n                    }\r\n                    else{\r\n                        q.push(val);\r\n                    }\r\n                   \r\n                }\r\n                \r\n            }\r\n            steps++;\r\n        }\r\n        \r\n    return -1;\r\n    }\r\n};\r\n"
}