{
  "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution\r\n{\r\n    public:\r\n    int f(int n, int x, int y, int z, vector<int>&dp)\r\n    {\r\n        if(n==0)return 0;\r\n        if(n<0)return INT_MIN;\r\n        if(dp[n]!=-1)return dp[n];\r\n        return dp[n] = max({1+f(n-x,x,y,z,dp),1+f(n-y,x,y,z,dp),1+f(n-z,x,y,z,dp)});\r\n    }\r\n    //Function to find the maximum number of cuts.\r\n    int maximizeTheCuts(int n, int x, int y, int z)\r\n    {\r\n        vector<int>dp(n+1,-1);\r\n        int ans= f(n,x,y,z,dp);\r\n        return ans<0?0:ans;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\nint main() {\r\n    \r\n    //taking testcases\r\n    int t;\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n        //taking length of line segment\r\n        int n;\r\n        cin >> n;\r\n        \r\n        //taking types of segments\r\n        int x,y,z;\r\n        cin>>x>>y>>z;\r\n        Solution obj;\r\n        //calling function maximizeTheCuts()\r\n        cout<<obj.maximizeTheCuts(n,x,y,z)<<endl;\r\n\r\n    }\r\n\r\n\treturn 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution\r\n{\r\n    public:\r\n    int f(int n, int x, int y, int z, vector<int>&dp)\r\n    {\r\n        if(n==0)return 0;\r\n        if(n<0)return INT_MIN;\r\n        if(dp[n]!=-1)return dp[n];\r\n        return dp[n] = max({1+f(n-x,x,y,z,dp),1+f(n-y,x,y,z,dp),1+f(n-z,x,y,z,dp)});\r\n    }\r\n    //Function to find the maximum number of cuts.\r\n    int maximizeTheCuts(int n, int x, int y, int z)\r\n    {\r\n        vector<int>dp(n+1,-1);\r\n        int ans= f(n,x,y,z,dp);\r\n        return ans<0?0:ans;\r\n    }\r\n};\r\n"
}