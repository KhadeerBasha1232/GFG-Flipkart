{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\n    int breakpoint(int arr[],int n,int ind,int uprlmt)\r\n    {\r\n        for(int i=ind;i<n;i++)\r\n        {\r\n            if(arr[i] >uprlmt) return i;\r\n        }\r\n        return n;\r\n    }\r\n  \r\n  public:\r\n    int minSteps(int A[], int n, int k) {\r\n       \r\n        sort(A ,A+n);\r\n        \r\n        int cumsum[n];\r\n        cumsum[0]=A[0];\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            cumsum[i]=A[i]+cumsum[i-1];\r\n        }\r\n        int ans=INT_MAX,prev=0; // for delete\r\n        \r\n        for(int i=0;i<n;i++)\r\n        {   int c=1;\r\n            while(i+1<n && A[i]==A[i+1]) {\r\n                c++;\r\n                i++;\r\n                continue;}\r\n            \r\n            int uprlmt=A[i]+k;\r\n            int bp=upper_bound(A,A+n,uprlmt)-A;\r\n            \r\n            \r\n            int less_se=(cumsum[n-1]-cumsum[bp-1]);\r\n            less_se-=(uprlmt*(n-bp)); // no of element\r\n           \r\n            \r\n            ans=min(less_se+prev,ans);\r\n            prev+=(A[i]*c);\r\n        }\r\n        if(ans==INT_MAX)  return 0;\r\n        return ans;\r\n        \r\n        \r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int N, K;\r\n        cin>>N>>K;\r\n        \r\n        int A[N];\r\n        for(int i=0; i<N; i++)\r\n            cin>>A[i];\r\n\r\n        Solution ob;\r\n        cout << ob.minSteps(A,N,K) << endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\n    int breakpoint(int arr[],int n,int ind,int uprlmt)\r\n    {\r\n        for(int i=ind;i<n;i++)\r\n        {\r\n            if(arr[i] >uprlmt) return i;\r\n        }\r\n        return n;\r\n    }\r\n  \r\n  public:\r\n    int minSteps(int A[], int n, int k) {\r\n       \r\n        sort(A ,A+n);\r\n        \r\n        int cumsum[n];\r\n        cumsum[0]=A[0];\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            cumsum[i]=A[i]+cumsum[i-1];\r\n        }\r\n        int ans=INT_MAX,prev=0; // for delete\r\n        \r\n        for(int i=0;i<n;i++)\r\n        {   int c=1;\r\n            while(i+1<n && A[i]==A[i+1]) {\r\n                c++;\r\n                i++;\r\n                continue;}\r\n            \r\n            int uprlmt=A[i]+k;\r\n            int bp=upper_bound(A,A+n,uprlmt)-A;\r\n            \r\n            \r\n            int less_se=(cumsum[n-1]-cumsum[bp-1]);\r\n            less_se-=(uprlmt*(n-bp)); // no of element\r\n           \r\n            \r\n            ans=min(less_se+prev,ans);\r\n            prev+=(A[i]*c);\r\n        }\r\n        if(ans==INT_MAX)  return 0;\r\n        return ans;\r\n        \r\n        \r\n    }\r\n};\r\n\r\n"
}