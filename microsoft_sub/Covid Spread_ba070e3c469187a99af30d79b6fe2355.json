{
  "code": "//Initial Template for C++\r\n\r\n\r\n#include<bits/stdc++.h> \r\nusing namespace std; \r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n    int helpaterp(vector<vector<int>> hos)\r\n    {\r\n        queue<pair<pair<int,int>,int>>q;\r\n          int n=hos.size();\r\n          int m=hos[0].size();\r\n          vector<vector<int>> vis (n,vector<int>(m,0));\r\n          for(int i=0;i<n;i++)\r\n          {\r\n              for(int j=0;j<m;j++)\r\n              {\r\n                 if(hos[i][j]==2)\r\n                 {\r\n                     q.push({{i,j},0});\r\n                     vis[i][j]=1;\r\n                 }\r\n              }\r\n          }\r\n          int ans=0;\r\n          int step=0;\r\n          int dr[]={-1,1,0,0};\r\n          int dc[]={0,0,-1,1};\r\n          while(!q.empty())\r\n          {\r\n              int r=q.front().first.first;\r\n              int c=q.front().first.second;\r\n              step=q.front().second;\r\n              \r\n              ans=max(ans,step);\r\n              q.pop();\r\n              \r\n              for(int i=0;i<4;i++)\r\n              {\r\n                  int nr=r+dr[i];\r\n                  int nc=c+dc[i];\r\n                  \r\n                  if(nr>=0 && nr<n && nc>=0 && nc<m && vis[nr][nc]==0 && hos[nr][nc]==1)\r\n                  {\r\n                     vis[nr][nc]=1;\r\n                     q.push({{nr,nc},step+1});\r\n                     \r\n                     hos[nr][nc]=2;\r\n                  }\r\n              }\r\n              \r\n              \r\n          }\r\n          \r\n         // if(ans==INT_MAX) return -1;\r\n           for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=0;j<m;j++)\r\n            {\r\n                if(hos[i][j]==1)\r\n                return -1;\r\n            }\r\n        }\r\n          return ans;\r\n          \r\n          \r\n          \r\n    }\r\n};\r\n\r\n\r\n//{ Driver Code Starts.\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int R;int C;\r\n        \r\n        cin>>R>>C;\r\n        vector<vector<int>> hospital;\r\n        int i,j;\r\n        for(i=0;i<R;i++)\r\n         {   vector<int> temp;\r\n             for(j=0;j<C;j++)\r\n            {\r\n                int k;\r\n                cin>>k;\r\n                temp.push_back(k);\r\n            }\r\n            hospital.push_back(temp);\r\n         }\r\n        \r\n        Solution ob;\r\n        int ans = ob.helpaterp(hospital);\r\n        cout << ans << endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n\r\nclass Solution {\r\npublic:\r\n    int helpaterp(vector<vector<int>> hos)\r\n    {\r\n        queue<pair<pair<int,int>,int>>q;\r\n          int n=hos.size();\r\n          int m=hos[0].size();\r\n          vector<vector<int>> vis (n,vector<int>(m,0));\r\n          for(int i=0;i<n;i++)\r\n          {\r\n              for(int j=0;j<m;j++)\r\n              {\r\n                 if(hos[i][j]==2)\r\n                 {\r\n                     q.push({{i,j},0});\r\n                     vis[i][j]=1;\r\n                 }\r\n              }\r\n          }\r\n          int ans=0;\r\n          int step=0;\r\n          int dr[]={-1,1,0,0};\r\n          int dc[]={0,0,-1,1};\r\n          while(!q.empty())\r\n          {\r\n              int r=q.front().first.first;\r\n              int c=q.front().first.second;\r\n              step=q.front().second;\r\n              \r\n              ans=max(ans,step);\r\n              q.pop();\r\n              \r\n              for(int i=0;i<4;i++)\r\n              {\r\n                  int nr=r+dr[i];\r\n                  int nc=c+dc[i];\r\n                  \r\n                  if(nr>=0 && nr<n && nc>=0 && nc<m && vis[nr][nc]==0 && hos[nr][nc]==1)\r\n                  {\r\n                     vis[nr][nc]=1;\r\n                     q.push({{nr,nc},step+1});\r\n                     \r\n                     hos[nr][nc]=2;\r\n                  }\r\n              }\r\n              \r\n              \r\n          }\r\n          \r\n         // if(ans==INT_MAX) return -1;\r\n           for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=0;j<m;j++)\r\n            {\r\n                if(hos[i][j]==1)\r\n                return -1;\r\n            }\r\n        }\r\n          return ans;\r\n          \r\n          \r\n          \r\n    }\r\n};\r\n\r\n"
}