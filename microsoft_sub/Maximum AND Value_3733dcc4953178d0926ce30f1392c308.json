{
  "code": "//Initial Template for C++\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\n//User function Template for C++\r\n \r\nclass Solution\r\n{\r\n    public:\r\n    bool checkBit(int N, int pattern){\r\n        if((N & pattern) == pattern){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // Function for finding maximum AND value.\r\n    int maxAND (int arr[], int N)\r\n    {\r\n        int result = 0;\r\n        \r\n        for(int i = 31; i >= 0; i--){\r\n            int count = 0;\r\n            for(int j = 0; j < N; j++){\r\n                if(((result | (1 << i)) & arr[j]) == (result | (1 << i))){\r\n                    count += 1;\r\n                }\r\n            }\r\n            \r\n            if(count >= 2){\r\n                result = result | (1 << i);\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n \r\n// Driver function\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;//testcases\r\n    while(t--)\r\n    {\r\n        int n;\r\n        cin>>n;//input n\r\n        int arr[n+5],i;\r\n        \r\n        //inserting elements\r\n        for(i=0;i<n;i++)\r\n        cin>>arr[i];\r\n        Solution obj;\r\n        //calling maxAND() function\r\n        cout <<  obj.maxAND(arr,n)<<endl;\r\n    }\r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "//User function Template for C++\r\n \r\nclass Solution\r\n{\r\n    public:\r\n    bool checkBit(int N, int pattern){\r\n        if((N & pattern) == pattern){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // Function for finding maximum AND value.\r\n    int maxAND (int arr[], int N)\r\n    {\r\n        int result = 0;\r\n        \r\n        for(int i = 31; i >= 0; i--){\r\n            int count = 0;\r\n            for(int j = 0; j < N; j++){\r\n                if(((result | (1 << i)) & arr[j]) == (result | (1 << i))){\r\n                    count += 1;\r\n                }\r\n            }\r\n            \r\n            if(count >= 2){\r\n                result = result | (1 << i);\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n};\r\n"
}