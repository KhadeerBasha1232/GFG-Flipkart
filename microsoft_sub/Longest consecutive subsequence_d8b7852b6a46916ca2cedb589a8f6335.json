{
  "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n// } Driver Code Ends\r\nclass Solution{\r\n  public:\r\n    // arr[] : the input array\r\n    // N : size of the array arr[]\r\n    \r\n    //Function to return length of longest subsequence of consecutive integers.\r\n    int findLongestConseqSubseq(int arr[], int N)\r\n    {\r\n      if(N==0) return -1;\r\n      unordered_set<int>st;\r\n      int longest = 0;\r\n      for(int i=0;i<N;i++){\r\n          st.insert(arr[i]);\r\n      }\r\n      for(auto it:st){\r\n          if(st.find(it-1)==st.end()){\r\n            int count = 1;\r\n            int x = it;\r\n            while(st.find(x+1)!=st.end()){\r\n                count+=1;\r\n                x=x+1;\r\n            }\r\n            longest = max(count,longest);\r\n          }\r\n      }\r\n      return longest;\r\n    }\r\n};\r\n\r\n//{ Driver Code Starts.\r\n \r\n// Driver program\r\nint main()\r\n{\r\n int  t,n,i,a[100001];\r\n cin>>t;\r\n while(t--)\r\n {\r\n  cin>>n;\r\n  for(i=0;i<n;i++)\r\n  cin>>a[i];\r\n  Solution obj;\r\n  cout<<obj.findLongestConseqSubseq(a, n)<<endl;\r\n }\r\n      \r\n    return 0;\r\n}\r\n// } Driver Code Ends",
  "status": "1",
  "language": "cpp",
  "user_code": "class Solution{\r\n  public:\r\n    // arr[] : the input array\r\n    // N : size of the array arr[]\r\n    \r\n    //Function to return length of longest subsequence of consecutive integers.\r\n    int findLongestConseqSubseq(int arr[], int N)\r\n    {\r\n      if(N==0) return -1;\r\n      unordered_set<int>st;\r\n      int longest = 0;\r\n      for(int i=0;i<N;i++){\r\n          st.insert(arr[i]);\r\n      }\r\n      for(auto it:st){\r\n          if(st.find(it-1)==st.end()){\r\n            int count = 1;\r\n            int x = it;\r\n            while(st.find(x+1)!=st.end()){\r\n                count+=1;\r\n                x=x+1;\r\n            }\r\n            longest = max(count,longest);\r\n          }\r\n      }\r\n      return longest;\r\n    }\r\n};\r\n"
}